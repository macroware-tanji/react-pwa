{"version":3,"sources":["Home.js","Page1.js","Me.js","Others.js","About.js","Contact.js","FacePositionMask2.svg","Camera.js","Camera2.js","NotFound.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Home","props","console","log","Component","Page1","Me","OthersClass","id","params","is","this","Others","useParams","About","Contact","Camera","state","imageLoaded","x1","y1","x2","y2","inputFile","React","createRef","imgRef","canvasRef","imgMaskRef","ctx","onChange","bind","onClickChoosePhoto","imgPosX","imgPosY","imgZoomRate","toucheInfos","current","addEventListener","e","preventDefault","rect","getBoundingClientRect","touches","changedTouches","NaN","id1","id2","length","clientX","clientY","left","top","identifier","setState","canvasWidth","width","canvasHeight","height","clearRect","beginPath","arc","Math","PI","fillStyle","fill","isNaN","touch","x","y","Object","keys","prevX","prevY","currX","currY","key","dx","dy","drawImage","push","prevDist","sqrt","pow","exists","ids","dir","zoomRate","midXInCanvas","midYInCanvas","prevWidth","prevHeight","depth","getContext","zoomAndMove2","target","files","file","fr","FileReader","url","result","src","onload","rateW","rateH","rate","dstWidth","dstHeight","dstPosX","dstPosY","readAsDataURL","click","type","className","ref","accept","onClick","alt","FacePositionMask2","Camera2","takeButtonEnable","retakeButtonEnable","startCameraButtonEnable","videoRef","onClickTake","onClickRetake","onClickStartCamera","mediaDevices","navigator","mozGetUserMedia","webkitGetUserMedia","getUserMedia","c","Promise","n","call","audio","video","facingMode","then","stream","onerror","alert","srcObject","catch","error","startCamera","pause","classList","contains","add","remove","play","autoPlay","playsInline","muted","disabled","NotFound","to","Layout","navigate","useNavigate","handleClick","name","App","exact","path","element","index","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppWithNavigate","ReactDOM","render","StrictMode","basename","document","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"8SAEqBA,E,kDACjB,WAAYC,GAAM,OAAC,oBACfC,QAAQC,IAAI,oBADE,YAERF,G,qDAKV,WACIC,QAAQC,IAAI,4B,kCAEhB,WACID,QAAQC,IAAI,+B,oBAEhB,WACI,OACI,8BACI,4C,GAjBkBC,aCAbC,E,kDACjB,WAAYJ,GAAM,OAAC,oBACfC,QAAQC,IAAI,qBADE,YAERF,G,qDAKV,WACIC,QAAQC,IAAI,6B,kCAEhB,WACID,QAAQC,IAAI,gC,oBAEhB,WACI,OACI,8BACI,6C,GAjBmBC,aCAdE,E,kDACjB,WAAYL,GAAM,OAAC,oBACfC,QAAQC,IAAI,kBADE,YAERF,G,qDAKV,WACIC,QAAQC,IAAI,0B,kCAEhB,WACID,QAAQC,IAAI,6B,oBAEhB,WACI,OACI,8BACI,0C,GAjBgBC,aCE1BG,E,kDACF,WAAYN,GAAO,IAAD,sBACdC,QAAQC,IAAI,sBAMZ,IAAOK,GALP,cAAMP,IAKYA,MAAMQ,OAAjBD,GAPO,OAQd,EAAKE,GAAGF,EACRN,QAAQC,IAAIK,GATE,E,qDAWlB,WACIN,QAAQC,IAAI,8B,kCAEhB,WACID,QAAQC,IAAI,iC,oBAEhB,WACI,OACI,8BACI,yCAAYQ,KAAKD,Y,GArBPN,aA0BX,SAASQ,IACpB,IAAMH,EAASI,cACf,OACI,cAAC,EAAD,CAAaJ,OAAQA,I,IC/BRK,E,kDACjB,WAAYb,GAAM,OAAC,oBACfC,QAAQC,IAAI,qBADE,YAERF,G,qDAKV,WACIC,QAAQC,IAAI,6B,kCAEhB,WACID,QAAQC,IAAI,gC,oBAEhB,WACI,OACI,8BACI,6C,GAjBmBC,aCAdW,E,kDACjB,WAAYd,GAAM,OAAC,oBACfC,QAAQC,IAAI,uBADE,YAERF,G,qDAKV,WACIC,QAAQC,IAAI,+B,kCAEhB,WACID,QAAQC,IAAI,kC,oBAEhB,WACI,OACI,8BACI,+C,GAjBqBC,a,eCFtB,G,MAAA,IAA0B,+CCIpBY,E,kDACjB,WAAYf,GAAO,IAAD,6BACdC,QAAQC,IAAI,uBACZ,cAAMF,IACDgB,MAAQ,CACRC,aAAY,EACZC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,GAER,EAAKC,UAAYC,IAAMC,YACvB,EAAKC,OAASF,IAAMC,YACpB,EAAKE,UAAYH,IAAMC,YACvB,EAAKG,WAAaJ,IAAMC,YACxB,EAAKI,IAAM,KACX,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,mBAAqB,EAAKA,mBAAmBD,KAAxB,gBAE1B,EAAKE,QAAU,EACf,EAAKC,QAAU,EACf,EAAKC,YAAc,EApBL,E,gDAuBlB,WAAe,IAAD,OACVxB,KAAKyB,YAAc,GAEnBzB,KAAKgB,UAAUU,QAAQC,iBAAiB,cAAa,SAACC,GAClDA,EAAEC,iBACF,IAAMC,EAAO,EAAKd,UAAUU,QAAQK,wBAC9BC,EAAUJ,EAAEK,eAEdzB,EAAK0B,IACLzB,EAAKyB,IACLxB,EAAKwB,IACLvB,EAAKuB,IACLC,EAAID,IACJE,EAAIF,IACLF,EAAQK,OAAO,IACd7B,EAAKwB,EAAQ,GAAGM,QACtB7B,EAAKuB,EAAQ,GAAGO,QACV/B,GAAMsB,EAAKU,KACX/B,GAAMqB,EAAKW,IACXN,EAAMH,EAAQ,GAAGU,YAElBV,EAAQK,OAAO,IACd3B,EAAKsB,EAAQ,GAAGM,QACtB3B,EAAKqB,EAAQ,GAAGO,QACV7B,GAAMoB,EAAKU,KACX7B,GAAMmB,EAAKW,IACXL,EAAMJ,EAAQ,GAAGU,YAErB,EAAKC,SAAS,CAACnC,GAAGA,EACdC,GAAGA,EAAGC,GAAGA,EACTC,GAAGA,IAEP,IAAMiC,EAAc,EAAK5B,UAAUU,QAAQmB,MACrCC,EAAe,EAAK9B,UAAUU,QAAQqB,OAI5CxD,QAAQC,IAAR,6BAAkCgB,EAAlC,YAAwCC,EAAxC,YAA8C0B,EAA9C,cAAuDzB,EAAvD,YAA6DC,EAA7D,YAAmEyB,EAAnE,MACA,EAAKlB,IAAI8B,UAAU,EAAE,EAAE,EAAKhC,UAAUU,QAAQmB,MAAM,EAAK7B,UAAUU,QAAQqB,QAC3E,EAAK7B,IAAI+B,YACT,EAAK/B,IAAIgC,IAAI1C,EAAGoC,EANI,IAMmBnC,EAAGqC,EALrB,IAK8C,GAAG,EAAE,EAAEK,KAAKC,IAAG,GAClF,EAAKlC,IAAImC,UAAU,oBACnB,EAAKnC,IAAIoC,UAEbtD,KAAKgB,UAAUU,QAAQC,iBAAiB,YAAW,SAACC,GAChDA,EAAEC,iBACF,IAAMC,EAAO,EAAKd,UAAUU,QAAQK,wBAE9BC,EAAUJ,EAAEK,eAEdzB,EAAK0B,IACLzB,EAAKyB,IACLxB,EAAKwB,IACLvB,EAAKuB,IACLC,EAAID,IACJE,EAAIF,IACLF,EAAQK,OAAO,IACd7B,EAAKwB,EAAQ,GAAGM,QACtB7B,EAAKuB,EAAQ,GAAGO,QACV/B,GAAMsB,EAAKU,KACX/B,GAAMqB,EAAKW,IACXN,EAAMH,EAAQ,GAAGU,YAElBV,EAAQK,OAAO,IACd3B,EAAKsB,EAAQ,GAAGM,QACtB3B,EAAKqB,EAAQ,GAAGO,QACV7B,GAAMoB,EAAKU,KACX7B,GAAMmB,EAAKW,IACXL,EAAMJ,EAAQ,GAAGU,YAErB,EAAKC,SAAS,CAACnC,GAAGA,EACdC,GAAGA,EAAGC,GAAGA,EACTC,GAAGA,IAEP,IAAMiC,EAAc,EAAK5B,UAAUU,QAAQmB,MACrCC,EAAe,EAAK9B,UAAUU,QAAQqB,OAI5CxD,QAAQC,IAAR,2BAAgCgB,EAAhC,YAAsCC,EAAtC,YAA4C0B,EAA5C,cAAqDzB,EAArD,YAA2DC,EAA3D,YAAiEyB,EAAjE,MAEA,EAAKlB,IAAI8B,UAAU,EAAE,EAAE,EAAKhC,UAAUU,QAAQmB,MAAM,EAAK7B,UAAUU,QAAQqB,QAC3E,EAAK7B,IAAI+B,YACT,EAAK/B,IAAIgC,IAAI1C,EAAGoC,EAPI,IAOmBnC,EAAGqC,EANrB,IAM8C,GAAG,EAAE,EAAEK,KAAKC,IAAG,GAClF,EAAKlC,IAAImC,UAAU,oBACnB,EAAKnC,IAAIoC,UAIbtD,KAAKgB,UAAUU,QAAQC,iBAAiB,eAAc,SAACC,GACnDA,EAAEC,iBAEF,IAAMC,EAAO,EAAKd,UAAUU,QAAQK,wBAE9BC,EAAUJ,EAAEK,eACdzB,EAAK0B,IACLzB,EAAKyB,IACLxB,EAAKwB,IACLvB,EAAKuB,IACLC,EAAID,IACJE,EAAIF,IACLF,EAAQK,OAAO,IACd7B,EAAKwB,EAAQ,GAAGM,QACtB7B,EAAKuB,EAAQ,GAAGO,QACV/B,GAAMsB,EAAKU,KACX/B,GAAMqB,EAAKW,IACXN,EAAMH,EAAQ,GAAGU,YAElBV,EAAQK,OAAO,IACd3B,EAAKsB,EAAQ,GAAGM,QACtB3B,EAAKqB,EAAQ,GAAGO,QACV7B,GAAMoB,EAAKU,KACX7B,GAAMmB,EAAKW,IACXL,EAAMJ,EAAQ,GAAGU,YAErB,EAAKC,SAAS,CAACnC,GAAGA,EACdC,GAAGA,EAAGC,GAAGA,EACTC,GAAGA,IAEPpB,QAAQC,IAAR,8BAAmCgB,EAAnC,YAAyCC,EAAzC,YAA+C0B,EAA/C,cAAwDzB,EAAxD,YAA8DC,EAA9D,YAAoEyB,EAApE,MAOA,EAAKlB,IAAI8B,UAAU,EAAE,EAAE,EAAKhC,UAAUU,QAAQmB,MAAM,EAAK7B,UAAUU,QAAQqB,WAI/E/C,KAAKgB,UAAUU,QAAQC,iBAAiB,aAAY,SAACC,GACjDA,EAAEC,iBACF,IAAMC,EAAO,EAAKd,UAAUU,QAAQK,wBAE9BC,EAAUJ,EAAEK,eAEdzB,EAAK0B,IACLzB,EAAKyB,IACLxB,EAAKwB,IACLvB,EAAKuB,IACLC,EAAID,IACJE,EAAIF,IACLF,EAAQK,OAAO,IACd7B,EAAKwB,EAAQ,GAAGM,QACtB7B,EAAKuB,EAAQ,GAAGO,QACV/B,GAAMsB,EAAKU,KACX/B,GAAMqB,EAAKW,IACXN,EAAMH,EAAQ,GAAGU,YAElBV,EAAQK,OAAO,IACd3B,EAAKsB,EAAQ,GAAGM,QACtB3B,EAAKqB,EAAQ,GAAGO,QACV7B,GAAMoB,EAAKU,KACX7B,GAAMmB,EAAKW,IACXL,EAAMJ,EAAQ,GAAGU,YAErB,EAAKC,SAAS,CAACnC,GAAGA,EACdC,GAAGA,EAAGC,GAAGA,EACTC,GAAGA,IAGP,IAAMiC,EAAc,EAAK5B,UAAUU,QAAQmB,MACrCC,EAAe,EAAK9B,UAAUU,QAAQqB,OAI5CxD,QAAQC,IAAR,4BAAiCgB,EAAjC,YAAuCC,EAAvC,YAA6C0B,EAA7C,cAAsDzB,EAAtD,YAA4DC,EAA5D,YAAkEyB,EAAlE,MAEA,EAAKlB,IAAI8B,UAAU,EAAE,EAAE,EAAKhC,UAAUU,QAAQmB,MAAM,EAAK7B,UAAUU,QAAQqB,QAC3E,EAAK7B,IAAI+B,YACT,EAAK/B,IAAIgC,IAAI1C,EAAGoC,EAPI,IAOmBnC,EAAGqC,EANrB,IAM8C,GAAG,EAAE,EAAEK,KAAKC,IAAG,GAClF,EAAKlC,IAAImC,UAAU,oBACnB,EAAKnC,IAAIoC,OAEJC,MAAM7C,IAAQ6C,MAAM5C,KACrB,EAAKO,IAAI+B,YACT,EAAK/B,IAAIgC,IAAIxC,EAAGkC,EAbA,IAauBjC,EAAGmC,EAZzB,IAYkD,GAAG,EAAE,EAAEK,KAAKC,IAAG,GAClF,EAAKlC,IAAImC,UAAU,oBACnB,EAAKnC,IAAIoC,a,0BAKrB,WAAe,IAAD,OACVtD,KAAKyB,YAAc,GAEnBzB,KAAKgB,UAAUU,QAAQC,iBAAiB,cAAa,SAACC,GAClDA,EAAEC,iBACF,IAFsD,EAEhDC,EAAO,EAAKd,UAAUU,QAAQK,wBAE9BC,EAAUJ,EAAEK,eAJoC,cAMrCD,GANqC,IAMtD,IAAI,EAAJ,qBAAyB,CAAC,IAAlBwB,EAAiB,QACjBC,EAAID,EAAMlB,QAChBoB,EAAIF,EAAMjB,QACRkB,GAAK3B,EAAKU,KACVkB,GAAK5B,EAAKW,IACV,IAAI5C,EAAK2D,EAAMd,WAEf,EAAKjB,YAAY5B,GAAI,CAAC4D,EAAEA,EAAEC,EAAEA,IAbsB,kCAgB1D1D,KAAKgB,UAAUU,QAAQC,iBAAiB,YAAW,SAACC,GAChDA,EAAEC,iBAGF,IAJoD,EAI9CG,EAAUJ,EAAEK,eAJkC,cAMnCD,GANmC,IAMpD,IAAI,EAAJ,qBAAyB,CAAC,IAClBnC,EADiB,QACN6C,kBACR,EAAKjB,YAAY5B,IARwB,kCAWxDG,KAAKgB,UAAUU,QAAQC,iBAAiB,eAAc,SAACC,GACnDA,EAAEC,iBAIF,IALuD,EAKjDG,EAAUJ,EAAEK,eALqC,cAMtCD,GANsC,IAMvD,IAAI,EAAJ,qBAAyB,CAAC,IAClBnC,EADiB,QACN6C,kBACR,EAAKjB,YAAY5B,IAR2B,kCAW3DG,KAAKgB,UAAUU,QAAQC,iBAAiB,aAAY,SAACC,GACjDA,EAAEC,iBACF,IAAMC,EAAO,EAAKd,UAAUU,QAAQK,wBAG9Ba,EAAc,EAAK5B,UAAUU,QAAQmB,MACrCC,EAAe,EAAK9B,UAAUU,QAAQqB,OAItCf,EAAUJ,EAAEK,eAElB,GAA6C,IAAzC0B,OAAOC,KAAK,EAAKnC,aAAaY,OAAa,CAgCvC,IA/BJ,IAAIwB,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EA4BN,MAAiBL,OAAOC,KAAK,EAAKnC,aAAlC,eAA+C,CAA3C,IAAMwC,EAAG,KACTJ,EAAQ,EAAKpC,YAAYwC,GAAKR,EAC9BK,EAAQ,EAAKrC,YAAYwC,GAAKP,EAlCK,oBAqCtB1B,GArCsB,IAqCvC,IAAI,EAAJ,qBAAyB,CAAC,IAAlBwB,EAAiB,QACjB3D,EAAK2D,EAAMd,WACZ,EAAKjB,YAAY5B,KAChBkE,EAAQP,EAAMlB,QACd0B,EAAQR,EAAMjB,QACdwB,GAASjC,EAAKU,KACdwB,GAASlC,EAAKW,IACd,EAAKhB,YAAY5B,GAAI,CAAC4D,EAAEM,EAAML,EAAEM,KA5CD,8BAgDvC,IAAME,GAAMH,EAAMF,GAASjB,EArDf,IAsDNuB,GAAMH,EAAMF,GAAShB,EArDd,IAuDbvD,QAAQC,IAAR,cAAmB0E,EAAnB,eAA4BC,EAA5B,MAEA,EAAK7C,SAAW4C,EAChB,EAAK3C,SAAW4C,EAEhB,EAAKjD,IAAIkD,UAAU,EAAKrD,OAAOW,QAC3B,EACA,EACA,EAAKX,OAAOW,QAAQmB,MACpB,EAAK9B,OAAOW,QAAQqB,OACpB,EAAKzB,QACL,EAAKC,QACL,EAAKR,OAAOW,QAAQmB,MAAQ,EAAKrB,YACjC,EAAKT,OAAOW,QAAQqB,OAAS,EAAKvB,aAEtC,EAAKN,IAAIkD,UAAU,EAAKnD,WAAWS,QAAQ,EAAE,EAAE,EAAKV,UAAUU,QAAQmB,MAAM,EAAK7B,UAAUU,QAAQqB,aAItG,GAA6C,IAAzCY,OAAOC,KAAK,EAAKnC,aAAaY,OAAa,CAGhD,IAFA,IAAIwB,EAAM,GACNC,EAAM,GACV,MAAiBH,OAAOC,KAAK,EAAKnC,aAAlC,eAA+C,CAA3C,IAAMwC,EAAG,KACTJ,EAAMQ,KAAK,EAAK5C,YAAYwC,GAAKR,GACjCK,EAAMO,KAAK,EAAK5C,YAAYwC,GAAKP,GAErC,IAPgD,EAO1CY,EAAWnB,KAAKoB,KAAMpB,KAAKqB,IAAIX,EAAM,GAAGA,EAAM,GAAG,GAAKV,KAAKqB,IAAIV,EAAM,GAAGA,EAAM,GAAG,IACnFW,GAAO,EACPC,EAAI,GATwC,cAU/B1C,GAV+B,IAUhD,IAAI,EAAJ,qBAAyB,CAAC,IAClBnC,EADiB,QACN6C,WACX,EAAKjB,YAAY5B,KACjBN,QAAQC,IAAR,qBAA0BK,IAC1B4E,GAAO,GAEXC,EAAIL,KAAKxE,IAhBmC,8BAkB5C4E,IACAlF,QAAQoF,IAAIhB,OAAOC,KAAK,EAAKnC,cAC7BlC,QAAQoF,IAAID,IApBgC,oBAuB/B1C,GAvB+B,IAuBhD,IAAI,EAAJ,qBAAyB,CAAC,IAAlBwB,EAAiB,QACjBC,EAAID,EAAMlB,QACVoB,EAAIF,EAAMjB,QACdkB,GAAK3B,EAAKU,KACVkB,GAAK5B,EAAKW,IACV,IAAI5C,EAAK2D,EAAMd,WACf,EAAKjB,YAAY5B,GAAI,CAAC4D,EAAEA,EAAEC,EAAEA,IA7BgB,8BAiChD,IAFA,IAAIK,EAAM,GACNC,EAAM,GACV,MAAiBL,OAAOC,KAAK,EAAKnC,aAAlC,eAA+C,CAA3C,IAAMwC,EAAG,KACTF,EAAMM,KAAK,EAAK5C,YAAYwC,GAAKR,GACjCO,EAAMK,KAAK,EAAK5C,YAAYwC,GAAKP,GAErC,IACMkB,EADWzB,KAAKoB,KAAMpB,KAAKqB,IAAIT,EAAM,GAAGA,EAAM,GAAG,GAAKZ,KAAKqB,IAAIR,EAAM,GAAGA,EAAM,GAAG,IAC7DM,EAKpBO,GAHQd,EAAM,GAAKA,EAAM,IAAI,EAGPnB,EAtHZ,IAuHVkC,GAHQd,EAAM,GAAKA,EAAM,IAAI,EAGPlB,EAtHX,IA2HjB,EAAKtB,aAAeoD,EAEpB,EAAKtD,QAAUuD,GAAgB,EAAKvD,QAAUuD,GAAgBD,EAC9D,EAAKrD,QAAUuD,GAAgB,EAAKvD,QAAUuD,GAAgBF,EAU9D,EAAK1D,IAAIkD,UAAU,EAAKrD,OAAOW,QAC3B,EACA,EACA,EAAKX,OAAOW,QAAQmB,MACpB,EAAK9B,OAAOW,QAAQqB,OACpB,EAAKzB,QACL,EAAKC,QACL,EAAKR,OAAOW,QAAQmB,MAAQ,EAAKrB,YACjC,EAAKT,OAAOW,QAAQqB,OAAS,EAAKvB,aAEtC,EAAKN,IAAIkD,UAAU,EAAKnD,WAAWS,QAAQ,EAAE,EAAE,EAAKV,UAAUU,QAAQmB,MAAM,EAAK7B,UAAUU,QAAQqB,QAEnGxD,QAAQC,IAAR,gBAAqBoF,EAArB,oBAAyC,EAAKtD,QAA9C,oBAAiE,EAAKC,QAAtE,WAEA,CAAC,IAAD,gBACiBS,GADjB,IACA,IAAI,EAAJ,qBAAyB,CAAC,IAAlBwB,EAAiB,QACjBO,EAAQP,EAAMlB,QACd0B,EAAQR,EAAMjB,QAClBwB,GAASjC,EAAKU,KACdwB,GAASlC,EAAKW,IACd,IAAI5C,EAAK2D,EAAMd,WACf,EAAKjB,YAAY5B,GAAI,CAAC4D,EAAEM,EAAML,EAAEM,IAPpC,qC,0BAYZ,WAAe,IAAD,OACVhE,KAAKyB,YAAc,GAEnBzB,KAAKgB,UAAUU,QAAQC,iBAAiB,cAAa,SAACC,GAClDA,EAAEC,oBAEN7B,KAAKgB,UAAUU,QAAQC,iBAAiB,YAAW,SAACC,GAChDA,EAAEC,iBACF,IAFoD,EAE9CG,EAAUJ,EAAEK,eAFkC,cAGnCD,GAHmC,IAGpD,IAAI,EAAJ,qBAAyB,CAAC,IAClBnC,EADiB,QACN6C,kBACR,EAAKjB,YAAY5B,IALwB,kCAQxDG,KAAKgB,UAAUU,QAAQC,iBAAiB,eAAc,SAACC,GACnDA,EAAEC,iBACF,IAFuD,EAEjDG,EAAUJ,EAAEK,eAFqC,cAGtCD,GAHsC,IAGvD,IAAI,EAAJ,qBAAyB,CAAC,IAClBnC,EADiB,QACN6C,kBACR,EAAKjB,YAAY5B,IAL2B,kCAQ3DG,KAAKgB,UAAUU,QAAQC,iBAAiB,aAAY,SAACC,GACjDA,EAAEC,iBACF,IAAMC,EAAO,EAAKd,UAAUU,QAAQK,wBAE9BC,EAAUJ,EAAEK,eAElB,GAAuB,IAAnBD,EAAQK,QAAyD,IAAzCsB,OAAOC,KAAK,EAAKnC,aAAaY,OAAc,CAKpE,IAJA,IAAIwB,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACV,MAAiBL,OAAOC,KAAK,EAAKnC,aAAlC,eAA+C,CAA3C,IAAMwC,EAAG,KACTJ,EAAQ,EAAKpC,YAAYwC,GAAKR,EAC9BK,EAAQ,EAAKrC,YAAYwC,GAAKP,EAElC,EAAKjC,YAAY,GATmD,oBAUnDO,GAVmD,IAUpE,IAAI,EAAJ,qBAAyB,CAAC,IAAlBwB,EAAiB,QACrBO,EAAQP,EAAMlB,QACd0B,EAAQR,EAAMjB,QACdwB,GAASjC,EAAKU,KACdwB,GAASlC,EAAKW,IACd,IAAI5C,EAAK2D,EAAMd,WACf,EAAKjB,YAAY5B,GAAI,CAAC4D,EAAEM,EAAML,EAAEM,IAhBgC,8BAkBpE,IAAME,EAAKH,EAAMF,EACXM,EAAKH,EAAMF,EAEjBvE,QAAQC,IAAR,cAAmB0E,EAAnB,eAA4BC,EAA5B,MAEA,EAAK7C,SAAW4C,EAChB,EAAK3C,SAAW4C,EAEhB,EAAKjD,IAAIkD,UAAU,EAAKrD,OAAOW,QAC3B,EACA,EACA,EAAKX,OAAOW,QAAQmB,MACpB,EAAK9B,OAAOW,QAAQqB,OACpB,EAAKzB,QACL,EAAKC,QACL,EAAKR,OAAOW,QAAQmB,MAAQ,EAAKrB,YACjC,EAAKT,OAAOW,QAAQqB,OAAS,EAAKvB,aAEtC,EAAKN,IAAIkD,UAAU,EAAKnD,WAAWS,QAAQ,EAAE,EAAE,EAAKV,UAAUU,QAAQmB,MAAM,EAAK7B,UAAUU,QAAQqB,aAElG,GAAuB,IAAnBf,EAAQK,QAAyD,IAAzCsB,OAAOC,KAAK,EAAKnC,aAAaY,OAAc,CAGzE,IAFA,IAAIwB,EAAM,GACNC,EAAM,GACV,MAAiBH,OAAOC,KAAK,EAAKnC,aAAlC,eAA+C,CAA3C,IAAMwC,EAAG,KACTJ,EAAMQ,KAAK,EAAK5C,YAAYwC,GAAKR,GACjCK,EAAMO,KAAK,EAAK5C,YAAYwC,GAAKP,GAErC,IAAMY,EAAWnB,KAAKoB,KAAMpB,KAAKqB,IAAIX,EAAM,GAAGA,EAAM,GAAG,GAAKV,KAAKqB,IAAIV,EAAM,GAAGA,EAAM,GAAG,IAEvF,EAAKrC,YAAY,GATwD,oBAUxDO,GAVwD,IAUzE,IAAI,EAAJ,qBAAyB,CAAC,IAAlBwB,EAAiB,QACjBC,EAAID,EAAMlB,QACVoB,EAAIF,EAAMjB,QACdkB,GAAK3B,EAAKU,KACVkB,GAAK5B,EAAKW,IACV,IAAI5C,EAAK2D,EAAMd,WACf,EAAKjB,YAAY5B,GAAI,CAAC4D,EAAEA,EAAEC,EAAEA,IAhByC,8BAoBzE,IAFA,IAAIK,EAAM,GACNC,EAAM,GACV,MAAiBL,OAAOC,KAAK,EAAKnC,aAAlC,eAA+C,CAA3C,IAAMwC,EAAG,KACTF,EAAMM,KAAK,EAAK5C,YAAYwC,GAAKR,GACjCO,EAAMK,KAAK,EAAK5C,YAAYwC,GAAKP,GAErC,IACMkB,EADWzB,KAAKoB,KAAMpB,KAAKqB,IAAIT,EAAM,GAAGA,EAAM,GAAG,GAAKZ,KAAKqB,IAAIR,EAAM,GAAGA,EAAM,GAAG,IAC7DM,EACpBS,EAAY,EAAKhE,OAAOW,QAAQmB,MAAQ,EAAKrB,YAC7CwD,EAAa,EAAKjE,OAAOW,QAAQmB,MAAQ,EAAKrB,YAEpD,EAAKA,aAAeoD,EAEpB,IAGMV,EAAMa,GAHM,EAAKhE,OAAOW,QAAQmB,MAAQ,EAAKrB,aAGlB,EAC3B2C,EAAMa,GAHO,EAAKjE,OAAOW,QAAQmB,MAAQ,EAAKrB,aAGjB,EAEnC,EAAKF,SAAW4C,EAChB,EAAK3C,SAAW4C,EAEhB,EAAKjD,IAAIkD,UAAU,EAAKrD,OAAOW,QAC3B,EACA,EACA,EAAKX,OAAOW,QAAQmB,MACpB,EAAK9B,OAAOW,QAAQqB,OACpB,EAAKzB,QACL,EAAKC,QACL,EAAKR,OAAOW,QAAQmB,MAAQ,EAAKrB,YACjC,EAAKT,OAAOW,QAAQqB,OAAS,EAAKvB,aAEtC,EAAKN,IAAIkD,UAAU,EAAKnD,WAAWS,QAAQ,EAAE,EAAE,EAAKV,UAAUU,QAAQmB,MAAM,EAAK7B,UAAUU,QAAQqB,QAEnGxD,QAAQC,IAAR,gBAAqBoF,EAArB,UAEA,CACA,EAAKnD,YAAY,GADjB,oBAEiBO,GAFjB,IAEA,IAAI,EAAJ,qBAAyB,CAAC,IAAlBwB,EAAiB,QACjBO,EAAQP,EAAMlB,QACd0B,EAAQR,EAAMjB,QAClBwB,GAASjC,EAAKU,KACdwB,GAASlC,EAAKW,IACd,IAAI5C,EAAK2D,EAAMd,WACf,EAAKjB,YAAY5B,GAAI,CAAC4D,EAAEM,EAAML,EAAEM,IARpC,qC,0BAaZ,WAAe,IAAD,OACVhE,KAAKyB,YAAc,GAEnBzB,KAAKgB,UAAUU,QAAQC,iBAAiB,cAAa,SAACC,GAClDA,EAAEC,iBACFtC,QAAQC,IAAI,cACZ,IAHsD,EAGhDwC,EAAUJ,EAAEK,eAHoC,cAIrCD,GAJqC,IAItD,IAAI,EAAJ,qBAAyB,CAAC,IAAlBwB,EAAiB,QACjBO,EAAQP,EAAMlB,QACd0B,EAAQR,EAAMjB,QACd1C,EAAK2D,EAAMd,WACf,EAAKjB,YAAY5B,GAAI,CAAC4D,EAAEM,EAAML,EAAEM,IARkB,kCAW1DhE,KAAKgB,UAAUU,QAAQC,iBAAiB,YAAW,SAACC,GAChDA,EAAEC,iBACFtC,QAAQC,IAAI,YACZ,IAAMwC,EAAUJ,EAAEK,eAClB1C,QAAQoF,IAAI3C,EAAQ,CAACiD,MAAM,OAJyB,oBAKnCjD,GALmC,IAKpD,IAAI,EAAJ,qBAAyB,CAAC,IAGlBnC,EAHiB,QAGN6C,WACZ,EAAKjB,YAAY5B,WACT,EAAK4B,YAAY5B,IAVoB,kCAexDG,KAAKgB,UAAUU,QAAQC,iBAAiB,eAAc,SAACC,GACnDA,EAAEC,iBACFtC,QAAQC,IAAI,eACZ,IAAMwC,EAAUJ,EAAEK,eAClB1C,QAAQoF,IAAI3C,EAAQ,CAACiD,MAAM,OAJ4B,oBAKtCjD,GALsC,IAKvD,IAAI,EAAJ,qBAAyB,CAAC,IAGlBnC,EAHiB,QAGN6C,WACZ,EAAKjB,YAAY5B,WACT,EAAK4B,YAAY5B,IAVuB,kCAe3DG,KAAKgB,UAAUU,QAAQC,iBAAiB,aAAY,SAACC,GACjDrC,QAAQC,IAAI,aACZoC,EAAEC,iBACF,IAAMG,EAAUJ,EAAEK,eACfD,EAAQK,SAAWsB,OAAOC,KAAK,EAAKnC,aAAaY,SAChD9C,QAAQoF,IAAIhB,OAAOC,KAAK,EAAKnC,cAC7BlC,QAAQoF,IAAI3C,S,+BAKxB,WACIzC,QAAQC,IAAI,4BACZQ,KAAKgB,UAAUU,QAAQmB,MAAM,KAC7B7C,KAAKgB,UAAUU,QAAQqB,OAAO,KAC9B/C,KAAKkB,IAAMlB,KAAKgB,UAAUU,QAAQwD,WAAW,MAE7ClF,KAAKmF,iB,kCAET,WACI5F,QAAQC,IAAI,iC,sBAEhB,SAASoC,GAAG,IAAD,OAGP,GAFArC,QAAQC,IAAI,YACZD,QAAQoF,IAAI/C,EAAE,CAACqD,MAAM,OAClBrD,EAAEwD,OAAOC,MAAMhD,OAAO,CACrB,IAAMiD,EAAO1D,EAAEwD,OAAOC,MAAM,GACtBE,EAAK,IAAIC,WACfD,EAAG5D,iBAAiB,QAAO,SAACC,GACxB,IAAM6D,EAAMF,EAAGG,OAEf,EAAK3E,OAAOW,QAAQiE,IAAMF,EAM1B,EAAK1E,OAAOW,QAAQkE,OAAO,WACvBrG,QAAQC,IAAR,kCAAuC,EAAKwB,UAAUU,QAAQmB,QAC9DtD,QAAQC,IAAR,mCAAwC,EAAKwB,UAAUU,QAAQqB,SAC/DxD,QAAQC,IAAR,+BAAoC,EAAKuB,OAAOW,QAAQmB,QACxDtD,QAAQC,IAAR,gCAAqC,EAAKuB,OAAOW,QAAQqB,SACzDxD,QAAQC,IAAR,mCAAwC,EAAKyB,WAAWS,QAAQmB,QAChEtD,QAAQC,IAAR,oCAAyC,EAAKyB,WAAWS,QAAQqB,SAEjE,IAAM8C,EAAQ,EAAK7E,UAAUU,QAAQmB,MAAQ,EAAK9B,OAAOW,QAAQmB,MAC3DiD,EAAQ,EAAK9E,UAAUU,QAAQqB,OAAS,EAAKhC,OAAOW,QAAQqB,OAC5DgD,EAAOF,EAAQC,EAAQD,EAAQC,EAErCvG,QAAQC,IAAR,eAAoBuG,IAEpB,IAAMC,EAAW,EAAKjF,OAAOW,QAAQmB,MAAQkD,EACvCE,EAAY,EAAKlF,OAAOW,QAAQqB,OAASgD,EAC/CxG,QAAQC,IAAR,mBAAwBwG,IACxBzG,QAAQC,IAAR,oBAAyByG,IAEzB,IAAMC,EAAU,EAAKlF,UAAUU,QAAQmB,MAAM,EAAImD,EAAS,EACpDG,EAAU,EAAKnF,UAAUU,QAAQqB,OAAO,EAAIkD,EAAU,EAC5D1G,QAAQC,IAAR,kBAAuB0G,IACvB3G,QAAQC,IAAR,kBAAuB2G,IAEvB,EAAKjF,IAAIkD,UAAU,EAAKrD,OAAOW,QAC3B,EACA,EACA,EAAKX,OAAOW,QAAQmB,MACpB,EAAK9B,OAAOW,QAAQqB,OACpBmD,EACAC,EACAH,EACAC,GAEJ,EAAK/E,IAAIkD,UAAU,EAAKnD,WAAWS,QAAQ,EAAE,EAAE,EAAKV,UAAUU,QAAQmB,MAAM,EAAK7B,UAAUU,QAAQqB,QAEnG,EAAKzB,QAAU4E,EACf,EAAK3E,QAAU4E,EACf,EAAK3E,YAAcuE,EAMnB,EAAKhF,OAAOW,QAAQkE,OAAS,iBAIrCL,EAAGa,cAAcd,M,gCAGzB,SAAmB1D,GACf5B,KAAKY,UAAUc,QAAQ2E,U,oBAE3B,WACI,OACI,gCACI,wCACA,gCACI,uBAAOC,KAAK,OAAOC,UAAU,iBAAiBC,IAAKxG,KAAKY,UAAWO,SAAUnB,KAAKmB,SAAUsF,OAAO,2BACnG,wBAAQC,QAAS1G,KAAKqB,mBAAtB,6BAEJ,8BACI,qBAAKkF,UAAU,6BAA6BI,IAAI,MAAMH,IAAKxG,KAAKe,WAEpE,gCACI,wBAAQwF,UAAU,iBAAiBC,IAAKxG,KAAKgB,YAC7C,qBAAK2E,IAAKiB,EAAmBD,IAAI,OAAOH,IAAKxG,KAAKiB,WAAYsF,UAAU,6B,GA3rBxD9G,aCAfoH,G,wDACjB,WAAYvH,GAAO,IAAD,6BACdC,QAAQC,IAAI,wBACZ,cAAMF,IACDgB,MAAQ,CACRwG,kBAAiB,EACjBC,oBAAmB,EACnBC,yBAAwB,GAE7B,EAAKC,SAAWpG,IAAMC,YACtB,EAAKE,UAAYH,IAAMC,YACvB,EAAKG,WAAaJ,IAAMC,YACxB,EAAKoG,YAAc,EAAKA,YAAY9F,KAAjB,gBACnB,EAAK+F,cAAgB,EAAKA,cAAc/F,KAAnB,gBACrB,EAAKgG,mBAAqB,EAAKA,mBAAmBhG,KAAxB,gBAC1B,EAAKF,IAAI,KAdK,E,+CAgBlB,WAAc,IAAD,OACHmG,EAAeC,UAAUD,eAAkBC,UAAUC,iBAAmBD,UAAUE,mBAAsB,CAC1GC,aAAc,SAASC,GACrB,OAAO,IAAIC,SAAQ,SAASjE,EAAGkE,IAC5BN,UAAUC,iBACVD,UAAUE,oBAAoBK,KAAKP,UAAWI,EAAGhE,EAAGkE,QAGxD,MAEFP,EACCA,EAAaI,aAAa,CACtBK,OAAM,EAENC,MAAM,CACFlF,MAAM,KACNE,OAAO,KACPiF,WAAY,UAEjBC,MAAK,SAACC,GACL3I,QAAQC,IAAI,QACZD,QAAQoF,IAAIuD,EAAO,CAACjD,MAAM,OAC1B,EAAKgC,SAASvF,QAAQyG,QAAU,SAACvG,GAC7BwG,MAAMxG,GACN,EAAKqF,SAASvF,QAAQyG,QAAQ,cAElC,EAAKlB,SAASvF,QAAQ2G,UAAYH,EAElC,EAAKvF,SAAS,CACVmE,kBAAiB,EACjBC,oBAAmB,EACnBC,yBAAwB,OAE7BsB,OAAM,SAACC,GACNhJ,QAAQC,IAAI+I,GACZ,EAAK5F,SAAS,CACVmE,kBAAiB,EACjBC,oBAAmB,EACnBC,yBAAwB,IAE5BoB,MAAMG,OAIVhJ,QAAQC,IAAI,iCAEZ4I,MAAM,oC,+BAGd,WACI7I,QAAQC,IAAI,6BAEZQ,KAAKgB,UAAUU,QAAQmB,MAAM,KAC7B7C,KAAKgB,UAAUU,QAAQqB,OAAO,KAC9B/C,KAAKkB,IAAMlB,KAAKgB,UAAUU,QAAQwD,WAAW,MAE7ClF,KAAKiH,SAASvF,QAAQC,iBAAiB,kBAAiB,SAACC,GACrDrC,QAAQC,IAAI,qBAGhBQ,KAAKiH,SAASvF,QAAQC,iBAAiB,cAAa,SAACC,GACjDrC,QAAQC,IAAI,iBAGhBQ,KAAKwI,gB,kCAET,WACIjJ,QAAQC,IAAI,gCACZ,IACIQ,KAAKiH,SAASvF,QAAQ+G,QAE1B,MAAMF,O,yBAIV,SAAY3G,GACR5B,KAAKiH,SAASvF,QAAQ+G,QACtBlJ,QAAQC,IAAR,wCAA6CQ,KAAKiB,WAAWS,QAAQmB,QACrEtD,QAAQC,IAAR,yCAA8CQ,KAAKiB,WAAWS,QAAQqB,SACtE/C,KAAKkB,IAAIkD,UAAUpE,KAAKiH,SAASvF,QAAQ,EAAE,EAAE1B,KAAKgB,UAAUU,QAAQmB,MAAM7C,KAAKgB,UAAUU,QAAQqB,QACjG/C,KAAKkB,IAAIkD,UAAUpE,KAAKiB,WAAWS,QAAQ,EAAE,EAAE1B,KAAKgB,UAAUU,QAAQmB,MAAM7C,KAAKgB,UAAUU,QAAQqB,QAC/F/C,KAAKiH,SAASvF,QAAQgH,UAAUC,SAAS,oBACzC3I,KAAKiH,SAASvF,QAAQgH,UAAUE,IAAI,mBAErC5I,KAAKgB,UAAUU,QAAQgH,UAAUC,SAAS,oBACzC3I,KAAKgB,UAAUU,QAAQgH,UAAUG,OAAO,mBAE5C7I,KAAK2C,SAAS,CACVmE,kBAAiB,EACjBC,oBAAmB,M,2BAG3B,SAAcnF,GACP5B,KAAKiH,SAASvF,QAAQgH,UAAUC,SAAS,oBACxC3I,KAAKiH,SAASvF,QAAQgH,UAAUG,OAAO,mBAEvC7I,KAAKgB,UAAUU,QAAQgH,UAAUC,SAAS,oBAC1C3I,KAAKgB,UAAUU,QAAQgH,UAAUE,IAAI,mBAEzC5I,KAAKiH,SAASvF,QAAQoH,OACtB9I,KAAK2C,SAAS,CACVmE,kBAAiB,EACjBC,oBAAmB,M,gCAG3B,SAAmBnF,GACf5B,KAAKwI,gB,oBAET,WACI,OACI,gCACI,yCACA,8BACI,uBAAOjC,UAAU,iBAAiBC,IAAKxG,KAAKiH,SAAU8B,UAAU,EAAMC,aAAa,EAAMC,OAAO,MAEpG,gCACI,wBAAQ1C,UAAU,kCAAkCC,IAAKxG,KAAKgB,YAC9D,qBAAK2E,IAAKiB,EAAmBD,IAAI,OAAOH,IAAKxG,KAAKiB,WAAYsF,UAAU,uBAE5E,gCACI,wBAAQG,QAAS1G,KAAKkH,YAAagC,UAAWlJ,KAAKM,MAAMwG,iBAAzD,4CACA,wBAAQJ,QAAS1G,KAAKmH,cAAe+B,UAAWlJ,KAAKM,MAAMyG,mBAA3D,sCACA,wBAAQL,QAAS1G,KAAKoH,mBAAoB8B,UAAWlJ,KAAKM,MAAM0G,wBAAhE,wE,GA3IiBvH,cCDhB0J,E,kDACjB,WAAY7J,GAAM,OAAC,oBACfC,QAAQC,IAAI,wBADE,YAERF,G,qDAKV,WACIC,QAAQC,IAAI,gC,kCAEhB,WACID,QAAQC,IAAI,mC,oBAEhB,WACI,OACI,gCACI,0CACA,4BACI,cAAC,IAAD,CAAM4J,GAAG,IAAT,0C,GAnBkB3J,aCatC,SAAS4J,IACP,IAAMC,EAAWC,cACXC,EAAc,SAAC5H,GACA,SAAhBA,EAAEwD,OAAOqE,KACVH,EAAS,KAEa,UAAhB1H,EAAEwD,OAAOqE,KACfH,EAAS,UAEa,UAAhB1H,EAAEwD,OAAOqE,KACfH,EAAS,UAEa,YAAhB1H,EAAEwD,OAAOqE,KACfH,EAAS,YAEa,WAAhB1H,EAAEwD,OAAOqE,KACfH,EAAS,WAEa,YAAhB1H,EAAEwD,OAAOqE,MACfH,EAAS,aAGb,OACE,gCAGE,gCACE,+BACE,6BACE,cAAC,IAAD,CAAMF,GAAG,IAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,WAAT,uBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,UAAT,sBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,WAAT,uBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,gBAAT,+BAGJ,gCACA,wBAAQ1C,QAAS8C,EAAaC,KAAK,OAAnC,kBACA,wBAAQ/C,QAAS8C,EAAaC,KAAK,QAAnC,mBACA,wBAAQ/C,QAAS8C,EAAaC,KAAK,QAAnC,mBACA,wBAAQ/C,QAAS8C,EAAaC,KAAK,UAAnC,qBACA,wBAAQ/C,QAAS8C,EAAaC,KAAK,SAAnC,oBACA,wBAAQ/C,QAAS8C,EAAaC,KAAK,UAAnC,2BAIF,uBAKA,cAAC,IAAD,O,IAmKSC,E,kDA7Jb,WAAYpK,GAAM,OAAC,oBACjBC,QAAQC,IAAI,mBADI,YAEVF,G,qDAMR,WACIC,QAAQC,IAAI,2B,kCAEhB,WACED,QAAQC,IAAI,8B,oBAgBd,WACE,OACE,gCACE,iDAmBA,wBASA,cAAC,IAAD,UACE,eAAC,IAAD,CAAOmK,OAAK,EAACC,KAAK,IAAKC,QAAS,cAACR,EAAD,IAAhC,UACE,cAAC,IAAD,CAAOS,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC5J,EAAD,MACjC,cAAC,IAAD,CAAO2J,KAAK,WAAWC,QAAS,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAI/B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,kB,GAzEnBpK,aC1EZsK,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DAqCnC,SAASC,EAAgBC,EAAOC,GAC9BjD,UAAUkD,cACPC,SAASH,GACTrC,MAAK,SAACyC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBtK,QACfgH,UAAUkD,cAAcO,YAI1BxL,QAAQC,IACN,+GAKE+K,GAAUA,EAAOS,UACnBT,EAAOS,SAASN,KAMlBnL,QAAQC,IAAI,sCAGR+K,GAAUA,EAAOU,WACnBV,EAAOU,UAAUP,WAO5BpC,OAAM,SAACC,GACNhJ,QAAQgJ,MAAM,4CAA6CA,MC9FjE,IAYe2C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBnD,MAAK,YAAkD,IAA/CoD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCd,SAASO,IACP,IAAMpC,EAAWC,cACjB,OACE,cAAC,EAAD,CAAKD,SAAYA,IAIrBqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,SAAS,YAAxB,SACE,cAACJ,EAAD,QAGJK,SAASC,eAAe,SFDnB,SAAkBzB,GACvB,GAA6C,kBAAmBjD,UAAW,CAGzE,GADkB,IAAI2E,IAAIC,aAAwBjC,OAAOC,SAASiC,MACpDC,SAAWnC,OAAOC,SAASkC,OAIvC,OAGFnC,OAAOtI,iBAAiB,QAAQ,WAC9B,IAAM2I,EAAK,UAAM4B,aAAN,sBAEPnC,IAgEV,SAAiCO,EAAOC,GAEtC8B,MAAM/B,EAAO,CACXgC,QAAS,CAAE,iBAAkB,YAE5BrE,MAAK,SAACsE,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CrF,UAAUkD,cAAcoC,MAAM3E,MAAK,SAACyC,GAClCA,EAAamC,aAAa5E,MAAK,WAC7BgC,OAAOC,SAAS4C,eAKpBzC,EAAgBC,EAAOC,MAG1BjC,OAAM,WACL/I,QAAQC,IAAI,oEAtFVuN,CAAwBzC,EAAOC,GAI/BjD,UAAUkD,cAAcoC,MAAM3E,MAAK,WACjC1I,QAAQC,IACN,+GAMJ6K,EAAgBC,EAAOC,OEpB/ByC,GAKA9B,M","file":"static/js/main.db562ef1.chunk.js","sourcesContent":["import React,{ Component } from \"react\"\r\n\r\nexport default class Home extends Component {\r\n    constructor(props){\r\n        console.log(\"Home.constructor\")\r\n        super(props);\r\n        // this.state = {\r\n        //      state:0\r\n        // }\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"Home.componentDidMount\")\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"Home.componentWillUnmount\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Home</h1>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","import React,{ Component } from \"react\"\r\n\r\nexport default class Page1 extends Component {\r\n    constructor(props){\r\n        console.log(\"Page1.constructor\")\r\n        super(props);\r\n        // this.state = {\r\n        //      state:0\r\n        // }\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"Page1.componentDidMount\")\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"Page1.componentWillUnmount\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Page1</h1>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","import React,{ Component } from \"react\"\r\n\r\nexport default class Me extends Component {\r\n    constructor(props){\r\n        console.log(\"Me.constructor\")\r\n        super(props);\r\n        // this.state = {\r\n        //      state:0\r\n        // }\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"Me.componentDidMount\")\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"Me.componentWillUnmount\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Me</h1>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","import React,{ Component } from \"react\"\r\nimport { useParams  } from 'react-router-dom'\r\n//import { withRouter } from 'react-router';\r\n\r\nclass OthersClass extends Component {\r\n    constructor(props){\r\n        console.log(\"Others.constructor\")\r\n        super(props);\r\n        // this.state = {\r\n        //      state:0\r\n        // }\r\n        //console.log(this.props.params)\r\n        const {id} = this.props.params\r\n        this.is=id\r\n        console.log(id)\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"Others.componentDidMount\")\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"Others.componentWillUnmount\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Others {this.is}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default function Others(){\r\n    const params = useParams()\r\n    return (\r\n        <OthersClass params={params}/>\r\n    )\r\n}\r\n","import React,{ Component } from \"react\"\r\n\r\nexport default class About extends Component {\r\n    constructor(props){\r\n        console.log(\"About.constructor\")\r\n        super(props);\r\n        // this.state = {\r\n        //      state:0\r\n        // }\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"About.componentDidMount\")\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"About.componentWillUnmount\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>About</h1>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","import React,{ Component } from \"react\"\r\n\r\nexport default class Contact extends Component {\r\n    constructor(props){\r\n        console.log(\"Contact.constructor\")\r\n        super(props);\r\n        // this.state = {\r\n        //      state:0\r\n        // }\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"Contact.componentDidMount\")\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"Contact.componentWillUnmount\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Contact</h1>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","export default __webpack_public_path__ + \"static/media/FacePositionMask2.87464ae1.svg\";","import React,{ Component } from \"react\"\r\nimport './Camera.css'\r\nimport FacePositionMask2 from \"./FacePositionMask2.svg\"\r\n\r\nexport default class Camera extends Component {\r\n    constructor(props){\r\n        console.log(\"Camera.constructor\")\r\n        super(props);\r\n        this.state = {\r\n             imageLoaded:false,\r\n             x1:0,\r\n             y1:0,\r\n             x2:0,\r\n             y2:0\r\n        }\r\n        this.inputFile = React.createRef()\r\n        this.imgRef = React.createRef()\r\n        this.canvasRef = React.createRef()\r\n        this.imgMaskRef = React.createRef()\r\n        this.ctx = null\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onClickChoosePhoto = this.onClickChoosePhoto.bind(this)\r\n\r\n        this.imgPosX = 0\r\n        this.imgPosY = 0\r\n        this.imgZoomRate = 1.0\r\n    }\r\n\r\n    zoomAndMove1(){\r\n        this.toucheInfos = {}\r\n\r\n        this.canvasRef.current.addEventListener(\"touchstart\",(e)=>{\r\n            e.preventDefault()\r\n            const rect = this.canvasRef.current.getBoundingClientRect()\r\n            const touches = e.changedTouches\r\n            //console.log(\"Camera.touchstart\")\r\n            let x1 = NaN\r\n            let y1 = NaN\r\n            let x2 = NaN\r\n            let y2 = NaN\r\n            let id1=NaN\r\n            let id2=NaN\r\n            if(touches.length>0){\r\n                x1 = touches[0].clientX\r\n\t\t        y1 = touches[0].clientY\r\n                x1 -= rect.left\r\n                y1 -= rect.top\r\n                id1 = touches[0].identifier\r\n            }\r\n            if(touches.length>1){\r\n                x2 = touches[1].clientX\r\n\t\t        y2 = touches[1].clientY\r\n                x2 -= rect.left\r\n                y2 -= rect.top\r\n                id2 = touches[1].identifier\r\n            }\r\n            this.setState({x1:x1,\r\n                y1:y1,x2:x2,\r\n                y2:y2})\r\n            \r\n            const canvasWidth = this.canvasRef.current.width \r\n            const canvasHeight = this.canvasRef.current.height\r\n            const styleWidth =  320//this.canvasRef.current.style.width\r\n            const styleHeight =  320//this.canvasRef.current.style.height\r\n\r\n            console.log(`Camera.touchstart:(${x1},${y1},${id1}),(${x2},${y2},${id2})` )\r\n            this.ctx.clearRect(0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n            this.ctx.beginPath()\r\n            this.ctx.arc(x1*canvasWidth/styleWidth,y1*canvasHeight/styleHeight,50,0,2*Math.PI,false)\r\n            this.ctx.fillStyle=\"rgba(255,0,0,255)\"\r\n            this.ctx.fill()    \r\n        })\r\n        this.canvasRef.current.addEventListener(\"touchend\",(e)=>{\r\n            e.preventDefault()\r\n            const rect = this.canvasRef.current.getBoundingClientRect()    \r\n            //console.log(\"Camera.touchend\")\r\n            const touches = e.changedTouches\r\n\r\n            let x1 = NaN\r\n            let y1 = NaN\r\n            let x2 = NaN\r\n            let y2 = NaN\r\n            let id1=NaN\r\n            let id2=NaN\r\n            if(touches.length>0){\r\n                x1 = touches[0].clientX\r\n\t\t        y1 = touches[0].clientY\r\n                x1 -= rect.left\r\n                y1 -= rect.top\r\n                id1 = touches[0].identifier\r\n            }\r\n            if(touches.length>1){\r\n                x2 = touches[1].clientX\r\n\t\t        y2 = touches[1].clientY\r\n                x2 -= rect.left\r\n                y2 -= rect.top\r\n                id2 = touches[1].identifier\r\n            }\r\n            this.setState({x1:x1,\r\n                y1:y1,x2:x2,\r\n                y2:y2})\r\n\r\n            const canvasWidth = this.canvasRef.current.width \r\n            const canvasHeight = this.canvasRef.current.height\r\n            const styleWidth =  320//this.canvasRef.current.style.width\r\n            const styleHeight =  320//this.canvasRef.current.style.height\r\n\r\n            console.log(`Camera.touchend:(${x1},${y1},${id1}),(${x2},${y2},${id2})` )\r\n\r\n            this.ctx.clearRect(0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n            this.ctx.beginPath()\r\n            this.ctx.arc(x1*canvasWidth/styleWidth,y1*canvasHeight/styleHeight,50,0,2*Math.PI,false)    \r\n            this.ctx.fillStyle=\"rgba(255,0,0,255)\"\r\n            this.ctx.fill()    \r\n\r\n            //console.dir(touches,{depth:null})\r\n        })\r\n        this.canvasRef.current.addEventListener(\"touchcancel\",(e)=>{\r\n            e.preventDefault()\r\n            //console.log(\"Camera.touchcancel\")\r\n            const rect = this.canvasRef.current.getBoundingClientRect()    \r\n\r\n            const touches = e.changedTouches\r\n            let x1 = NaN\r\n            let y1 = NaN\r\n            let x2 = NaN\r\n            let y2 = NaN\r\n            let id1=NaN\r\n            let id2=NaN\r\n            if(touches.length>0){\r\n                x1 = touches[0].clientX\r\n\t\t        y1 = touches[0].clientY\r\n                x1 -= rect.left\r\n                y1 -= rect.top\r\n                id1 = touches[0].identifier\r\n            }\r\n            if(touches.length>1){\r\n                x2 = touches[1].clientX\r\n\t\t        y2 = touches[1].clientY\r\n                x2 -= rect.left\r\n                y2 -= rect.top\r\n                id2 = touches[1].identifier\r\n            }\r\n            this.setState({x1:x1,\r\n                y1:y1,x2:x2,\r\n                y2:y2})\r\n\r\n            console.log(`Camera.touchcancel:(${x1},${y1},${id1}),(${x2},${y2},${id2})` )\r\n\r\n            // const canvasWidth = this.canvasRef.current.width \r\n            // const canvasHeight = this.canvasRef.current.height\r\n            // const styleWidth =  this.canvasRef.current.style.width\r\n            // const styleHeight =  this.canvasRef.current.style.height\r\n\r\n            this.ctx.clearRect(0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n\r\n            // //console.dir(touches,{depth:null})\r\n        })\r\n        this.canvasRef.current.addEventListener(\"touchmove\",(e)=>{\r\n            e.preventDefault()\r\n            const rect = this.canvasRef.current.getBoundingClientRect()    \r\n            //console.log(\"Camera.touchmove\")\r\n            const touches = e.changedTouches\r\n        \r\n            let x1 = NaN\r\n            let y1 = NaN\r\n            let x2 = NaN\r\n            let y2 = NaN\r\n            let id1=NaN\r\n            let id2=NaN\r\n            if(touches.length>0){\r\n                x1 = touches[0].clientX\r\n\t\t        y1 = touches[0].clientY\r\n                x1 -= rect.left\r\n                y1 -= rect.top\r\n                id1 = touches[0].identifier\r\n            }\r\n            if(touches.length>1){\r\n                x2 = touches[1].clientX\r\n\t\t        y2 = touches[1].clientY\r\n                x2 -= rect.left\r\n                y2 -= rect.top\r\n                id2 = touches[1].identifier\r\n            }\r\n            this.setState({x1:x1,\r\n                y1:y1,x2:x2,\r\n                y2:y2})\r\n            \r\n            //console.dir(touches,{depth:null})\r\n            const canvasWidth = this.canvasRef.current.width \r\n            const canvasHeight = this.canvasRef.current.height\r\n            const styleWidth =  320//this.canvasRef.current.style.width\r\n            const styleHeight =  320//this.canvasRef.current.style.height\r\n\r\n            console.log(`Camera.touchmove:(${x1},${y1},${id1}),(${x2},${y2},${id2})` )\r\n\r\n            this.ctx.clearRect(0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n            this.ctx.beginPath()\r\n            this.ctx.arc(x1*canvasWidth/styleWidth,y1*canvasHeight/styleHeight,50,0,2*Math.PI,false)\r\n            this.ctx.fillStyle=\"rgba(255,0,0,255)\"\r\n            this.ctx.fill()    \r\n\r\n            if( !isNaN(x2) && !isNaN(y2)){\r\n                this.ctx.beginPath()\r\n                this.ctx.arc(x2*canvasWidth/styleWidth,y2*canvasHeight/styleHeight,50,0,2*Math.PI,false)    \r\n                this.ctx.fillStyle=\"rgba(255,0,0,255)\"\r\n                this.ctx.fill()    \r\n            }\r\n        })\r\n\r\n    }\r\n    zoomAndMove2(){\r\n        this.toucheInfos = {}\r\n\r\n        this.canvasRef.current.addEventListener(\"touchstart\",(e)=>{\r\n            e.preventDefault()\r\n            const rect = this.canvasRef.current.getBoundingClientRect()    \r\n            //console.log(\"Camera.touchstart\")\r\n            const touches = e.changedTouches\r\n\r\n            for(let touch of touches){\r\n                let x = touch.clientX\r\n\t\t        let y = touch.clientY\r\n                x -= rect.left\r\n                y -= rect.top\r\n                let id = touch.identifier\r\n\r\n                this.toucheInfos[id]={x:x,y:y}\r\n            }\r\n        })\r\n        this.canvasRef.current.addEventListener(\"touchend\",(e)=>{\r\n            e.preventDefault()\r\n            //const rect = this.canvasRef.current.getBoundingClientRect()    \r\n            //console.log(\"Camera.touchend\")\r\n            const touches = e.changedTouches\r\n\r\n            for(let touch of touches){\r\n                let id = touch.identifier\r\n                delete this.toucheInfos[id]\r\n            }\r\n        })\r\n        this.canvasRef.current.addEventListener(\"touchcancel\",(e)=>{\r\n            e.preventDefault()\r\n            //console.log(\"Camera.touchcancel\")\r\n            //const rect = this.canvasRef.current.getBoundingClientRect()    \r\n\r\n            const touches = e.changedTouches\r\n            for(let touch of touches){\r\n                let id = touch.identifier\r\n                delete this.toucheInfos[id]\r\n            }\r\n        })\r\n        this.canvasRef.current.addEventListener(\"touchmove\",(e)=>{\r\n            e.preventDefault()\r\n            const rect = this.canvasRef.current.getBoundingClientRect()    \r\n            //console.log(\"Camera.touchmove\")\r\n\r\n            const canvasWidth = this.canvasRef.current.width \r\n            const canvasHeight = this.canvasRef.current.height\r\n            const styleWidth =  320//this.canvasRef.current.style.width\r\n            const styleHeight =  320//this.canvasRef.current.style.height\r\n\r\n            const touches = e.changedTouches\r\n\r\n            if( Object.keys(this.toucheInfos).length === 1){\r\n                let prevX=0\r\n                let prevY=0\r\n                let currX=0\r\n                let currY=0\r\n\r\n                // if(Object.keys(this.toucheInfos).length < touches.length){\r\n                //     let exists=true\r\n                //     let ids=[]\r\n                //     for(let touch of touches){\r\n                //         let id = touch.identifier\r\n                //         if(!this.toucheInfos[id]){\r\n                //             console.log(`not exists ${id}`)\r\n                //             exists=false\r\n                //         }\r\n                //         ids.push(id)\r\n                //     }\r\n                //     if(!exists){\r\n                //         console.dir(Object.keys(this.toucheInfos))\r\n                //         console.dir(ids)\r\n                //     }\r\n    \r\n                //     for(let touch of touches){\r\n                //         currX = touch.clientX\r\n                //         currY = touch.clientY\r\n                //         currX -= rect.left\r\n                //         currY -= rect.top\r\n                //         let id = touch.identifier\r\n                //         this.toucheInfos[id]={x:currX,y:currY}\r\n                //     }\r\n                // }\r\n                // else{\r\n                    for(const key of Object.keys(this.toucheInfos)){\r\n                        prevX = this.toucheInfos[key].x\r\n                        prevY = this.toucheInfos[key].y\r\n                    }\r\n\r\n                    for(let touch of touches){\r\n                        let id = touch.identifier\r\n                        if(this.toucheInfos[id]){\r\n                            currX = touch.clientX\r\n                            currY = touch.clientY\r\n                            currX -= rect.left\r\n                            currY -= rect.top\r\n                            this.toucheInfos[id]={x:currX,y:currY}\r\n                        }\r\n                    }\r\n\r\n                    const dx = (currX-prevX) * canvasWidth/styleWidth\r\n                    const dy = (currY-prevY) * canvasHeight/styleHeight\r\n    \r\n                    console.log(`(dx:${dx},dy:${dy})`)\r\n    \r\n                    this.imgPosX += dx\r\n                    this.imgPosY += dy\r\n    \r\n                    this.ctx.drawImage(this.imgRef.current,\r\n                        0,\r\n                        0,\r\n                        this.imgRef.current.width,\r\n                        this.imgRef.current.height,\r\n                        this.imgPosX,\r\n                        this.imgPosY,\r\n                        this.imgRef.current.width * this.imgZoomRate,\r\n                        this.imgRef.current.height * this.imgZoomRate\r\n                        )\r\n                    this.ctx.drawImage(this.imgMaskRef.current,0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n    \r\n                // }\r\n            }\r\n            else if( Object.keys(this.toucheInfos).length === 2){\r\n                let prevX=[]\r\n                let prevY=[]\r\n                for(const key of Object.keys(this.toucheInfos)){\r\n                    prevX.push(this.toucheInfos[key].x)\r\n                    prevY.push(this.toucheInfos[key].y)\r\n                }\r\n                const prevDist = Math.sqrt( Math.pow(prevX[0]-prevX[1],2) + Math.pow(prevY[0]-prevY[1],2))\r\n                let exists=true\r\n                let ids=[]\r\n                for(let touch of touches){\r\n                    let id = touch.identifier\r\n                    if(!this.toucheInfos[id]){\r\n                        console.log(`not exists ${id}`)\r\n                        exists=false\r\n                    }\r\n                    ids.push(id)\r\n                }\r\n                if(!exists){\r\n                    console.dir(Object.keys(this.toucheInfos))\r\n                    console.dir(ids)\r\n                }\r\n\r\n                for(let touch of touches){\r\n                    let x = touch.clientX\r\n                    let y = touch.clientY\r\n                    x -= rect.left\r\n                    y -= rect.top\r\n                    let id = touch.identifier\r\n                    this.toucheInfos[id]={x:x,y:y}\r\n                }\r\n                let currX=[]\r\n                let currY=[]\r\n                for(const key of Object.keys(this.toucheInfos)){\r\n                    currX.push(this.toucheInfos[key].x)\r\n                    currY.push(this.toucheInfos[key].y)\r\n                }\r\n                const currDist = Math.sqrt( Math.pow(currX[0]-currX[1],2) + Math.pow(currY[0]-currY[1],2))\r\n                const zoomRate = currDist/prevDist\r\n\r\n                const midX = (currX[0] + currX[1])/2\r\n                const midY = (currY[0] + currY[1])/2\r\n\r\n                const midXInCanvas = midX * canvasWidth / styleWidth\r\n                const midYInCanvas = midY * canvasHeight / styleHeight\r\n\r\n                //const prevWidth = this.imgRef.current.width * this.imgZoomRate\r\n                //const prevHeight = this.imgRef.current.height * this.imgZoomRate\r\n\r\n                this.imgZoomRate *= zoomRate\r\n\r\n                this.imgPosX = midXInCanvas + (this.imgPosX - midXInCanvas) * zoomRate\r\n                this.imgPosY = midYInCanvas + (this.imgPosY - midYInCanvas) * zoomRate\r\n\r\n                //const currWidth = this.imgRef.current.width * this.imgZoomRate\r\n                //const currHeight = this.imgRef.current.height * this.imgZoomRate\r\n\r\n                //const dx = (prevWidth-currWidth)/2.0 \r\n                //const dy = (prevHeight-currHeight)/2.0 \r\n                //this.imgPosX += dx\r\n                //this.imgPosY += dy\r\n\r\n                this.ctx.drawImage(this.imgRef.current,\r\n                    0,\r\n                    0,\r\n                    this.imgRef.current.width,\r\n                    this.imgRef.current.height,\r\n                    this.imgPosX,\r\n                    this.imgPosY,\r\n                    this.imgRef.current.width * this.imgZoomRate,\r\n                    this.imgRef.current.height * this.imgZoomRate\r\n                    )\r\n                this.ctx.drawImage(this.imgMaskRef.current,0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n\r\n                console.log(`(rate:${zoomRate} imgPosX:${this.imgPosX} imgPosY:${this.imgPosY} )`)\r\n            }\r\n            else{\r\n                for(let touch of touches){\r\n                    let currX = touch.clientX\r\n                    let currY = touch.clientY\r\n                    currX -= rect.left\r\n                    currY -= rect.top\r\n                    let id = touch.identifier\r\n                    this.toucheInfos[id]={x:currX,y:currY}\r\n                }\r\n            }\r\n        })\r\n    }\r\n    zoomAndMove3(){\r\n        this.toucheInfos = {}\r\n\r\n        this.canvasRef.current.addEventListener(\"touchstart\",(e)=>{\r\n            e.preventDefault()\r\n        })\r\n        this.canvasRef.current.addEventListener(\"touchend\",(e)=>{\r\n            e.preventDefault()\r\n            const touches = e.changedTouches\r\n            for(let touch of touches){\r\n                let id = touch.identifier\r\n                delete this.toucheInfos[id]\r\n            }\r\n        })\r\n        this.canvasRef.current.addEventListener(\"touchcancel\",(e)=>{\r\n            e.preventDefault()\r\n            const touches = e.changedTouches\r\n            for(let touch of touches){\r\n                let id = touch.identifier\r\n                delete this.toucheInfos[id]\r\n            }\r\n        })\r\n        this.canvasRef.current.addEventListener(\"touchmove\",(e)=>{\r\n            e.preventDefault()\r\n            const rect = this.canvasRef.current.getBoundingClientRect()    \r\n            //console.log(\"Camera.touchmove\")\r\n            const touches = e.changedTouches\r\n\r\n            if( touches.length === 1 && Object.keys(this.toucheInfos).length === 1 ){\r\n                let prevX=0\r\n                let prevY=0\r\n                let currX=0\r\n                let currY=0\r\n                for(const key of Object.keys(this.toucheInfos)){\r\n                    prevX = this.toucheInfos[key].x\r\n                    prevY = this.toucheInfos[key].y\r\n                }\r\n                this.toucheInfos={}\r\n                for(let touch of touches){\r\n                    currX = touch.clientX\r\n                    currY = touch.clientY\r\n                    currX -= rect.left\r\n                    currY -= rect.top\r\n                    let id = touch.identifier\r\n                    this.toucheInfos[id]={x:currX,y:currY}\r\n                }\r\n                const dx = currX-prevX\r\n                const dy = currY-prevY\r\n\r\n                console.log(`(dx:${dx},dy:${dy})`)\r\n\r\n                this.imgPosX += dx\r\n                this.imgPosY += dy\r\n\r\n                this.ctx.drawImage(this.imgRef.current,\r\n                    0,\r\n                    0,\r\n                    this.imgRef.current.width,\r\n                    this.imgRef.current.height,\r\n                    this.imgPosX,\r\n                    this.imgPosY,\r\n                    this.imgRef.current.width * this.imgZoomRate,\r\n                    this.imgRef.current.height * this.imgZoomRate\r\n                    )\r\n                this.ctx.drawImage(this.imgMaskRef.current,0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n            }\r\n            else if( touches.length === 2 && Object.keys(this.toucheInfos).length === 2 ){\r\n                let prevX=[]\r\n                let prevY=[]\r\n                for(const key of Object.keys(this.toucheInfos)){\r\n                    prevX.push(this.toucheInfos[key].x)\r\n                    prevY.push(this.toucheInfos[key].y)\r\n                }\r\n                const prevDist = Math.sqrt( Math.pow(prevX[0]-prevX[1],2) + Math.pow(prevY[0]-prevY[1],2))\r\n\r\n                this.toucheInfos={}\r\n                for(let touch of touches){\r\n                    let x = touch.clientX\r\n                    let y = touch.clientY\r\n                    x -= rect.left\r\n                    y -= rect.top\r\n                    let id = touch.identifier\r\n                    this.toucheInfos[id]={x:x,y:y}\r\n                }\r\n                let currX=[]\r\n                let currY=[]\r\n                for(const key of Object.keys(this.toucheInfos)){\r\n                    currX.push(this.toucheInfos[key].x)\r\n                    currY.push(this.toucheInfos[key].y)\r\n                }\r\n                const currDist = Math.sqrt( Math.pow(currX[0]-currX[1],2) + Math.pow(currY[0]-currY[1],2))\r\n                const zoomRate = currDist/prevDist\r\n                const prevWidth = this.imgRef.current.width * this.imgZoomRate\r\n                const prevHeight = this.imgRef.current.width * this.imgZoomRate\r\n\r\n                this.imgZoomRate *= zoomRate\r\n\r\n                const currWidth = this.imgRef.current.width * this.imgZoomRate\r\n                const currHeight = this.imgRef.current.width * this.imgZoomRate\r\n\r\n                const dx = (prevWidth/currWidth)/2.0\r\n                const dy = (prevHeight/currHeight)/2.0\r\n\r\n                this.imgPosX += dx\r\n                this.imgPosY += dy\r\n\r\n                this.ctx.drawImage(this.imgRef.current,\r\n                    0,\r\n                    0,\r\n                    this.imgRef.current.width,\r\n                    this.imgRef.current.height,\r\n                    this.imgPosX,\r\n                    this.imgPosY,\r\n                    this.imgRef.current.width * this.imgZoomRate,\r\n                    this.imgRef.current.height * this.imgZoomRate\r\n                    )\r\n                this.ctx.drawImage(this.imgMaskRef.current,0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n\r\n                console.log(`(rate:${zoomRate})`)\r\n            }\r\n            else{\r\n                this.toucheInfos={}\r\n                for(let touch of touches){\r\n                    let currX = touch.clientX\r\n                    let currY = touch.clientY\r\n                    currX -= rect.left\r\n                    currY -= rect.top\r\n                    let id = touch.identifier\r\n                    this.toucheInfos[id]={x:currX,y:currY}\r\n                }\r\n            }\r\n        })\r\n    }\r\n    zoomAndMove4(){\r\n        this.toucheInfos = {}\r\n\r\n        this.canvasRef.current.addEventListener(\"touchstart\",(e)=>{\r\n            e.preventDefault()\r\n            console.log(\"touchstart\")\r\n            const touches = e.changedTouches\r\n            for(let touch of touches){\r\n                let currX = touch.clientX\r\n                let currY = touch.clientY\r\n                let id = touch.identifier\r\n                this.toucheInfos[id]={x:currX,y:currY}\r\n            }\r\n        })\r\n        this.canvasRef.current.addEventListener(\"touchend\",(e)=>{\r\n            e.preventDefault()\r\n            console.log(\"touchend\")\r\n            const touches = e.changedTouches\r\n            console.dir(touches,{depth:null})\r\n            for(let touch of touches){\r\n                //let currX = touch.clientX\r\n                //let currY = touch.clientY\r\n                let id = touch.identifier\r\n                if(this.toucheInfos[id]){\r\n                    delete this.toucheInfos[id]\r\n                }\r\n                //this.toucheInfos[id]={x:currX,y:currY}\r\n            }\r\n        })\r\n        this.canvasRef.current.addEventListener(\"touchcancel\",(e)=>{\r\n            e.preventDefault()\r\n            console.log(\"touchcancel\")\r\n            const touches = e.changedTouches\r\n            console.dir(touches,{depth:null})\r\n            for(let touch of touches){\r\n                //let currX = touch.clientX\r\n                //let currY = touch.clientY\r\n                let id = touch.identifier\r\n                if(this.toucheInfos[id]){\r\n                    delete this.toucheInfos[id]\r\n                }\r\n                //this.toucheInfos[id]={x:currX,y:currY}\r\n            }\r\n        })\r\n        this.canvasRef.current.addEventListener(\"touchmove\",(e)=>{\r\n            console.log(\"touchmove\")\r\n            e.preventDefault()\r\n            const touches = e.changedTouches\r\n            if(touches.length !== Object.keys(this.toucheInfos).length){\r\n                console.dir(Object.keys(this.toucheInfos))\r\n                console.dir(touches)\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(\"Camera.componentDidMount\")\r\n        this.canvasRef.current.width=1080\r\n        this.canvasRef.current.height=1080\r\n        this.ctx = this.canvasRef.current.getContext(\"2d\")\r\n\r\n        this.zoomAndMove2()\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"Camera.componentWillUnmount\")\r\n    }\r\n    onChange(e){\r\n        console.log(\"onChange\")\r\n        console.dir(e,{depth:null})\r\n        if(e.target.files.length){\r\n            const file = e.target.files[0]\r\n            const fr = new FileReader()\r\n            fr.addEventListener(\"load\",(e)=>{\r\n                const url = fr.result\r\n                //alert(url)\r\n                this.imgRef.current.src = url\r\n                // this.imgRef.current.width=300\r\n                // this.imgRef.current.height=300\r\n                // if(this.imgRef.current.classList.contains(\"camera--hidden\")){\r\n                //     this.imgRef.current.classList.remove(\"camera--hidden\")\r\n                // }\r\n                this.imgRef.current.onload=()=>{\r\n                    console.log(`canvasRef.current.width:${this.canvasRef.current.width}`)\r\n                    console.log(`canvasRef.current.height:${this.canvasRef.current.height}`)\r\n                    console.log(`imgRef.current.width:${this.imgRef.current.width}`)\r\n                    console.log(`imgRef.current.height:${this.imgRef.current.height}`)\r\n                    console.log(`imgMaskRef.current.width:${this.imgMaskRef.current.width}`)\r\n                    console.log(`imgMaskRef.current.height:${this.imgMaskRef.current.height}`)\r\n            \r\n                    const rateW = this.canvasRef.current.width / this.imgRef.current.width\r\n                    const rateH = this.canvasRef.current.height / this.imgRef.current.height\r\n                    const rate = rateW < rateH ? rateW : rateH\r\n    \r\n                    console.log(`rate:${rate}`)\r\n    \r\n                    const dstWidth = this.imgRef.current.width * rate\r\n                    const dstHeight = this.imgRef.current.height * rate\r\n                    console.log(`dstWidth:${dstWidth}`)\r\n                    console.log(`dstHeight:${dstHeight}`)\r\n    \r\n                    const dstPosX = this.canvasRef.current.width/2 - dstWidth/2\r\n                    const dstPosY = this.canvasRef.current.height/2 - dstHeight/2\r\n                    console.log(`dstPosX:${dstPosX}`)\r\n                    console.log(`dstPosY:${dstPosY}`)\r\n    \r\n                    this.ctx.drawImage(this.imgRef.current,\r\n                        0,\r\n                        0,\r\n                        this.imgRef.current.width,\r\n                        this.imgRef.current.height,\r\n                        dstPosX,\r\n                        dstPosY,\r\n                        dstWidth,\r\n                        dstHeight\r\n                        )\r\n                    this.ctx.drawImage(this.imgMaskRef.current,0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n\r\n                    this.imgPosX = dstPosX\r\n                    this.imgPosY = dstPosY\r\n                    this.imgZoomRate = rate\r\n                    // this.ctx.beginPath()\r\n                    // this.ctx.arc(540,540,100,0,2*Math.PI,true)\r\n                    // this.ctx.fillStyle=\"rgba(255,0,0,255)\"\r\n                    // this.ctx.fill()        \r\n\r\n                    this.imgRef.current.onload = ()=>{}\r\n                }\r\n                \r\n            })\r\n            fr.readAsDataURL(file)\r\n        }\r\n    }\r\n    onClickChoosePhoto(e){\r\n        this.inputFile.current.click()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Camera</h1>\r\n                <div>\r\n                    <input type=\"file\" className=\"camera--hidden\" ref={this.inputFile} onChange={this.onChange} accept=\"image/png , image/jpeg\"/>\r\n                    <button onClick={this.onClickChoosePhoto}>choose photo</button>\r\n                </div>\r\n                <div>\r\n                    <img className=\"camera--img camera--hidden\" alt=\"img\" ref={this.imgRef} />\r\n                </div>\r\n                <div>\r\n                    <canvas className=\"camera--canvas\" ref={this.canvasRef}></canvas>\r\n                    <img src={FacePositionMask2} alt=\"mask\" ref={this.imgMaskRef} className=\"camera--hidden\"/> \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","import React,{ Component } from \"react\"\r\nimport './Camera2.css'\r\nimport FacePositionMask2 from \"./FacePositionMask2.svg\"\r\n\r\nexport default class Camera2 extends Component {\r\n    constructor(props){\r\n        console.log(\"Camera2.constructor\")\r\n        super(props);\r\n        this.state = {\r\n             takeButtonEnable:false,\r\n             retakeButtonEnable:false,\r\n             startCameraButtonEnable:false,\r\n        }\r\n        this.videoRef = React.createRef()\r\n        this.canvasRef = React.createRef()\r\n        this.imgMaskRef = React.createRef()\r\n        this.onClickTake = this.onClickTake.bind(this)\r\n        this.onClickRetake = this.onClickRetake.bind(this)\r\n        this.onClickStartCamera = this.onClickStartCamera.bind(this)\r\n        this.ctx=null\r\n    }\r\n    startCamera(){\r\n        const mediaDevices = navigator.mediaDevices || ((navigator.mozGetUserMedia || navigator.webkitGetUserMedia) ? {\r\n            getUserMedia: function(c) {\r\n              return new Promise(function(y, n) {\r\n                (navigator.mozGetUserMedia ||\r\n                 navigator.webkitGetUserMedia).call(navigator, c, y, n);\r\n              });\r\n            }\r\n         } : null);\r\n         \r\n        if(mediaDevices){\r\n            mediaDevices.getUserMedia({\r\n                audio:false,\r\n                //video:true\r\n                video:{\r\n                    width:1080,\r\n                    height:1080,\r\n                    facingMode: \"user\"\r\n                }\r\n            }).then((stream)=>{\r\n                console.log(\"then\")\r\n                console.dir(stream,{depth:null})\r\n                this.videoRef.current.onerror = (e)=>{\r\n                    alert(e)\r\n                    this.videoRef.current.onerror=()=>{}\r\n                }\r\n                this.videoRef.current.srcObject = stream\r\n                //this.videoRef.current.play()\r\n                this.setState({\r\n                    takeButtonEnable:true,\r\n                    retakeButtonEnable:false,\r\n                    startCameraButtonEnable:false\r\n                })\r\n            }).catch((error)=>{\r\n                console.log(error)\r\n                this.setState({\r\n                    takeButtonEnable:false,\r\n                    retakeButtonEnable:false,\r\n                    startCameraButtonEnable:true\r\n                })\r\n                alert(error)\r\n            })\r\n        }\r\n        else{\r\n            console.log(\"getUserMedia() not supported.\");\r\n\r\n            alert(\"getUserMedia() not supported.\")\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"Camera2.componentDidMount\")\r\n\r\n        this.canvasRef.current.width=1080\r\n        this.canvasRef.current.height=1080\r\n        this.ctx = this.canvasRef.current.getContext(\"2d\")\r\n\r\n        this.videoRef.current.addEventListener(\"loadedmetadata\",(e)=>{\r\n            console.log(\"loadedmetadata\")\r\n            //this.videoRef.current.play()\r\n        })\r\n        this.videoRef.current.addEventListener(\"loadeddata\",(e)=>{\r\n            console.log(\"loadeddata\")\r\n            //this.videoRef.current.play()\r\n        })\r\n        this.startCamera()\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"Camera2.componentWillUnmount\")\r\n        try{\r\n            this.videoRef.current.pause()\r\n        }\r\n        catch(error){\r\n\r\n        }\r\n    }\r\n    onClickTake(e){\r\n        this.videoRef.current.pause()\r\n        console.log(`this.imgMaskRef.current.width:${this.imgMaskRef.current.width}`)\r\n        console.log(`this.imgMaskRef.current.height:${this.imgMaskRef.current.height}`)\r\n        this.ctx.drawImage(this.videoRef.current,0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n        this.ctx.drawImage(this.imgMaskRef.current,0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n        if(!this.videoRef.current.classList.contains(\"camera2--hidden\")){\r\n            this.videoRef.current.classList.add(\"camera2--hidden\")\r\n        }\r\n        if(this.canvasRef.current.classList.contains(\"camera2--hidden\")){\r\n            this.canvasRef.current.classList.remove(\"camera2--hidden\")\r\n        }\r\n        this.setState({\r\n            takeButtonEnable:false,\r\n            retakeButtonEnable:true,\r\n        })\r\n    }\r\n    onClickRetake(e){\r\n        if(this.videoRef.current.classList.contains(\"camera2--hidden\")){\r\n            this.videoRef.current.classList.remove(\"camera2--hidden\")\r\n        }\r\n        if(!this.canvasRef.current.classList.contains(\"camera2--hidden\")){\r\n            this.canvasRef.current.classList.add(\"camera2--hidden\")\r\n        }\r\n        this.videoRef.current.play()\r\n        this.setState({\r\n            takeButtonEnable:true,\r\n            retakeButtonEnable:false,\r\n        })\r\n    }\r\n    onClickStartCamera(e){\r\n        this.startCamera()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Camera2</h1>\r\n                <div>\r\n                    <video className=\"camera2--video\" ref={this.videoRef} autoPlay={true} playsInline={true} muted={true}></video>\r\n                </div>\r\n                <div>\r\n                    <canvas className=\"camera2--canvas camera2--hidden\" ref={this.canvasRef}></canvas>\r\n                    <img src={FacePositionMask2} alt=\"mask\" ref={this.imgMaskRef} className=\"camera2--hidden\"/> \r\n                </div>\r\n                <div>\r\n                    <button onClick={this.onClickTake} disabled={!this.state.takeButtonEnable}>シャッター</button>\r\n                    <button onClick={this.onClickRetake} disabled={!this.state.retakeButtonEnable}>撮り直し</button>\r\n                    <button onClick={this.onClickStartCamera} disabled={!this.state.startCameraButtonEnable}>カメラリスタート</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","import React,{ Component } from \"react\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class NotFound extends Component {\r\n    constructor(props){\r\n        console.log(\"NotFound.constructor\")\r\n        super(props);\r\n        // this.state = {\r\n        //      state:0\r\n        // }\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"NotFound.componentDidMount\")\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"NotFound.componentWillUnmount\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>NotFound</h1>\r\n                <p>\r\n                    <Link to=\"/\">Go to the home page</Link>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","import React ,{ Component } from \"react\"\n//import logo from './logo.svg';\nimport './App.css';\n\nimport { Route, Routes, Link, Outlet, useNavigate } from 'react-router-dom'\n\nimport Home from './Home'\nimport Page1 from './Page1'\nimport Me from './Me'\nimport Others from './Others'\nimport About from './About'\nimport Contact from './Contact'\nimport Camera from './Camera'\nimport Camera2 from './Camera2'\nimport NotFound from './NotFound'\n\nfunction Layout() {\n  const navigate = useNavigate()\n  const handleClick = (e)=>{\n    if(e.target.name===\"home\"){\n      navigate(\"/\")\n    }\n    else if(e.target.name===\"page1\"){\n      navigate(\"/page1\")\n    }\n    else if(e.target.name===\"about\"){\n      navigate(\"/about\")\n    }\n    else if(e.target.name===\"contact\"){\n      navigate(\"/contact\")\n    }\n    else if(e.target.name===\"camera\"){\n      navigate(\"/camera\")\n    }\n    else if(e.target.name===\"camera2\"){\n      navigate(\"/camera2\")\n    }\n  }\n  return (\n    <div>\n      {/* A \"layout route\" is a good place to put markup you want to\n          share across all the pages on your site, like navigation. */}\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/page1\">Page1</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li>\n            <Link to=\"/contact\">Contact</Link>\n          </li>\n          <li>\n            <Link to=\"/camera\">Camera</Link>\n          </li>\n          <li>\n            <Link to=\"/camera2\">Camera2</Link>\n          </li>\n          <li>\n            <Link to=\"/nothing-here\">Nothing Here</Link>\n          </li>\n        </ul>\n        <div>\n        <button onClick={handleClick} name=\"home\">Home</button>\n        <button onClick={handleClick} name=\"page1\">Page1</button>\n        <button onClick={handleClick} name=\"about\">About</button>\n        <button onClick={handleClick} name=\"contact\">Contact</button>\n        <button onClick={handleClick} name=\"camera\">Camera</button>\n        <button onClick={handleClick} name=\"camera2\">Camera2</button>\n        </div>\n      </nav>\n\n      <hr />\n\n      {/* An <Outlet> renders whatever child route is currently active,\n          so you can think about this <Outlet> as a placeholder for\n          the child routes we defined above. */}\n      <Outlet />\n    </div>\n  );\n}\n\nclass App extends Component{\n  constructor(props){\n    console.log(\"App.constructor\")\n    super(props);\n    // this.state = {\n    //      state:0\n    // }\n    //this.handleClick = this.handleClick.bind(this)\n  }\n  componentDidMount(){\n      console.log(\"App.componentDidMount\")  \n  }\n  componentWillUnmount(){\n    console.log(\"App.componentWillUnmount\")\n  }\n  // handleClick(e){\n  //   if(e.target.name===\"home\"){\n  //     this.props.navigate(\"/\")\n  //   }\n  //   else if(e.target.name===\"page1\"){\n  //     this.props.navigate(\"/page1\")\n  //   }\n  //   else if(e.target.name===\"about\"){\n  //     this.props.navigate(\"/about\")\n  //   }\n  //   else if(e.target.name===\"contact\"){\n  //     this.props.navigate(\"/contact\")\n  //   }\n  // }\n  render() {\n    return (\n      <div>\n        <h1>Hello React Pwa</h1>\n        {\n          /*\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/page1\">Page1</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li>\n            <Link to=\"/contact\">Contact</Link>\n          </li>\n        </ul>\n          */\n        }\n        <div>\n          {/*\n        <button onClick={this.handleClick} name=\"home\">Home</button>\n        <button onClick={this.handleClick} name=\"page1\">Page1</button>\n        <button onClick={this.handleClick} name=\"about\">About</button>\n        <button onClick={this.handleClick} name=\"contact\">Contact</button>\n           */\n          }\n        </div>\n        <Routes>\n          <Route exact path=\"/\"  element={<Layout/>}>\n            <Route index element={<Home/>}/>\n            <Route path=\"page1\" element={<Page1 />} />\n            <Route path=\"page1/:id\" element={<Others/>}/>\n            <Route path=\"page1/me\" element={<Me/>}/>\n            <Route path=\"about\" element={<About />} />\n            <Route path=\"contact\" element={<Contact />} />\n            <Route path=\"camera\" element={<Camera />} />\n            <Route path=\"camera2\" element={<Camera2 />} />\n             {/* Using path=\"*\"\" means \"match anything\", so this route\n                acts like a catch-all for URLs that we don't have explicit\n                routes for. */}\n            <Route path=\"*\" element={<NotFound />} />\n          </Route>\n        </Routes> \n      </div>    \n    )\n  }\n}\n\n// function App() {\n//   const navigate = useNavigate()\n//   const handleClick = (e) => {\n//     console.log(e)\n//     if(e.target.name===\"home\"){\n//       navigate(\"/\")\n//     }\n//     else if(e.target.name===\"page1\"){\n//       navigate(\"/page1\")\n//     }\n//     else if(e.target.name===\"about\"){\n//       navigate(\"/about\")\n//     }\n//     else if(e.target.name===\"contact\"){\n//       navigate(\"/contact\")\n//     }\n//   }\n//   return(\n//     <div>\n//     <h1>Hello React Pwa</h1>\n//     <ul>\n//       <li>\n//         <Link to=\"/\">Home</Link>\n//       </li>\n//       <li>\n//         <Link to=\"/page1\">Page1</Link>\n//       </li>\n//       <li>\n//         <Link to=\"/about\">About</Link>\n//       </li>\n//       <li>\n//         <Link to=\"/contact\">Contact</Link>\n//       </li>\n//     </ul>\n//     <div>\n//     <button onClick={handleClick} name=\"home\">Home</button>\n//     <button onClick={handleClick} name=\"page1\">Page1</button>\n//     <button onClick={handleClick} name=\"about\">About</button>\n//     <button onClick={handleClick} name=\"contact\">Contact</button>\n//     </div>\n//     <Routes>\n//       <Route exact path=\"/\"  element={<Home/>}/>\n//       <Route path=\"/page1\" element={<Page1/>}/>\n//       <Route path=\"/about\" element={<About/>}/>\n//       <Route path=\"/contact\" element={<Contact/>}/>\n//       <Route element={<NotFound/>}/>\n//     </Routes>\n//     </div>\n//   )\n// }\n\n\n//\n//もとのApp\n//\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, useNavigate } from 'react-router-dom'\n\nfunction AppWithNavigate(){\n  const navigate = useNavigate()\n  return (\n    <App navigate = {navigate}/>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"react-pwa\">\n      <AppWithNavigate/>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n//serviceWorkerRegistration.unregister();\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}