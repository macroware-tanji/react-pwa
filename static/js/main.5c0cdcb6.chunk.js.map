{"version":3,"sources":["Home.js","CheckOn.svg","CheckOff.svg","TagX.svg","Search.svg","ArrowUp.svg","ArrowDown.svg","CheckBox.js","Background.svg","SplashBK.svg","TagList.js","Page1.js","Me.js","Others.js","About.js","Contact.js","FacePositionMask2.svg","Camera.js","Camera2.js","NotFound.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Home","props","console","log","Component","CheckBox","state","checked","onChange","bind","onClickOn","onClickOff","txt","e","this","setState","target","param","newValue","className","src","CheckOn","alt","ref","imgCheckOnRef","onClick","CheckOff","imgCheckOffRef","TagList","tags","name","params","onClickX","map","tag","newTags","filter","index","push","i","parseInt","undefined","find","element","removeByIndex","TagX","registerLocale","ja","Page1","startDate","Date","handleChange","date","React","createRef","imgTagXRef","imgSearchRef","onChangeCheckBox","ExampleCustomInput","forwardRef","value","type","readOnly","selected","showTimeSelect","locale","dateFormat","customInput","renderCustomHeader","decreaseMonth","changeYear","changeMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","style","margin","display","justifyContent","disabled","border","outline","backgroundColor","cursor","getFullYear","getMonth","a","b","c","Search","ArrowUp","ArrowDown","Me","OthersClass","id","is","Others","useParams","About","Contact","href","Camera","imageLoaded","x1","y1","x2","y2","inputFile","imgRef","canvasRef","imgMaskRef","ctx","onClickChoosePhoto","imgPosX","imgPosY","imgZoomRate","onTouchStart","preventDefault","rect","current","getBoundingClientRect","touches","changedTouches","touch","x","clientX","y","clientY","left","top","identifier","toucheInfos","onTouchEnd","onTouchCancel","onTouchMove","canvasWidth","width","canvasHeight","height","styleWidth","styleHeight","Object","keys","length","prevX","prevY","currX","currY","key","dx","dy","drawImage","prevDist","Math","sqrt","pow","exists","ids","dir","zoomRate","midXInCanvas","midYInCanvas","addEventListener","removeEventListener","getContext","initZoomAndMove","depth","files","file","fr","FileReader","url","result","onload","rateW","rateH","rate","dstWidth","dstHeight","dstPosX","dstPosY","removeZoomAndMoveHandlers","addZoomAndMoveHandlers","readAsDataURL","click","accept","FacePositionMask2","Camera2","takeButtonEnable","retakeButtonEnable","startCameraButtonEnable","videoRef","onClickTake","onClickRetake","onClickStartCamera","mediaDevices","navigator","mozGetUserMedia","webkitGetUserMedia","getUserMedia","Promise","n","call","audio","video","facingMode","then","stream","onerror","alert","srcObject","catch","error","startCamera","pause","classList","contains","add","remove","play","autoPlay","playsInline","muted","NotFound","to","Layout","navigate","useNavigate","handleClick","App","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppWithNavigate","ReactDOM","render","StrictMode","basename","document","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.5c0cdcb6.chunk.js","sourcesContent":["import React,{ Component } from \"react\"\r\n\r\nexport default class Home extends Component {\r\n    constructor(props){\r\n        console.log(\"Home.constructor\")\r\n        super(props);\r\n        // this.state = {\r\n        //      state:0\r\n        // }\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"Home.componentDidMount\")\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"Home.componentWillUnmount\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Home</h1>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","export default __webpack_public_path__ + \"static/media/CheckOn.6297bd68.svg\";","export default __webpack_public_path__ + \"static/media/CheckOff.06ca897d.svg\";","export default __webpack_public_path__ + \"static/media/TagX.b5bc0701.svg\";","export default __webpack_public_path__ + \"static/media/Search.18a4a72f.svg\";","export default __webpack_public_path__ + \"static/media/ArrowUp.02159087.svg\";","export default __webpack_public_path__ + \"static/media/ArrowDown.e657d664.svg\";","import React,{ Component } from \"react\"\nimport CheckOn from \"./CheckOn.svg\"\nimport CheckOff from \"./CheckOff.svg\"\nimport \"./CheckBox.css\"\n\nexport default class CheckBox extends Component {\n    constructor(props){\n        super(props);\n        console.log(\"CheckBox.constructor\")\n        this.state = {\n            checked:false\n        }\n        this.onChange=this.onChange.bind(this)\n        this.onClickOn=this.onClickOn.bind(this)\n        this.onClickOff=this.onClickOff.bind(this)\n        console.log(this.props.txt)\n    }\n    componentDidMount(){\n        console.log(\"CheckBox.componentDidMount\")\n    }\n    componentWillUnmount(){\n        console.log(\"CheckBox.componentWillUnmount\")\n    }\n    onChange(e){\n        this.setState({checked:e.target.checked})\n        console.log(\"onChange\")\n    }\n    onClickOn(e){\n        this.setState({checked:false})\n        console.log(\"onClickOn\")\n        if(this.props.onChange){\n            this.props.onChange(false, this.props.param)\n        }\n    }\n    onClickOff(e){\n        this.setState({checked:true})\n        console.log(\"onClickOff\")\n        if(this.props.onChange){\n            this.props.onChange(true,this.props.param)\n        }\n    }\n    get checked(){\n        return this.state.checked\n    }\n    set checked(newValue){\n        return this.setState({checked:newValue})\n    }\n    render() {\n        return (\n        <span className=\"checkbox\">\n            {\n                /*\n            <input type=\"checkbox\" name=\"checkbox\" onChange={this.onChange}>\n            </input>\n                */\n            }\n            {   this.state.checked ? \n                (\n                    <img className=\"checkbox--checkmark\" src={CheckOn} alt=\"CheckOn\" ref={this.imgCheckOnRef} onClick={this.onClickOn}/> \n                ) : \n                (\n                    <img className=\"checkbox--checkmark\" src={CheckOff} alt=\"CheckOff\" ref={this.imgCheckOffRef} onClick={this.onClickOff}/> \n                )\n            }\n            <span className=\"checkbox--label\">{this.props.txt}</span>    \n        </span>\n)\n    }\n}    \n","export default __webpack_public_path__ + \"static/media/Background.2a4cff82.svg\";","export default __webpack_public_path__ + \"static/media/SplashBK.416482e1.svg\";","import React,{ Component } from \"react\"\nimport \"./TagList.css\"\nimport TagX from \"./TagX.svg\"\n\n\nexport default class TagList extends Component {\n    constructor(props){\n        console.log(\"TagList.constructor\")\n        super(props);\n        this.state = {\n            tags:[\n                {name:\"aaa\",params:{}},\n                {name:\"bbb\",param:{}},\n                {name:\"ccc\",param:{}}\n            ]\n        }\n        //this.tags = [\"aaa\",\"bbb\",\"ccc\"]\n        this.onClickX = this.onClickX.bind(this)\n    }\n    componentDidMount(){\n        console.log(\"TagList.componentDidMount\")\n    }\n    componentWillUnmount(){\n        console.log(\"TagList.componentWillUnmount\")\n    }\n    get(){\n        let newTags = this.state.tags.map( tag => ({...tag}))\n        return newTags\n    }\n    add(name,param){\n        let newTags = this.state.tags.filter( (tag,index) => { return true })\n        newTags.push({name:name,param:param})\n        console.log(newTags)\n        this.setState({tags:newTags})\n    }\n    remove(name){\n        let newTags = this.state.tags.filter( (tag,index) => { return tag.name !== name })\n        console.log(newTags)\n        this.setState({tags:newTags})\n    }\n    removeByIndex(index){\n        let newTags = this.state.tags.filter( (tag,i) => {\n            console.log(tag,i) \n            return i !== parseInt(index) })\n        console.log(newTags)\n        this.setState({tags:newTags})\n    }\n    exists(name){\n        return this.state.tags.find(element => element.name === name) !== undefined;\n    }\n    onClickX(e){\n        console.log(e.target.name)\n        this.removeByIndex(parseInt(e.target.name))\n    }\n    render() {\n        return (\n            <div className=\"taglist\">\n                {\n                    this.state.tags.map((tag,index)=>\n                        (<div className=\"taglist--tag\" key={index}>\n                            <span className=\"taglist--tag__label\" >{tag.name}</span>\n                            <img className=\"taglist--tag__xmark\" src={TagX} alt=\"TagX\" name={index} onClick={this.onClickX}/> \n                        </div>))\n                }\n            </div>\n        )\n    }\n}    \n","import React,{ Component } from \"react\"\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"./Page1.css\"\r\nimport { registerLocale, setDefaultLocale } from  \"react-datepicker\";\r\nimport ja from 'date-fns/locale/ja';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport CheckOn from \"./CheckOn.svg\"\r\nimport CheckOff from \"./CheckOff.svg\"\r\nimport \"./CheckOnOff.css\"\r\nimport TagX from \"./TagX.svg\"\r\nimport Search from \"./Search.svg\"\r\nimport ArrowUp from \"./ArrowUp.svg\"\r\nimport ArrowDown from \"./ArrowDown.svg\"\r\nimport Background from \"./Background.svg\"\r\nimport SplashBK from \"./SplashBK.svg\"\r\nimport CheckBox from \"./CheckBox\"\r\nimport TagList from \"./TagList\"\r\n\r\nimport \"./date-time.css\"\r\n\r\nregisterLocale('ja', ja)\r\n\r\nexport default class Page1 extends Component {\r\n    constructor(props){\r\n        console.log(\"Page1.constructor\")\r\n        super(props);\r\n        this.state = {\r\n            startDate: new Date()\r\n        }\r\n        this.handleChange = (date) => {\r\n            this.setState({\r\n              startDate: date\r\n            });\r\n            console.log(`date:${date}`)\r\n          }\r\n        this.imgCheckOnRef = React.createRef() \r\n        this.imgCheckOffRef = React.createRef() \r\n        this.imgTagXRef = React.createRef() \r\n        this.imgSearchRef = React.createRef() \r\n\r\n        this.onChangeCheckBox = this.onChangeCheckBox.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"Page1.componentDidMount\")\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"Page1.componentWillUnmount\")\r\n    }\r\n    onChangeCheckBox(checked, param){\r\n        console.log(checked,param)\r\n    }\r\n    render() {\r\n        // const ExampleCustomInput = React.forwardRef(({ value, onClick }, ref) => (\r\n        //     <button className=\"date-time--input\" onClick={onClick} ref={ref}>\r\n        //     {value}\r\n        //   </button>\r\n        //   ));\r\n          const ExampleCustomInput = React.forwardRef(({ value, onClick }, ref) => (\r\n            <input type=\"text\" readOnly={true} className=\"date-time--input\" onClick={onClick} ref={ref} value={value}/>\r\n          ))\r\n        return (\r\n            <div className=\"page1\">\r\n                <h1>DatePicker</h1>\r\n                <DatePicker\r\n                    selected={this.state.startDate}\r\n                    onChange={this.handleChange}\r\n                    showTimeSelect\r\n                    locale=\"ja\"\r\n                    dateFormat=\"yyyy/MM/dd(E)HH:mm\"\r\n                    className=\"date-time--input\"\r\n                    customInput={<ExampleCustomInput />}\r\n                />\r\n                <DatePicker\r\n                    selected={this.state.startDate}\r\n                    onChange={this.handleChange}\r\n                    showTimeSelect\r\n                    locale=\"ja\"\r\n                    dateFormat=\"yyyy/MM/dd(E)HH:mm\"\r\n                    className=\"date-time--input\"\r\n                />\r\n                <DatePicker\r\n                    renderCustomHeader={({\r\n                        date,\r\n                        changeYear,\r\n                        changeMonth,\r\n                        decreaseMonth,\r\n                        increaseMonth,\r\n                        prevMonthButtonDisabled,\r\n                        nextMonthButtonDisabled,\r\n                    }) => (\r\n                        <div\r\n                            style={{\r\n                                margin: 10,\r\n                                display: \"flex\",\r\n                                justifyContent: \"space-around\",\r\n                            }}\r\n                            >\r\n                            <button onClick={decreaseMonth} disabled={prevMonthButtonDisabled} style={{border: \"none\",outline: \"none\",backgroundColor: \"transparent\", cursor:\"pointer\"}} >\r\n                                <div>{\"<\"}</div>\r\n                            </button>\r\n                            <div>{date.getFullYear() + \" 年 \" + (date.getMonth() + 1) + \" 月\"}</div>\r\n                            <button onClick={increaseMonth} disabled={nextMonthButtonDisabled} style={{border: \"none\",outline: \"none\",backgroundColor: \"transparent\", cursor:\"pointer\"}}>\r\n                                {\">\"}\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                    selected={this.state.startDate}\r\n                    onChange={this.handleChange}\r\n                    showTimeSelect\r\n                    locale=\"ja\"\r\n                    dateFormat=\"yyyy/MM/dd(E)HH:mm\"\r\n                    className=\"date-time--input\"\r\n                />\r\n                <pre>\r\n{`\r\nReact Datepicker\r\n\r\nThe package can be installed via NPM:\r\n\r\nnpm install react-datepicker --save\r\n\r\nOr by using Yarn:\r\n\r\nyarn add react-datepicker\r\n`}\r\n                </pre>\r\n                <TagList/>\r\n                <CheckBox txt={\"チェックボックス\"} param={{a:1, b:2, c:3}} onChange={this.onChangeCheckBox}/>\r\n                {\r\n                    /*\r\n                    */\r\n                }\r\n                <img src={CheckOff} alt=\"CheckOff\" ref={this.imgCheckOffRef} /> \r\n                <img src={CheckOn} alt=\"CheckOn\" ref={this.imgCheckOnRef} /> \r\n                <img src={TagX} alt=\"TagX\" ref={this.imgTagXRef} />  \r\n                <img src={Search} alt=\"TagX\" ref={this.imgSearchRef} />\r\n                <img src={ArrowUp} alt=\"ArrowUp\" />\r\n                <img src={ArrowDown} alt=\"ArrowDown\" />\r\n                {\r\n                    /*\r\n                <div>\r\n                <img src={Background} alt=\"Background\" />\r\n                <img src={SplashBK} alt=\"SplashBK\" />\r\n                </div> \r\n                    */\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","import React,{ Component } from \"react\"\r\n\r\nexport default class Me extends Component {\r\n    constructor(props){\r\n        console.log(\"Me.constructor\")\r\n        super(props);\r\n        // this.state = {\r\n        //      state:0\r\n        // }\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"Me.componentDidMount\")\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"Me.componentWillUnmount\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Me</h1>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","import React,{ Component } from \"react\"\r\nimport { useParams  } from 'react-router-dom'\r\n//import { withRouter } from 'react-router';\r\n\r\nclass OthersClass extends Component {\r\n    constructor(props){\r\n        console.log(\"Others.constructor\")\r\n        super(props);\r\n        // this.state = {\r\n        //      state:0\r\n        // }\r\n        //console.log(this.props.params)\r\n        const {id} = this.props.params\r\n        this.is=id\r\n        console.log(id)\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"Others.componentDidMount\")\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"Others.componentWillUnmount\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Others {this.is}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default function Others(){\r\n    const params = useParams()\r\n    return (\r\n        <OthersClass params={params}/>\r\n    )\r\n}\r\n","import React,{ Component } from \"react\"\r\n\r\nexport default class About extends Component {\r\n    constructor(props){\r\n        console.log(\"About.constructor\")\r\n        super(props);\r\n        // this.state = {\r\n        //      state:0\r\n        // }\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"About.componentDidMount\")\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"About.componentWillUnmount\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>About</h1>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","import React,{ Component } from \"react\"\r\n\r\nexport default class Contact extends Component {\r\n    constructor(props){\r\n        console.log(\"Contact.constructor\")\r\n        super(props);\r\n        // this.state = {\r\n        //      state:0\r\n        // }\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"Contact.componentDidMount\")\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"Contact.componentWillUnmount\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Contact</h1>\r\n                <a href=\"tel:0000000000\">0000000000</a>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","export default __webpack_public_path__ + \"static/media/FacePositionMask2.646f4e6b.svg\";","import React,{ Component } from \"react\"\r\nimport './Camera.css'\r\nimport FacePositionMask2 from \"./FacePositionMask2.svg\"\r\n\r\nexport default class Camera extends Component {\r\n    constructor(props){\r\n        console.log(\"Camera.constructor\")\r\n        super(props);\r\n        this.state = {\r\n             imageLoaded:false,\r\n             x1:0,\r\n             y1:0,\r\n             x2:0,\r\n             y2:0\r\n        }\r\n        this.inputFile = React.createRef()\r\n        this.imgRef = React.createRef()\r\n        this.canvasRef = React.createRef()\r\n        this.imgMaskRef = React.createRef()\r\n        this.ctx = null\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onClickChoosePhoto = this.onClickChoosePhoto.bind(this)\r\n\r\n        this.imgPosX = 0\r\n        this.imgPosY = 0\r\n        this.imgZoomRate = 1.0\r\n    }\r\n\r\n    // zoomAndMove1(){\r\n    //     this.toucheInfos = {}\r\n\r\n    //     this.canvasRef.current.addEventListener(\"touchstart\",(e)=>{\r\n    //         e.preventDefault()\r\n    //         const rect = this.canvasRef.current.getBoundingClientRect()\r\n    //         const touches = e.changedTouches\r\n    //         //console.log(\"Camera.touchstart\")\r\n    //         let x1 = NaN\r\n    //         let y1 = NaN\r\n    //         let x2 = NaN\r\n    //         let y2 = NaN\r\n    //         let id1=NaN\r\n    //         let id2=NaN\r\n    //         if(touches.length>0){\r\n    //             x1 = touches[0].clientX\r\n\t// \t        y1 = touches[0].clientY\r\n    //             x1 -= rect.left\r\n    //             y1 -= rect.top\r\n    //             id1 = touches[0].identifier\r\n    //         }\r\n    //         if(touches.length>1){\r\n    //             x2 = touches[1].clientX\r\n\t// \t        y2 = touches[1].clientY\r\n    //             x2 -= rect.left\r\n    //             y2 -= rect.top\r\n    //             id2 = touches[1].identifier\r\n    //         }\r\n    //         this.setState({x1:x1,\r\n    //             y1:y1,x2:x2,\r\n    //             y2:y2})\r\n            \r\n    //         const canvasWidth = this.canvasRef.current.width \r\n    //         const canvasHeight = this.canvasRef.current.height\r\n    //         const styleWidth =  320//this.canvasRef.current.style.width\r\n    //         const styleHeight =  320//this.canvasRef.current.style.height\r\n\r\n    //         console.log(`Camera.touchstart:(${x1},${y1},${id1}),(${x2},${y2},${id2})` )\r\n    //         this.ctx.clearRect(0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n    //         this.ctx.beginPath()\r\n    //         this.ctx.arc(x1*canvasWidth/styleWidth,y1*canvasHeight/styleHeight,50,0,2*Math.PI,false)\r\n    //         this.ctx.fillStyle=\"rgba(255,0,0,255)\"\r\n    //         this.ctx.fill()    \r\n    //     })\r\n    //     this.canvasRef.current.addEventListener(\"touchend\",(e)=>{\r\n    //         e.preventDefault()\r\n    //         const rect = this.canvasRef.current.getBoundingClientRect()    \r\n    //         //console.log(\"Camera.touchend\")\r\n    //         const touches = e.changedTouches\r\n\r\n    //         let x1 = NaN\r\n    //         let y1 = NaN\r\n    //         let x2 = NaN\r\n    //         let y2 = NaN\r\n    //         let id1=NaN\r\n    //         let id2=NaN\r\n    //         if(touches.length>0){\r\n    //             x1 = touches[0].clientX\r\n\t// \t        y1 = touches[0].clientY\r\n    //             x1 -= rect.left\r\n    //             y1 -= rect.top\r\n    //             id1 = touches[0].identifier\r\n    //         }\r\n    //         if(touches.length>1){\r\n    //             x2 = touches[1].clientX\r\n\t// \t        y2 = touches[1].clientY\r\n    //             x2 -= rect.left\r\n    //             y2 -= rect.top\r\n    //             id2 = touches[1].identifier\r\n    //         }\r\n    //         this.setState({x1:x1,\r\n    //             y1:y1,x2:x2,\r\n    //             y2:y2})\r\n\r\n    //         const canvasWidth = this.canvasRef.current.width \r\n    //         const canvasHeight = this.canvasRef.current.height\r\n    //         const styleWidth =  320//this.canvasRef.current.style.width\r\n    //         const styleHeight =  320//this.canvasRef.current.style.height\r\n\r\n    //         console.log(`Camera.touchend:(${x1},${y1},${id1}),(${x2},${y2},${id2})` )\r\n\r\n    //         this.ctx.clearRect(0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n    //         this.ctx.beginPath()\r\n    //         this.ctx.arc(x1*canvasWidth/styleWidth,y1*canvasHeight/styleHeight,50,0,2*Math.PI,false)    \r\n    //         this.ctx.fillStyle=\"rgba(255,0,0,255)\"\r\n    //         this.ctx.fill()    \r\n\r\n    //         //console.dir(touches,{depth:null})\r\n    //     })\r\n    //     this.canvasRef.current.addEventListener(\"touchcancel\",(e)=>{\r\n    //         e.preventDefault()\r\n    //         //console.log(\"Camera.touchcancel\")\r\n    //         const rect = this.canvasRef.current.getBoundingClientRect()    \r\n\r\n    //         const touches = e.changedTouches\r\n    //         let x1 = NaN\r\n    //         let y1 = NaN\r\n    //         let x2 = NaN\r\n    //         let y2 = NaN\r\n    //         let id1=NaN\r\n    //         let id2=NaN\r\n    //         if(touches.length>0){\r\n    //             x1 = touches[0].clientX\r\n\t// \t        y1 = touches[0].clientY\r\n    //             x1 -= rect.left\r\n    //             y1 -= rect.top\r\n    //             id1 = touches[0].identifier\r\n    //         }\r\n    //         if(touches.length>1){\r\n    //             x2 = touches[1].clientX\r\n\t// \t        y2 = touches[1].clientY\r\n    //             x2 -= rect.left\r\n    //             y2 -= rect.top\r\n    //             id2 = touches[1].identifier\r\n    //         }\r\n    //         this.setState({x1:x1,\r\n    //             y1:y1,x2:x2,\r\n    //             y2:y2})\r\n\r\n    //         console.log(`Camera.touchcancel:(${x1},${y1},${id1}),(${x2},${y2},${id2})` )\r\n\r\n    //         // const canvasWidth = this.canvasRef.current.width \r\n    //         // const canvasHeight = this.canvasRef.current.height\r\n    //         // const styleWidth =  this.canvasRef.current.style.width\r\n    //         // const styleHeight =  this.canvasRef.current.style.height\r\n\r\n    //         this.ctx.clearRect(0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n\r\n    //         // //console.dir(touches,{depth:null})\r\n    //     })\r\n    //     this.canvasRef.current.addEventListener(\"touchmove\",(e)=>{\r\n    //         e.preventDefault()\r\n    //         const rect = this.canvasRef.current.getBoundingClientRect()    \r\n    //         //console.log(\"Camera.touchmove\")\r\n    //         const touches = e.changedTouches\r\n        \r\n    //         let x1 = NaN\r\n    //         let y1 = NaN\r\n    //         let x2 = NaN\r\n    //         let y2 = NaN\r\n    //         let id1=NaN\r\n    //         let id2=NaN\r\n    //         if(touches.length>0){\r\n    //             x1 = touches[0].clientX\r\n\t// \t        y1 = touches[0].clientY\r\n    //             x1 -= rect.left\r\n    //             y1 -= rect.top\r\n    //             id1 = touches[0].identifier\r\n    //         }\r\n    //         if(touches.length>1){\r\n    //             x2 = touches[1].clientX\r\n\t// \t        y2 = touches[1].clientY\r\n    //             x2 -= rect.left\r\n    //             y2 -= rect.top\r\n    //             id2 = touches[1].identifier\r\n    //         }\r\n    //         this.setState({x1:x1,\r\n    //             y1:y1,x2:x2,\r\n    //             y2:y2})\r\n            \r\n    //         //console.dir(touches,{depth:null})\r\n    //         const canvasWidth = this.canvasRef.current.width \r\n    //         const canvasHeight = this.canvasRef.current.height\r\n    //         const styleWidth =  320//this.canvasRef.current.style.width\r\n    //         const styleHeight =  320//this.canvasRef.current.style.height\r\n\r\n    //         console.log(`Camera.touchmove:(${x1},${y1},${id1}),(${x2},${y2},${id2})` )\r\n\r\n    //         this.ctx.clearRect(0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n    //         this.ctx.beginPath()\r\n    //         this.ctx.arc(x1*canvasWidth/styleWidth,y1*canvasHeight/styleHeight,50,0,2*Math.PI,false)\r\n    //         this.ctx.fillStyle=\"rgba(255,0,0,255)\"\r\n    //         this.ctx.fill()    \r\n\r\n    //         if( !isNaN(x2) && !isNaN(y2)){\r\n    //             this.ctx.beginPath()\r\n    //             this.ctx.arc(x2*canvasWidth/styleWidth,y2*canvasHeight/styleHeight,50,0,2*Math.PI,false)    \r\n    //             this.ctx.fillStyle=\"rgba(255,0,0,255)\"\r\n    //             this.ctx.fill()    \r\n    //         }\r\n    //     })\r\n\r\n    // }\r\n    initZoomAndMove(){\r\n        this.onTouchStart = (e)=>{\r\n            e.preventDefault()\r\n            const rect = this.canvasRef.current.getBoundingClientRect()    \r\n            //console.log(\"Camera.touchstart\")\r\n            const touches = e.changedTouches\r\n\r\n            for(let touch of touches){\r\n                let x = touch.clientX\r\n\t\t        let y = touch.clientY\r\n                x -= rect.left\r\n                y -= rect.top\r\n                let id = touch.identifier\r\n\r\n                this.toucheInfos[id]={x:x,y:y}\r\n            }\r\n        }\r\n        this.onTouchEnd = (e)=>{\r\n            e.preventDefault()\r\n            //const rect = this.canvasRef.current.getBoundingClientRect()    \r\n            //console.log(\"Camera.touchend\")\r\n            const touches = e.changedTouches\r\n\r\n            for(let touch of touches){\r\n                let id = touch.identifier\r\n                delete this.toucheInfos[id]\r\n            }\r\n        }\r\n        this.onTouchCancel = (e)=>{\r\n            e.preventDefault()\r\n            //console.log(\"Camera.touchcancel\")\r\n            //const rect = this.canvasRef.current.getBoundingClientRect()    \r\n\r\n            const touches = e.changedTouches\r\n            for(let touch of touches){\r\n                let id = touch.identifier\r\n                delete this.toucheInfos[id]\r\n            }\r\n        }\r\n        this.onTouchMove = (e)=>{\r\n            e.preventDefault()\r\n            const rect = this.canvasRef.current.getBoundingClientRect()    \r\n            //console.log(\"Camera.touchmove\")\r\n\r\n            const canvasWidth = this.canvasRef.current.width \r\n            const canvasHeight = this.canvasRef.current.height\r\n            const styleWidth =  rect.width//this.canvasRef.current.style.width\r\n            const styleHeight =  rect.height//this.canvasRef.current.style.height\r\n\r\n            const touches = e.changedTouches\r\n\r\n            if( Object.keys(this.toucheInfos).length === 1){\r\n                let prevX=0\r\n                let prevY=0\r\n                let currX=0\r\n                let currY=0\r\n\r\n                // if(Object.keys(this.toucheInfos).length < touches.length){\r\n                //     let exists=true\r\n                //     let ids=[]\r\n                //     for(let touch of touches){\r\n                //         let id = touch.identifier\r\n                //         if(!this.toucheInfos[id]){\r\n                //             console.log(`not exists ${id}`)\r\n                //             exists=false\r\n                //         }\r\n                //         ids.push(id)\r\n                //     }\r\n                //     if(!exists){\r\n                //         console.dir(Object.keys(this.toucheInfos))\r\n                //         console.dir(ids)\r\n                //     }\r\n    \r\n                //     for(let touch of touches){\r\n                //         currX = touch.clientX\r\n                //         currY = touch.clientY\r\n                //         currX -= rect.left\r\n                //         currY -= rect.top\r\n                //         let id = touch.identifier\r\n                //         this.toucheInfos[id]={x:currX,y:currY}\r\n                //     }\r\n                // }\r\n                // else{\r\n                    for(const key of Object.keys(this.toucheInfos)){\r\n                        prevX = this.toucheInfos[key].x\r\n                        prevY = this.toucheInfos[key].y\r\n                    }\r\n\r\n                    for(let touch of touches){\r\n                        let id = touch.identifier\r\n                        if(this.toucheInfos[id]){\r\n                            currX = touch.clientX\r\n                            currY = touch.clientY\r\n                            currX -= rect.left\r\n                            currY -= rect.top\r\n                            this.toucheInfos[id]={x:currX,y:currY}\r\n                        }\r\n                    }\r\n\r\n                    const dx = (currX-prevX) * canvasWidth/styleWidth\r\n                    const dy = (currY-prevY) * canvasHeight/styleHeight\r\n    \r\n                    console.log(`(dx:${dx},dy:${dy})`)\r\n    \r\n                    this.imgPosX += dx\r\n                    this.imgPosY += dy\r\n    \r\n                    this.ctx.drawImage(this.imgRef.current,\r\n                        0,\r\n                        0,\r\n                        this.imgRef.current.width,\r\n                        this.imgRef.current.height,\r\n                        this.imgPosX,\r\n                        this.imgPosY,\r\n                        this.imgRef.current.width * this.imgZoomRate,\r\n                        this.imgRef.current.height * this.imgZoomRate\r\n                        )\r\n                    this.ctx.drawImage(this.imgMaskRef.current,0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n    \r\n                // }\r\n            }\r\n            else if( Object.keys(this.toucheInfos).length === 2){\r\n                let prevX=[]\r\n                let prevY=[]\r\n                for(const key of Object.keys(this.toucheInfos)){\r\n                    prevX.push(this.toucheInfos[key].x)\r\n                    prevY.push(this.toucheInfos[key].y)\r\n                }\r\n                const prevDist = Math.sqrt( Math.pow(prevX[0]-prevX[1],2) + Math.pow(prevY[0]-prevY[1],2))\r\n                let exists=true\r\n                let ids=[]\r\n                for(let touch of touches){\r\n                    let id = touch.identifier\r\n                    if(!this.toucheInfos[id]){\r\n                        console.log(`not exists ${id}`)\r\n                        exists=false\r\n                    }\r\n                    ids.push(id)\r\n                }\r\n                if(!exists){\r\n                    console.dir(Object.keys(this.toucheInfos))\r\n                    console.dir(ids)\r\n                }\r\n\r\n                for(let touch of touches){\r\n                    let x = touch.clientX\r\n                    let y = touch.clientY\r\n                    x -= rect.left\r\n                    y -= rect.top\r\n                    let id = touch.identifier\r\n                    this.toucheInfos[id]={x:x,y:y}\r\n                }\r\n                let currX=[]\r\n                let currY=[]\r\n                for(const key of Object.keys(this.toucheInfos)){\r\n                    currX.push(this.toucheInfos[key].x)\r\n                    currY.push(this.toucheInfos[key].y)\r\n                }\r\n                const currDist = Math.sqrt( Math.pow(currX[0]-currX[1],2) + Math.pow(currY[0]-currY[1],2))\r\n                const zoomRate = currDist/prevDist\r\n\r\n                const midX = (currX[0] + currX[1])/2\r\n                const midY = (currY[0] + currY[1])/2\r\n\r\n                const midXInCanvas = midX * canvasWidth / styleWidth\r\n                const midYInCanvas = midY * canvasHeight / styleHeight\r\n\r\n                //const prevWidth = this.imgRef.current.width * this.imgZoomRate\r\n                //const prevHeight = this.imgRef.current.height * this.imgZoomRate\r\n\r\n                this.imgZoomRate *= zoomRate\r\n\r\n                this.imgPosX = midXInCanvas + (this.imgPosX - midXInCanvas) * zoomRate\r\n                this.imgPosY = midYInCanvas + (this.imgPosY - midYInCanvas) * zoomRate\r\n\r\n                //const currWidth = this.imgRef.current.width * this.imgZoomRate\r\n                //const currHeight = this.imgRef.current.height * this.imgZoomRate\r\n\r\n                //const dx = (prevWidth-currWidth)/2.0 \r\n                //const dy = (prevHeight-currHeight)/2.0 \r\n                //this.imgPosX += dx\r\n                //this.imgPosY += dy\r\n\r\n                this.ctx.drawImage(this.imgRef.current,\r\n                    0,\r\n                    0,\r\n                    this.imgRef.current.width,\r\n                    this.imgRef.current.height,\r\n                    this.imgPosX,\r\n                    this.imgPosY,\r\n                    this.imgRef.current.width * this.imgZoomRate,\r\n                    this.imgRef.current.height * this.imgZoomRate\r\n                    )\r\n                this.ctx.drawImage(this.imgMaskRef.current,0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n\r\n                console.log(`(rate:${zoomRate} imgPosX:${this.imgPosX} imgPosY:${this.imgPosY} )`)\r\n            }\r\n            else{\r\n                for(let touch of touches){\r\n                    let currX = touch.clientX\r\n                    let currY = touch.clientY\r\n                    currX -= rect.left\r\n                    currY -= rect.top\r\n                    let id = touch.identifier\r\n                    this.toucheInfos[id]={x:currX,y:currY}\r\n                }\r\n            }\r\n        }\r\n        this.toucheInfos = {}\r\n    }\r\n    addZoomAndMoveHandlers(){\r\n        this.toucheInfos = {}\r\n        this.canvasRef.current.addEventListener(\"touchstart\",this.onTouchStart,false)\r\n        this.canvasRef.current.addEventListener(\"touchend\",this.onTouchEnd,false)\r\n        this.canvasRef.current.addEventListener(\"touchcancel\",this.onTouchCancel,false)\r\n        this.canvasRef.current.addEventListener(\"touchmove\",this.onTouchMove,false)\r\n    }\r\n    removeZoomAndMoveHandlers(){\r\n        this.toucheInfos = {}\r\n        this.canvasRef.current.removeEventListener(\"touchstart\",this.onTouchStart)\r\n        this.canvasRef.current.removeEventListener(\"touchend\",this.onTouchEnd)\r\n        this.canvasRef.current.removeEventListener(\"touchcancel\",this.onTouchCancel)\r\n        this.canvasRef.current.removeEventListener(\"touchmove\",this.onTouchMove)\r\n    }\r\n    // zoomAndMove2(){\r\n\r\n    //     this.canvasRef.current.addEventListener(\"touchstart\",this.onTouchStart)\r\n    //     this.canvasRef.current.addEventListener(\"touchend\",this.onTouchEnd)\r\n    //     this.canvasRef.current.addEventListener(\"touchcancel\",this.onTouchCancel)\r\n    //     this.canvasRef.current.addEventListener(\"touchmove\",this.onTouchMove)\r\n    // }\r\n    // zoomAndMove3(){\r\n    //     this.toucheInfos = {}\r\n\r\n    //     this.canvasRef.current.addEventListener(\"touchstart\",(e)=>{\r\n    //         e.preventDefault()\r\n    //     })\r\n    //     this.canvasRef.current.addEventListener(\"touchend\",(e)=>{\r\n    //         e.preventDefault()\r\n    //         const touches = e.changedTouches\r\n    //         for(let touch of touches){\r\n    //             let id = touch.identifier\r\n    //             delete this.toucheInfos[id]\r\n    //         }\r\n    //     })\r\n    //     this.canvasRef.current.addEventListener(\"touchcancel\",(e)=>{\r\n    //         e.preventDefault()\r\n    //         const touches = e.changedTouches\r\n    //         for(let touch of touches){\r\n    //             let id = touch.identifier\r\n    //             delete this.toucheInfos[id]\r\n    //         }\r\n    //     })\r\n    //     this.canvasRef.current.addEventListener(\"touchmove\",(e)=>{\r\n    //         e.preventDefault()\r\n    //         const rect = this.canvasRef.current.getBoundingClientRect()    \r\n    //         //console.log(\"Camera.touchmove\")\r\n    //         const touches = e.changedTouches\r\n\r\n    //         if( touches.length === 1 && Object.keys(this.toucheInfos).length === 1 ){\r\n    //             let prevX=0\r\n    //             let prevY=0\r\n    //             let currX=0\r\n    //             let currY=0\r\n    //             for(const key of Object.keys(this.toucheInfos)){\r\n    //                 prevX = this.toucheInfos[key].x\r\n    //                 prevY = this.toucheInfos[key].y\r\n    //             }\r\n    //             this.toucheInfos={}\r\n    //             for(let touch of touches){\r\n    //                 currX = touch.clientX\r\n    //                 currY = touch.clientY\r\n    //                 currX -= rect.left\r\n    //                 currY -= rect.top\r\n    //                 let id = touch.identifier\r\n    //                 this.toucheInfos[id]={x:currX,y:currY}\r\n    //             }\r\n    //             const dx = currX-prevX\r\n    //             const dy = currY-prevY\r\n\r\n    //             console.log(`(dx:${dx},dy:${dy})`)\r\n\r\n    //             this.imgPosX += dx\r\n    //             this.imgPosY += dy\r\n\r\n    //             this.ctx.drawImage(this.imgRef.current,\r\n    //                 0,\r\n    //                 0,\r\n    //                 this.imgRef.current.width,\r\n    //                 this.imgRef.current.height,\r\n    //                 this.imgPosX,\r\n    //                 this.imgPosY,\r\n    //                 this.imgRef.current.width * this.imgZoomRate,\r\n    //                 this.imgRef.current.height * this.imgZoomRate\r\n    //                 )\r\n    //             this.ctx.drawImage(this.imgMaskRef.current,0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n    //         }\r\n    //         else if( touches.length === 2 && Object.keys(this.toucheInfos).length === 2 ){\r\n    //             let prevX=[]\r\n    //             let prevY=[]\r\n    //             for(const key of Object.keys(this.toucheInfos)){\r\n    //                 prevX.push(this.toucheInfos[key].x)\r\n    //                 prevY.push(this.toucheInfos[key].y)\r\n    //             }\r\n    //             const prevDist = Math.sqrt( Math.pow(prevX[0]-prevX[1],2) + Math.pow(prevY[0]-prevY[1],2))\r\n\r\n    //             this.toucheInfos={}\r\n    //             for(let touch of touches){\r\n    //                 let x = touch.clientX\r\n    //                 let y = touch.clientY\r\n    //                 x -= rect.left\r\n    //                 y -= rect.top\r\n    //                 let id = touch.identifier\r\n    //                 this.toucheInfos[id]={x:x,y:y}\r\n    //             }\r\n    //             let currX=[]\r\n    //             let currY=[]\r\n    //             for(const key of Object.keys(this.toucheInfos)){\r\n    //                 currX.push(this.toucheInfos[key].x)\r\n    //                 currY.push(this.toucheInfos[key].y)\r\n    //             }\r\n    //             const currDist = Math.sqrt( Math.pow(currX[0]-currX[1],2) + Math.pow(currY[0]-currY[1],2))\r\n    //             const zoomRate = currDist/prevDist\r\n    //             const prevWidth = this.imgRef.current.width * this.imgZoomRate\r\n    //             const prevHeight = this.imgRef.current.width * this.imgZoomRate\r\n\r\n    //             this.imgZoomRate *= zoomRate\r\n\r\n    //             const currWidth = this.imgRef.current.width * this.imgZoomRate\r\n    //             const currHeight = this.imgRef.current.width * this.imgZoomRate\r\n\r\n    //             const dx = (prevWidth/currWidth)/2.0\r\n    //             const dy = (prevHeight/currHeight)/2.0\r\n\r\n    //             this.imgPosX += dx\r\n    //             this.imgPosY += dy\r\n\r\n    //             this.ctx.drawImage(this.imgRef.current,\r\n    //                 0,\r\n    //                 0,\r\n    //                 this.imgRef.current.width,\r\n    //                 this.imgRef.current.height,\r\n    //                 this.imgPosX,\r\n    //                 this.imgPosY,\r\n    //                 this.imgRef.current.width * this.imgZoomRate,\r\n    //                 this.imgRef.current.height * this.imgZoomRate\r\n    //                 )\r\n    //             this.ctx.drawImage(this.imgMaskRef.current,0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n\r\n    //             console.log(`(rate:${zoomRate})`)\r\n    //         }\r\n    //         else{\r\n    //             this.toucheInfos={}\r\n    //             for(let touch of touches){\r\n    //                 let currX = touch.clientX\r\n    //                 let currY = touch.clientY\r\n    //                 currX -= rect.left\r\n    //                 currY -= rect.top\r\n    //                 let id = touch.identifier\r\n    //                 this.toucheInfos[id]={x:currX,y:currY}\r\n    //             }\r\n    //         }\r\n    //     })\r\n    // }\r\n    // zoomAndMove4(){\r\n    //     this.toucheInfos = {}\r\n\r\n    //     this.canvasRef.current.addEventListener(\"touchstart\",(e)=>{\r\n    //         e.preventDefault()\r\n    //         console.log(\"touchstart\")\r\n    //         const touches = e.changedTouches\r\n    //         for(let touch of touches){\r\n    //             let currX = touch.clientX\r\n    //             let currY = touch.clientY\r\n    //             let id = touch.identifier\r\n    //             this.toucheInfos[id]={x:currX,y:currY}\r\n    //         }\r\n    //     })\r\n    //     this.canvasRef.current.addEventListener(\"touchend\",(e)=>{\r\n    //         e.preventDefault()\r\n    //         console.log(\"touchend\")\r\n    //         const touches = e.changedTouches\r\n    //         console.dir(touches,{depth:null})\r\n    //         for(let touch of touches){\r\n    //             //let currX = touch.clientX\r\n    //             //let currY = touch.clientY\r\n    //             let id = touch.identifier\r\n    //             if(this.toucheInfos[id]){\r\n    //                 delete this.toucheInfos[id]\r\n    //             }\r\n    //             //this.toucheInfos[id]={x:currX,y:currY}\r\n    //         }\r\n    //     })\r\n    //     this.canvasRef.current.addEventListener(\"touchcancel\",(e)=>{\r\n    //         e.preventDefault()\r\n    //         console.log(\"touchcancel\")\r\n    //         const touches = e.changedTouches\r\n    //         console.dir(touches,{depth:null})\r\n    //         for(let touch of touches){\r\n    //             //let currX = touch.clientX\r\n    //             //let currY = touch.clientY\r\n    //             let id = touch.identifier\r\n    //             if(this.toucheInfos[id]){\r\n    //                 delete this.toucheInfos[id]\r\n    //             }\r\n    //             //this.toucheInfos[id]={x:currX,y:currY}\r\n    //         }\r\n    //     })\r\n    //     this.canvasRef.current.addEventListener(\"touchmove\",(e)=>{\r\n    //         console.log(\"touchmove\")\r\n    //         e.preventDefault()\r\n    //         const touches = e.changedTouches\r\n    //         if(touches.length !== Object.keys(this.toucheInfos).length){\r\n    //             console.dir(Object.keys(this.toucheInfos))\r\n    //             console.dir(touches)\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    componentDidMount(){\r\n        console.log(\"Camera.componentDidMount\")\r\n        this.canvasRef.current.width=1080\r\n        this.canvasRef.current.height=1080\r\n        this.ctx = this.canvasRef.current.getContext(\"2d\")\r\n\r\n        this.initZoomAndMove()\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"Camera.componentWillUnmount\")\r\n    }\r\n    onChange(e){\r\n        console.log(\"onChange\")\r\n        console.dir(e,{depth:null})\r\n        if(e.target.files.length){\r\n            const file = e.target.files[0]\r\n            const fr = new FileReader()\r\n            fr.addEventListener(\"load\",(e)=>{\r\n                const url = fr.result\r\n                //alert(url)\r\n                this.imgRef.current.src = url\r\n                // this.imgRef.current.width=300\r\n                // this.imgRef.current.height=300\r\n                // if(this.imgRef.current.classList.contains(\"camera--hidden\")){\r\n                //     this.imgRef.current.classList.remove(\"camera--hidden\")\r\n                // }\r\n                this.imgRef.current.onload=()=>{\r\n                    console.log(`canvasRef.current.width:${this.canvasRef.current.width}`)\r\n                    console.log(`canvasRef.current.height:${this.canvasRef.current.height}`)\r\n                    console.log(`imgRef.current.width:${this.imgRef.current.width}`)\r\n                    console.log(`imgRef.current.height:${this.imgRef.current.height}`)\r\n                    console.log(`imgMaskRef.current.width:${this.imgMaskRef.current.width}`)\r\n                    console.log(`imgMaskRef.current.height:${this.imgMaskRef.current.height}`)\r\n            \r\n                    const rateW = this.canvasRef.current.width / this.imgRef.current.width\r\n                    const rateH = this.canvasRef.current.height / this.imgRef.current.height\r\n                    const rate = rateW < rateH ? rateW : rateH\r\n    \r\n                    console.log(`rate:${rate}`)\r\n    \r\n                    const dstWidth = this.imgRef.current.width * rate\r\n                    const dstHeight = this.imgRef.current.height * rate\r\n                    console.log(`dstWidth:${dstWidth}`)\r\n                    console.log(`dstHeight:${dstHeight}`)\r\n    \r\n                    const dstPosX = this.canvasRef.current.width/2 - dstWidth/2\r\n                    const dstPosY = this.canvasRef.current.height/2 - dstHeight/2\r\n                    console.log(`dstPosX:${dstPosX}`)\r\n                    console.log(`dstPosY:${dstPosY}`)\r\n    \r\n                    this.ctx.drawImage(this.imgRef.current,\r\n                        0,\r\n                        0,\r\n                        this.imgRef.current.width,\r\n                        this.imgRef.current.height,\r\n                        dstPosX,\r\n                        dstPosY,\r\n                        dstWidth,\r\n                        dstHeight\r\n                        )\r\n                    this.ctx.drawImage(this.imgMaskRef.current,0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n\r\n                    this.imgPosX = dstPosX\r\n                    this.imgPosY = dstPosY\r\n                    this.imgZoomRate = rate\r\n                    // this.ctx.beginPath()\r\n                    // this.ctx.arc(540,540,100,0,2*Math.PI,true)\r\n                    // this.ctx.fillStyle=\"rgba(255,0,0,255)\"\r\n                    // this.ctx.fill()        \r\n\r\n                    this.imgRef.current.onload = ()=>{}\r\n                    this.setState({imageLoaded:true})\r\n\r\n                    this.removeZoomAndMoveHandlers()\r\n                    this.addZoomAndMoveHandlers()\r\n                }\r\n                \r\n            })\r\n            fr.readAsDataURL(file)\r\n        }\r\n    }\r\n    onClickChoosePhoto(e){\r\n        this.inputFile.current.click()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Camera</h1>\r\n                <div>\r\n                    <input type=\"file\" className=\"camera--hidden\" ref={this.inputFile} onChange={this.onChange} accept=\"image/png , image/jpeg\"/>\r\n                    <button onClick={this.onClickChoosePhoto}>choose photo</button>\r\n                </div>\r\n                <div>\r\n                    <img className=\"camera--img camera--hidden\" alt=\"img\" ref={this.imgRef} />\r\n                </div>\r\n                <div>\r\n                    <canvas className=\"camera--canvas\" ref={this.canvasRef}></canvas>\r\n                    <img src={FacePositionMask2} alt=\"mask\" ref={this.imgMaskRef} className=\"camera--hidden\"/> \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","import React,{ Component } from \"react\"\r\nimport './Camera2.css'\r\nimport FacePositionMask2 from \"./FacePositionMask2.svg\"\r\n\r\nexport default class Camera2 extends Component {\r\n    constructor(props){\r\n        console.log(\"Camera2.constructor\")\r\n        super(props);\r\n        this.state = {\r\n             takeButtonEnable:false,\r\n             retakeButtonEnable:false,\r\n             startCameraButtonEnable:false,\r\n        }\r\n        this.videoRef = React.createRef()\r\n        this.canvasRef = React.createRef()\r\n        this.imgMaskRef = React.createRef()\r\n        this.onClickTake = this.onClickTake.bind(this)\r\n        this.onClickRetake = this.onClickRetake.bind(this)\r\n        this.onClickStartCamera = this.onClickStartCamera.bind(this)\r\n        this.ctx=null\r\n    }\r\n    startCamera(){\r\n        const mediaDevices = navigator.mediaDevices || ((navigator.mozGetUserMedia || navigator.webkitGetUserMedia) ? {\r\n            getUserMedia: function(c) {\r\n              return new Promise(function(y, n) {\r\n                (navigator.mozGetUserMedia ||\r\n                 navigator.webkitGetUserMedia).call(navigator, c, y, n);\r\n              });\r\n            }\r\n         } : null);\r\n         \r\n        if(mediaDevices){\r\n            mediaDevices.getUserMedia({\r\n                audio:false,\r\n                //video:true\r\n                video:{\r\n                    width:1080,\r\n                    height:1080,\r\n                    facingMode: \"user\"\r\n                }\r\n            }).then((stream)=>{\r\n                console.log(\"then\")\r\n                console.dir(stream,{depth:null})\r\n                this.videoRef.current.onerror = (e)=>{\r\n                    alert(e)\r\n                    this.videoRef.current.onerror=()=>{}\r\n                }\r\n                this.videoRef.current.srcObject = stream\r\n                //this.videoRef.current.play()\r\n                this.setState({\r\n                    takeButtonEnable:true,\r\n                    retakeButtonEnable:false,\r\n                    startCameraButtonEnable:false\r\n                })\r\n            }).catch((error)=>{\r\n                console.log(error)\r\n                console.dir(error)\r\n                this.setState({\r\n                    takeButtonEnable:false,\r\n                    retakeButtonEnable:false,\r\n                    startCameraButtonEnable:true\r\n                })\r\n                alert(error)\r\n            })\r\n        }\r\n        else{\r\n            console.log(\"getUserMedia() not supported.\");\r\n\r\n            alert(\"getUserMedia() not supported.\")\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"Camera2.componentDidMount\")\r\n\r\n        this.canvasRef.current.width=1080\r\n        this.canvasRef.current.height=1080\r\n        this.ctx = this.canvasRef.current.getContext(\"2d\")\r\n\r\n        this.videoRef.current.addEventListener(\"loadedmetadata\",(e)=>{\r\n            console.log(\"loadedmetadata\")\r\n            //this.videoRef.current.play()\r\n        })\r\n        this.videoRef.current.addEventListener(\"loadeddata\",(e)=>{\r\n            console.log(\"loadeddata\")\r\n            //this.videoRef.current.play()\r\n        })\r\n        this.startCamera()\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"Camera2.componentWillUnmount\")\r\n        try{\r\n            this.videoRef.current.pause()\r\n        }\r\n        catch(error){\r\n\r\n        }\r\n    }\r\n    onClickTake(e){\r\n        this.videoRef.current.pause()\r\n        console.log(`this.imgMaskRef.current.width:${this.imgMaskRef.current.width}`)\r\n        console.log(`this.imgMaskRef.current.height:${this.imgMaskRef.current.height}`)\r\n        this.ctx.drawImage(this.videoRef.current,0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n        this.ctx.drawImage(this.imgMaskRef.current,0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n        if(!this.videoRef.current.classList.contains(\"camera2--hidden\")){\r\n            this.videoRef.current.classList.add(\"camera2--hidden\")\r\n        }\r\n        if(this.canvasRef.current.classList.contains(\"camera2--hidden\")){\r\n            this.canvasRef.current.classList.remove(\"camera2--hidden\")\r\n        }\r\n        this.setState({\r\n            takeButtonEnable:false,\r\n            retakeButtonEnable:true,\r\n        })\r\n    }\r\n    onClickRetake(e){\r\n        if(this.videoRef.current.classList.contains(\"camera2--hidden\")){\r\n            this.videoRef.current.classList.remove(\"camera2--hidden\")\r\n        }\r\n        if(!this.canvasRef.current.classList.contains(\"camera2--hidden\")){\r\n            this.canvasRef.current.classList.add(\"camera2--hidden\")\r\n        }\r\n        this.videoRef.current.play()\r\n        this.setState({\r\n            takeButtonEnable:true,\r\n            retakeButtonEnable:false,\r\n        })\r\n    }\r\n    onClickStartCamera(e){\r\n        this.startCamera()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Camera2</h1>\r\n                <div>\r\n                    <video className=\"camera2--video\" ref={this.videoRef} autoPlay={true} playsInline={true} muted={true}></video>\r\n                </div>\r\n                <div>\r\n                    <canvas className=\"camera2--canvas camera2--hidden\" ref={this.canvasRef}></canvas>\r\n                    <img src={FacePositionMask2} alt=\"mask\" ref={this.imgMaskRef} className=\"camera2--hidden\"/> \r\n                </div>\r\n                <div>\r\n                    <button onClick={this.onClickTake} disabled={!this.state.takeButtonEnable}>シャッター</button>\r\n                    <button onClick={this.onClickRetake} disabled={!this.state.retakeButtonEnable}>撮り直し</button>\r\n                    <button onClick={this.onClickStartCamera} disabled={!this.state.startCameraButtonEnable}>カメラリスタート</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","import React,{ Component } from \"react\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class NotFound extends Component {\r\n    constructor(props){\r\n        console.log(\"NotFound.constructor\")\r\n        super(props);\r\n        // this.state = {\r\n        //      state:0\r\n        // }\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"NotFound.componentDidMount\")\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"NotFound.componentWillUnmount\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>NotFound</h1>\r\n                <p>\r\n                    <Link to=\"/\">Go to the home page</Link>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","import React ,{ Component } from \"react\"\n//import logo from './logo.svg';\nimport './App.css';\n\nimport { Route, Routes, Link, Outlet, useNavigate } from 'react-router-dom'\n\nimport Home from './Home'\nimport Page1 from './Page1'\nimport Me from './Me'\nimport Others from './Others'\nimport About from './About'\nimport Contact from './Contact'\nimport Camera from './Camera'\nimport Camera2 from './Camera2'\nimport NotFound from './NotFound'\n\nfunction Layout() {\n  const navigate = useNavigate()\n  const handleClick = (e)=>{\n    if(e.target.name===\"home\"){\n      navigate(\"/\")\n    }\n    else if(e.target.name===\"page1\"){\n      navigate(\"/page1\")\n    }\n    else if(e.target.name===\"about\"){\n      navigate(\"/about\")\n    }\n    else if(e.target.name===\"contact\"){\n      navigate(\"/contact\")\n    }\n    else if(e.target.name===\"camera\"){\n      navigate(\"/camera\")\n    }\n    else if(e.target.name===\"camera2\"){\n      navigate(\"/camera2\")\n    }\n  }\n  return (\n    <div>\n      {/* A \"layout route\" is a good place to put markup you want to\n          share across all the pages on your site, like navigation. */}\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/page1\">DatePicker</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li>\n            <Link to=\"/contact\">Contact</Link>\n          </li>\n          <li>\n            <Link to=\"/camera\">Camera</Link>\n          </li>\n          <li>\n            <Link to=\"/camera2\">Camera2</Link>\n          </li>\n          <li>\n            <Link to=\"/nothing-here\">Nothing Here</Link>\n          </li>\n        </ul>\n        <div>\n        <button onClick={handleClick} name=\"home\">Home</button>\n        <button onClick={handleClick} name=\"page1\">DatePicker</button>\n        <button onClick={handleClick} name=\"about\">About</button>\n        <button onClick={handleClick} name=\"contact\">Contact</button>\n        <button onClick={handleClick} name=\"camera\">Camera</button>\n        <button onClick={handleClick} name=\"camera2\">Camera2</button>\n        </div>\n      </nav>\n\n      <hr />\n\n      {/* An <Outlet> renders whatever child route is currently active,\n          so you can think about this <Outlet> as a placeholder for\n          the child routes we defined above. */}\n      <Outlet />\n    </div>\n  );\n}\n\nclass App extends Component{\n  constructor(props){\n    console.log(\"App.constructor\")\n    super(props);\n    // this.state = {\n    //      state:0\n    // }\n    //this.handleClick = this.handleClick.bind(this)\n  }\n  componentDidMount(){\n      console.log(\"App.componentDidMount\")  \n  }\n  componentWillUnmount(){\n    console.log(\"App.componentWillUnmount\")\n  }\n  // handleClick(e){\n  //   if(e.target.name===\"home\"){\n  //     this.props.navigate(\"/\")\n  //   }\n  //   else if(e.target.name===\"page1\"){\n  //     this.props.navigate(\"/page1\")\n  //   }\n  //   else if(e.target.name===\"about\"){\n  //     this.props.navigate(\"/about\")\n  //   }\n  //   else if(e.target.name===\"contact\"){\n  //     this.props.navigate(\"/contact\")\n  //   }\n  // }\n  render() {\n    return (\n      <div>\n        <h1>Hello React Pwa v0.0005</h1>\n        {\n          /*\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/page1\">Page1</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li>\n            <Link to=\"/contact\">Contact</Link>\n          </li>\n        </ul>\n          */\n        }\n        <div>\n          {/*\n        <button onClick={this.handleClick} name=\"home\">Home</button>\n        <button onClick={this.handleClick} name=\"page1\">Page1</button>\n        <button onClick={this.handleClick} name=\"about\">About</button>\n        <button onClick={this.handleClick} name=\"contact\">Contact</button>\n           */\n          }\n        </div>\n        <Routes>\n          <Route exact path=\"/\"  element={<Layout/>}>\n            <Route index element={<Home/>}/>\n            <Route path=\"page1\" element={<Page1 />} />\n            <Route path=\"page1/:id\" element={<Others/>}/>\n            <Route path=\"page1/me\" element={<Me/>}/>\n            <Route path=\"about\" element={<About />} />\n            <Route path=\"contact\" element={<Contact />} />\n            <Route path=\"camera\" element={<Camera />} />\n            <Route path=\"camera2\" element={<Camera2 />} />\n             {/* Using path=\"*\"\" means \"match anything\", so this route\n                acts like a catch-all for URLs that we don't have explicit\n                routes for. */}\n            <Route path=\"*\" element={<NotFound />} />\n          </Route>\n        </Routes> \n      </div>    \n    )\n  }\n}\n\n// function App() {\n//   const navigate = useNavigate()\n//   const handleClick = (e) => {\n//     console.log(e)\n//     if(e.target.name===\"home\"){\n//       navigate(\"/\")\n//     }\n//     else if(e.target.name===\"page1\"){\n//       navigate(\"/page1\")\n//     }\n//     else if(e.target.name===\"about\"){\n//       navigate(\"/about\")\n//     }\n//     else if(e.target.name===\"contact\"){\n//       navigate(\"/contact\")\n//     }\n//   }\n//   return(\n//     <div>\n//     <h1>Hello React Pwa</h1>\n//     <ul>\n//       <li>\n//         <Link to=\"/\">Home</Link>\n//       </li>\n//       <li>\n//         <Link to=\"/page1\">Page1</Link>\n//       </li>\n//       <li>\n//         <Link to=\"/about\">About</Link>\n//       </li>\n//       <li>\n//         <Link to=\"/contact\">Contact</Link>\n//       </li>\n//     </ul>\n//     <div>\n//     <button onClick={handleClick} name=\"home\">Home</button>\n//     <button onClick={handleClick} name=\"page1\">Page1</button>\n//     <button onClick={handleClick} name=\"about\">About</button>\n//     <button onClick={handleClick} name=\"contact\">Contact</button>\n//     </div>\n//     <Routes>\n//       <Route exact path=\"/\"  element={<Home/>}/>\n//       <Route path=\"/page1\" element={<Page1/>}/>\n//       <Route path=\"/about\" element={<About/>}/>\n//       <Route path=\"/contact\" element={<Contact/>}/>\n//       <Route element={<NotFound/>}/>\n//     </Routes>\n//     </div>\n//   )\n// }\n\n\n//\n//もとのApp\n//\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, useNavigate } from 'react-router-dom'\n\nfunction AppWithNavigate(){\n  const navigate = useNavigate()\n  return (\n    <App navigate = {navigate}/>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"react-pwa\">\n      <AppWithNavigate/>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n//serviceWorkerRegistration.unregister();\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}