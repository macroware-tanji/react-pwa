{"version":3,"sources":["Home.js","Page1.js","Me.js","Others.js","Participants/Search.svg","Participants/ArrowUp.svg","Participants/ArrowDown.svg","Participants/TagX.svg","Participants/TagList.js","Participants/CheckOn.svg","Participants/CheckOff.svg","Participants/CheckBox.js","Participants/sleep.js","Participants/Participants.js","About.js","Contact.js","FacePositionMask2.svg","Camera.js","Camera2.js","NotFound.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Home","props","console","log","Component","registerLocale","ja","Page1","state","startDate","Date","handleChange","date","setState","imgCheckOnRef","React","createRef","imgCheckOffRef","imgTagXRef","imgSearchRef","onChangeCheckBox","bind","checked","param","ExampleCustomInput","forwardRef","ref","value","onClick","type","readOnly","className","selected","this","onChange","showTimeSelect","locale","dateFormat","customInput","renderCustomHeader","decreaseMonth","changeYear","changeMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","style","margin","display","justifyContent","disabled","border","outline","backgroundColor","cursor","getFullYear","getMonth","Me","OthersClass","id","params","is","Others","useParams","TagList","tags","update","onClickX","map","tag","name","push","removed","newTags","reduce","prev","curr","onRemove","index","length","filter","i","parseInt","find","element","findIndex","item","compare","e","target","removeByIndex","src","TagX","alt","CheckBox","onClickOn","onClickOff","txt","newValue","CheckOn","CheckOff","sleep","waitTime","options","a","Promise","resolve","setTimeout","sts","Participants","expanded","checkAll","checkeds","onClickArrowUp","onClickArrowDown","onClickSearch","onChangeCheckBoxAll","tagList","checkBoxRef0","checkBoxRefs","searchResult","findInTags","item2","company","current","get","add","tagsStr","sessionStorage","getItem","JSON","parse","clear","setItem","stringify","forEach","searchItemIndex","findIndexEx","then","res","SearchResult","searchIndex","seacrhItem","ArrowUp","ArrowDown","placeholder","Search","About","participantsRef","Contact","href","Camera","imageLoaded","x1","y1","x2","y2","inputFile","imgRef","canvasRef","imgMaskRef","ctx","onClickChoosePhoto","imgPosX","imgPosY","imgZoomRate","onTouchStart","preventDefault","rect","getBoundingClientRect","touches","changedTouches","touch","x","clientX","y","clientY","left","top","identifier","toucheInfos","onTouchEnd","onTouchCancel","onTouchMove","canvasWidth","width","canvasHeight","height","styleWidth","styleHeight","Object","keys","prevX","prevY","currX","currY","key","dx","dy","drawImage","prevDist","Math","sqrt","pow","exists","ids","dir","zoomRate","midXInCanvas","midYInCanvas","addEventListener","removeEventListener","getContext","initZoomAndMove","depth","files","file","fr","FileReader","url","result","onload","rateW","rateH","rate","dstWidth","dstHeight","dstPosX","dstPosY","removeZoomAndMoveHandlers","addZoomAndMoveHandlers","readAsDataURL","click","accept","FacePositionMask2","Camera2","takeButtonEnable","retakeButtonEnable","startCameraButtonEnable","videoRef","onClickTake","onClickRetake","onClickStartCamera","mediaDevices","navigator","mozGetUserMedia","webkitGetUserMedia","getUserMedia","c","n","call","audio","video","facingMode","stream","onerror","alert","srcObject","catch","error","startCamera","pause","classList","contains","remove","play","autoPlay","playsInline","muted","NotFound","to","Layout","navigate","useNavigate","handleClick","App","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppWithNavigate","ReactDOM","render","StrictMode","basename","document","getElementById","URL","process","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.49f742e4.chunk.js","sourcesContent":["import React,{ Component } from \"react\"\r\n\r\nexport default class Home extends Component {\r\n    constructor(props){\r\n        console.log(\"Home.constructor\")\r\n        super(props);\r\n        // this.state = {\r\n        //      state:0\r\n        // }\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"Home.componentDidMount\")\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"Home.componentWillUnmount\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Home</h1>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","import React,{ Component } from \"react\"\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"./Page1.css\"\r\nimport { registerLocale, setDefaultLocale } from  \"react-datepicker\";\r\nimport ja from 'date-fns/locale/ja';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n//import CheckOn from \"./CheckOn.svg\"\r\n//import CheckOff from \"./CheckOff.svg\"\r\nimport \"./CheckOnOff.css\"\r\n//import TagX from \"./TagX.svg\"\r\n//import Search from \"./Search.svg\"\r\n//import ArrowUp from \"./ArrowUp.svg\"\r\n//import ArrowDown from \"./ArrowDown.svg\"\r\n//import Background from \"./Background.svg\"\r\n//import SplashBK from \"./SplashBK.svg\"\r\n//import CheckBox from \"./CheckBox\"\r\n//import TagList from \"./TagList\"\r\n\r\nimport \"./date-time.css\"\r\n\r\nregisterLocale('ja', ja)\r\n\r\nexport default class Page1 extends Component {\r\n    constructor(props){\r\n        console.log(\"Page1.constructor\")\r\n        super(props);\r\n        this.state = {\r\n            startDate: new Date()\r\n        }\r\n        this.handleChange = (date) => {\r\n            this.setState({\r\n              startDate: date\r\n            });\r\n            console.log(`date:${date}`)\r\n          }\r\n        this.imgCheckOnRef = React.createRef() \r\n        this.imgCheckOffRef = React.createRef() \r\n        this.imgTagXRef = React.createRef() \r\n        this.imgSearchRef = React.createRef() \r\n\r\n        this.onChangeCheckBox = this.onChangeCheckBox.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"Page1.componentDidMount\")\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"Page1.componentWillUnmount\")\r\n    }\r\n    onChangeCheckBox(checked, param){\r\n        console.log(checked,param)\r\n    }\r\n    render() {\r\n        // const ExampleCustomInput = React.forwardRef(({ value, onClick }, ref) => (\r\n        //     <button className=\"date-time--input\" onClick={onClick} ref={ref}>\r\n        //     {value}\r\n        //   </button>\r\n        //   ));\r\n          const ExampleCustomInput = React.forwardRef(({ value, onClick }, ref) => (\r\n            <input type=\"text\" readOnly={true} className=\"date-time--input\" onClick={onClick} ref={ref} value={value}/>\r\n          ))\r\n        return (\r\n            <div className=\"page1\">\r\n                <h1>DatePicker</h1>\r\n                <DatePicker\r\n                    selected={this.state.startDate}\r\n                    onChange={this.handleChange}\r\n                    showTimeSelect\r\n                    locale=\"ja\"\r\n                    dateFormat=\"yyyy/MM/dd(E)HH:mm\"\r\n                    className=\"date-time--input\"\r\n                    customInput={<ExampleCustomInput />}\r\n                />\r\n                <DatePicker\r\n                    selected={this.state.startDate}\r\n                    onChange={this.handleChange}\r\n                    showTimeSelect\r\n                    locale=\"ja\"\r\n                    dateFormat=\"yyyy/MM/dd(E)HH:mm\"\r\n                    className=\"date-time--input\"\r\n                />\r\n                <DatePicker\r\n                    renderCustomHeader={({\r\n                        date,\r\n                        changeYear,\r\n                        changeMonth,\r\n                        decreaseMonth,\r\n                        increaseMonth,\r\n                        prevMonthButtonDisabled,\r\n                        nextMonthButtonDisabled,\r\n                    }) => (\r\n                        <div\r\n                            style={{\r\n                                margin: 10,\r\n                                display: \"flex\",\r\n                                justifyContent: \"space-around\",\r\n                            }}\r\n                            >\r\n                            <button onClick={decreaseMonth} disabled={prevMonthButtonDisabled} style={{border: \"none\",outline: \"none\",backgroundColor: \"transparent\", cursor:\"pointer\"}} >\r\n                                <div>{\"<\"}</div>\r\n                            </button>\r\n                            <div>{date.getFullYear() + \" 年 \" + (date.getMonth() + 1) + \" 月\"}</div>\r\n                            <button onClick={increaseMonth} disabled={nextMonthButtonDisabled} style={{border: \"none\",outline: \"none\",backgroundColor: \"transparent\", cursor:\"pointer\"}}>\r\n                                {\">\"}\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                    selected={this.state.startDate}\r\n                    onChange={this.handleChange}\r\n                    showTimeSelect\r\n                    locale=\"ja\"\r\n                    dateFormat=\"yyyy/MM/dd(E)HH:mm\"\r\n                    className=\"date-time--input\"\r\n                />\r\n                <pre>\r\n{`\r\nReact Datepicker\r\n\r\nThe package can be installed via NPM:\r\n\r\nnpm install react-datepicker --save\r\n\r\nOr by using Yarn:\r\n\r\nyarn add react-datepicker\r\n`}\r\n                </pre>\r\n                {\r\n                    /*\r\n                <TagList/>\r\n                <CheckBox txt={\"チェックボックス\"} param={{a:1, b:2, c:3}} onChange={this.onChangeCheckBox}/>\r\n                <img src={CheckOff} alt=\"CheckOff\" ref={this.imgCheckOffRef} /> \r\n                <img src={CheckOn} alt=\"CheckOn\" ref={this.imgCheckOnRef} /> \r\n                <img src={TagX} alt=\"TagX\" ref={this.imgTagXRef} />  \r\n                <img src={Search} alt=\"TagX\" ref={this.imgSearchRef} />\r\n                <img src={ArrowUp} alt=\"ArrowUp\" />\r\n                <img src={ArrowDown} alt=\"ArrowDown\" />\r\n                    */\r\n                }\r\n                {\r\n                    /*\r\n                <div>\r\n                <img src={Background} alt=\"Background\" />\r\n                <img src={SplashBK} alt=\"SplashBK\" />\r\n                </div> \r\n                    */\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","import React,{ Component } from \"react\"\r\n\r\nexport default class Me extends Component {\r\n    constructor(props){\r\n        console.log(\"Me.constructor\")\r\n        super(props);\r\n        // this.state = {\r\n        //      state:0\r\n        // }\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"Me.componentDidMount\")\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"Me.componentWillUnmount\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Me</h1>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","import React,{ Component } from \"react\"\r\nimport { useParams  } from 'react-router-dom'\r\n//import { withRouter } from 'react-router';\r\n\r\nclass OthersClass extends Component {\r\n    constructor(props){\r\n        console.log(\"Others.constructor\")\r\n        super(props);\r\n        // this.state = {\r\n        //      state:0\r\n        // }\r\n        //console.log(this.props.params)\r\n        const {id} = this.props.params\r\n        this.is=id\r\n        console.log(id)\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"Others.componentDidMount\")\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"Others.componentWillUnmount\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Others {this.is}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default function Others(){\r\n    const params = useParams()\r\n    return (\r\n        <OthersClass params={params}/>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Search.18a4a72f.svg\";","export default __webpack_public_path__ + \"static/media/ArrowUp.02159087.svg\";","export default __webpack_public_path__ + \"static/media/ArrowDown.e657d664.svg\";","export default __webpack_public_path__ + \"static/media/TagX.b5bc0701.svg\";","import React,{ Component } from \"react\"\nimport \"./TagList.css\"\nimport TagX from \"./TagX.svg\"\n\n\nexport default class TagList extends Component {\n    constructor(props){\n        console.log(\"TagList.constructor\")\n        super(props);\n        this.state = {\n            tags:[],\n            update: new Date()\n        }\n        this.tags=[]\n        //this.tags = [\"aaa\",\"bbb\",\"ccc\"]\n        this.onClickX = this.onClickX.bind(this)\n    }\n    componentDidMount(){\n        console.log(\"TagList.componentDidMount\")\n    }\n    componentWillUnmount(){\n        console.log(\"TagList.componentWillUnmount\")\n    }\n    get(){\n        let newTags = this.tags.map( tag => ({...tag}))\n        return newTags\n    }\n    add(name,param){\n        this.tags.push({name:name,param:param})\n        console.log(this.tags)\n        this.setState({tags:this.tags})\n    }\n    clear(){\n        this.tags=[]\n        this.setState({tags:this.tags})\n    }\n    remove(name){\n        let removed = null\n        // let newTags = this.state.tags.filter( \n        //     (tag,index) => {\n        //         if(tag.name !== name){\n        //             return true\n        //         }\n        //         else{\n        //             removed = tag\n        //         } \n        //         return tag.name !== name \n        //     })\n        let newTags = []\n        this.tags.reduce( \n            (prev,curr) => {\n                if(curr.name !== name){\n                    prev.push(curr)\n                }\n                else{\n                    removed = curr\n                }\n                return prev \n             },newTags)\n\n        if(removed){\n            this.tags = newTags\n            console.log(removed)\n            console.log(newTags)\n            this.setState({tags:this.tags})\n            if(this.props.onRemove){\n                this.props.onRemove(removed.name, removed.param)\n            }\n        }    \n    }\n    removeByIndex(index){\n        if(0<= index && index < this.tags.length){\n            let removed = this.tags[index]\n\n            let newTags = this.tags.filter( (tag,i) => {\n                console.log(tag,i) \n                return i !== parseInt(index) })\n            console.log(newTags)\n            this.tags = newTags\n            if(removed){\n                console.log(removed)\n                console.log(newTags)\n                this.setState({tags:this.tags})\n                if(this.props.onRemove){\n                    this.props.onRemove(removed.name, removed.param)\n                }\n            }    \n        }\n    }\n    find(name){\n        return this.tags.find(element => element.name === name)\n    }\n    findIndex(name){\n        return this.tags.findIndex(element => element.name === name)\n    }\n    findEx(item, compare){\n        return this.tags.find(element => compare(element,item))\n    }\n    findIndexEx(item, compare){\n        return this.tags.findIndex(element => compare(element,item))\n    }\n    onClickX(e){\n        console.log(e.target.name)\n        this.removeByIndex(parseInt(e.target.name))\n    }\n    render() {\n        return (\n            <div className=\"taglist\">\n                {\n                    this.tags.map((tag,index)=>\n                        (<div className=\"taglist--tag\" key={index}>\n                            <span className=\"taglist--tag__label\" >{tag.name}</span>\n                            <img className=\"taglist--tag__xmark\" src={TagX} alt=\"TagX\" name={index} onClick={this.onClickX}/> \n                        </div>))\n                }\n            </div>\n        )\n    }\n}    \n","export default __webpack_public_path__ + \"static/media/CheckOn.6297bd68.svg\";","export default __webpack_public_path__ + \"static/media/CheckOff.06ca897d.svg\";","import React,{ Component } from \"react\"\nimport CheckOn from \"./CheckOn.svg\"\nimport CheckOff from \"./CheckOff.svg\"\nimport \"./CheckBox.css\"\n\nexport default class CheckBox extends Component {\n    constructor(props){\n        super(props);\n        console.log(\"CheckBox.constructor\", props)\n        this.state = {\n            checked:this.props.checked ? this.props.checked:false\n        }\n        this.onChange=this.onChange.bind(this)\n        this.onClickOn=this.onClickOn.bind(this)\n        this.onClickOff=this.onClickOff.bind(this)\n        console.log(this.props.txt)\n    }\n    componentDidMount(){\n        console.log(\"CheckBox.componentDidMount\")\n    }\n    componentWillUnmount(){\n        console.log(\"CheckBox.componentWillUnmount\")\n    }\n    onChange(e){\n        this.setState({checked:e.target.checked})\n        console.log(\"onChange\")\n    }\n    onClickOn(e){\n        this.setState({checked:false})\n        console.log(\"onClickOn\")\n        if(this.props.onChange){\n            this.props.onChange(false, this.props.txt, this.props.param)\n        }\n    }\n    onClickOff(e){\n        this.setState({checked:true})\n        console.log(\"onClickOff\")\n        if(this.props.onChange){\n            this.props.onChange(true, this.props.txt,this.props.param)\n        }\n    }\n    get checked(){\n        return this.state.checked\n    }\n    set checked(newValue){\n        return this.setState({checked:newValue})\n    }\n    render() {\n        console.log(\"CheckBox.render\")\n        return (\n        <span className=\"checkbox\">\n            {\n                /*\n            <input type=\"checkbox\" name=\"checkbox\" onChange={this.onChange}>\n            </input>\n                */\n            }\n            {   this.state.checked ? \n                (\n                    <img className=\"checkbox--checkmark\" src={CheckOn} alt=\"CheckOn\" ref={this.imgCheckOnRef} onClick={this.onClickOn}/> \n                ) : \n                (\n                    <img className=\"checkbox--checkmark\" src={CheckOff} alt=\"CheckOff\" ref={this.imgCheckOffRef} onClick={this.onClickOff}/> \n                )\n            }\n            <span className=\"checkbox--label\">{this.props.txt}</span>    \n        </span>\n)\n    }\n}    \n","const sleep = async (waitTime,options)=>{\n    const param = options\n    return new Promise(resolve=>{\n        setTimeout(()=>{\n            resolve({sts:\"timeOut\", param: param})\n        },waitTime)\n    })\n}\nexport default sleep","import React,{ Component } from \"react\"\nimport \"./Participants.css\"\nimport Search from \"./Search.svg\"\nimport ArrowUp from \"./ArrowUp.svg\"\nimport ArrowDown from \"./ArrowDown.svg\"\nimport TagList from \"./TagList\"\nimport CheckBox from \"./CheckBox\"\nimport SearchResult from './list.json';\nimport sleep from \"./sleep\"\n\nexport default class Participants extends Component {\n    constructor(props){\n        console.log(\"Participants.constructor\")\n        super(props);\n        // this.state = {\n        //      state:0\n        // }\n        this.state = {\n            state:0,\n            expanded:false,\n            checkAll:false,\n            checkeds:[],\n            update: new Date()\n        }\n        this.onClickArrowUp = this.onClickArrowUp.bind(this)\n        this.onClickArrowDown = this.onClickArrowDown.bind(this)\n        this.onClickSearch = this.onClickSearch.bind(this)\n        this.onChangeCheckBox = this.onChangeCheckBox.bind(this)\n        this.onChangeCheckBoxAll = this.onChangeCheckBoxAll.bind(this)\n        \n        this.onRemove = this.onRemove.bind(this)\n        this.tagList = React.createRef()\n        this.checkBoxRef0 = React.createRef()\n        this.checkBoxRefs = []\n\n        this.searchResult = [];//SearchResult\n        // let checkeds=[]\n        // this.searchResult.forEach((item,index)=>{\n        //     checkeds.push(false)\n        // })\n        // this.state.checkeds = checkeds\n\n        this.findInTags = (tag,item2)=>{\n            console.log(tag,item2)\n            return tag.param.name === item2.name && tag.param.company === item2.company\n        }\n    }\n\n    get(){\n        return this.tagList.current.get()\n    }\n\n    add(name,param){\n        this.tagList.current.add(name,param)\n    }\n\n    componentDidMount(){\n        console.log(\"Participants.componentDidMount\")\n        const tagsStr = sessionStorage.getItem(\"participants\")\n        const tags = JSON.parse(tagsStr)\n        if(tags){\n            this.tagList.current.clear()\n           for(const tag of tags){\n            this.tagList.current.add(tag.name,tag.param)\n           }\n        }\n    }\n    componentWillUnmount(){\n        console.log(\"Participants.componentWillUnmount\")\n    }\n    componentDidUpdate(){\n        console.log(\"Participants.componentDidUpdate\")\n        const tags = this.tagList.current.get()\n        console.log(tags)\n        sessionStorage.setItem(\"participants\",JSON.stringify(tags))\n    }\n    onClickArrowUp(e){\n        this.setState({expanded:false})\n    }\n    onClickArrowDown(e){\n        console.log(\"About.onClickArrowDown\")\n        let checkeds = []\n        this.searchResult.forEach((item,searchItemIndex)=>{\n            const index = this.tagList.current.findIndexEx(item,this.findInTags)\n            checkeds.push( index >= 0 ? true:false)\n        })\n        this.setState({expanded:true, checkeds:checkeds})\n    }\n    onClickSearch(e){\n        console.log(\"onClickSearch\",e)\n        sleep(200,{}).then((res)=>{\n            this.searchResult = SearchResult\n            let checkeds=[]\n            this.checkBoxRefs=[]\n            this.searchResult.forEach((item,searchIndex)=>{\n                const index = this.tagList.current.findIndexEx(item,this.findInTags)\n                checkeds.push( index >= 0 ? true:false)\n                this.checkBoxRefs.push( React.createRef() )\n            })\n            this.setState({checkeds:checkeds})\n        })\n    }\n    onChangeCheckBoxAll(checked, name, param){\n        if(checked){\n            let checkeds = [...this.state.checkeds]\n            this.searchResult.forEach((seacrhItem,searchIndex)=>{\n                const index = this.tagList.current.findIndexEx(seacrhItem,this.findInTags)\n                if( index < 0 ){\n                    this.tagList.current.add(seacrhItem.name,seacrhItem)\n                }\n                checkeds[searchIndex] = true\n                this.checkBoxRefs[searchIndex].current.checked = true\n            })\n            this.setState({checkeds:checkeds})\n        }\n        else{\n            let checkeds = [...this.state.checkeds]\n            this.searchResult.forEach((seacrhItem,searchIndex)=>{\n                const index = this.tagList.current.findIndexEx(seacrhItem,this.findInTags)\n                if( index >= 0 ){\n                    this.tagList.current.removeByIndex(index)\n                }\n                checkeds[searchIndex] = false\n                this.checkBoxRefs[searchIndex].current.checked = false\n            })\n            this.setState({checkeds:checkeds})\n        }\n    }\n    onChangeCheckBox(checked, name, param){\n        console.log(\"onChangeCheckBox\",checked, name, param)\n        const seacrhItem = this.searchResult[param]\n        let checkeds = [...this.state.checkeds]\n        checkeds[param] = checked\n        //param.checked = checked\n        const index = this.tagList.current.findIndexEx(seacrhItem,this.findInTags)\n        if(checked){\n            if( index < 0 ){\n                this.tagList.current.add(seacrhItem.name,seacrhItem)\n            }\n        }\n        else{\n            if( index >= 0 ){\n                this.tagList.current.removeByIndex(index)\n            }\n        }\n        this.setState({checkeds:checkeds})\n    }\n\n    onRemove(name,param){\n        console.log(\"onRemove\",name, param)\n        let checkeds = [...this.state.checkeds]\n        this.searchResult.forEach((item,index)=>{\n            if(item.name === param.name && item.company === param.company){\n                checkeds[index] = false\n                if(this.checkBoxRefs[index].current){\n                    this.checkBoxRefs[index].current.checked = false\n                }\n            }\n        })\n        this.setState({checkeds:checkeds})\n    }\n    render() {\n        return (\n            <div className=\"participants\">\n                <div className=\"participants-list\">\n                    <div className=\"participants-list--label\">\n                        参加者\n                    </div>\n                    <div className=\"participants-list--list\">\n                        <TagList ref={this.tagList} onRemove={this.onRemove}/>\n                    </div>\n                    <div className=\"participants-list--button\">\n                        {\n                            this.state.expanded ?\n                            (\n                                <img className=\"participants-list--button_arrow\" src={ArrowUp} alt=\"ArrowUp\" onClick={this.onClickArrowUp}/>\n                            )\n                            :\n                            (\n                                <img className=\"participants-list--button_arrow\" src={ArrowDown} alt=\"ArrowDown\" onClick={this.onClickArrowDown} />\n                            )\n                        }\n                    </div>\n                </div>\n                {\n                    this.state.expanded && \n                    (\n                    <div className=\"participants-search\">\n                        <div className=\"participants-search__input-wrapper\">\n                            <input className=\"participants-search__input\" type=\"search\" placeholder={\"検索\"}/>\n                            <img className=\"participants-search__input-img\" src={Search} alt=\"Search\" onClick={this.onClickSearch} />\n                        </div>\n                        <div className=\"participants-search--result\">\n                            {\n                                this.searchResult.length > 0 &&\n                                <div className=\"participants-search--result-item\" key={0}>\n                                <CheckBox txt = {\"全員選択\"}\n                                    param = {-1}\n                                    checked={this.state.checkAll} \n                                    onChange={this.onChangeCheckBoxAll} \n                                    ref={this.checkBoxRef0}/>\n                                </div>\n                            }\n                            {\n                                this.searchResult.map((item,index)=>(\n                                    <div className=\"participants-search--result-item\" key={index+1}>\n                                        <CheckBox txt={item.name +\" | \"+ item.company} \n                                            param={index} \n                                            checked={this.state.checkeds[index]} \n                                            onChange={this.onChangeCheckBox} \n                                            ref={this.checkBoxRefs[index]}/>\n                                    </div>\n                                ))\n                            }\n                        </div>\n                    </div>\n                    )\n                }\n            </div>\n        )\n    }\n}    \n","import React,{ Component } from \"react\"\r\nimport \"./About.css\"\r\nimport Participants from \"./Participants/Participants\"\r\n\r\n\r\nexport default class About extends Component {\r\n    constructor(props){\r\n        console.log(\"About.constructor\")\r\n        super(props);\r\n        this.state = {\r\n            state:0,\r\n        }\r\n        this.participantsRef = React.createRef()\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"About.componentDidMount\")\r\n        // const tagsStr = sessionStorage.getItem(\"participants\")\r\n        // const tags = JSON.parse(tagsStr)\r\n        // if(tags){\r\n        //    for(const tag of tags){\r\n        //     this.participantsRef.current.add(tag.name,tag.param)\r\n        //    }\r\n        // }\r\n\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"About.componentWillUnmount\")\r\n        //const tags = this.participantsRef.current.get()\r\n        //sessionStorage.setItem(\"participants\",JSON.stringify(tags))\r\n    }\r\n    \r\n    componentDidUpdate(){\r\n        console.log(\"About.componentDidUpdate\")\r\n        //const tags = this.participantsRef.current.get()\r\n        //sessionStorage.setItem(\"participants\",JSON.stringify(tags))\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"about\">\r\n                <Participants ref={this.participantsRef}/>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","import React,{ Component } from \"react\"\r\n\r\nexport default class Contact extends Component {\r\n    constructor(props){\r\n        console.log(\"Contact.constructor\")\r\n        super(props);\r\n        // this.state = {\r\n        //      state:0\r\n        // }\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"Contact.componentDidMount\")\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"Contact.componentWillUnmount\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Contact</h1>\r\n                <a href=\"tel:0000000000\">0000000000</a>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","export default __webpack_public_path__ + \"static/media/FacePositionMask2.646f4e6b.svg\";","import React,{ Component } from \"react\"\r\nimport './Camera.css'\r\nimport FacePositionMask2 from \"./FacePositionMask2.svg\"\r\n\r\nexport default class Camera extends Component {\r\n    constructor(props){\r\n        console.log(\"Camera.constructor\")\r\n        super(props);\r\n        this.state = {\r\n             imageLoaded:false,\r\n             x1:0,\r\n             y1:0,\r\n             x2:0,\r\n             y2:0\r\n        }\r\n        this.inputFile = React.createRef()\r\n        this.imgRef = React.createRef()\r\n        this.canvasRef = React.createRef()\r\n        this.imgMaskRef = React.createRef()\r\n        this.ctx = null\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onClickChoosePhoto = this.onClickChoosePhoto.bind(this)\r\n\r\n        this.imgPosX = 0\r\n        this.imgPosY = 0\r\n        this.imgZoomRate = 1.0\r\n    }\r\n\r\n    // zoomAndMove1(){\r\n    //     this.toucheInfos = {}\r\n\r\n    //     this.canvasRef.current.addEventListener(\"touchstart\",(e)=>{\r\n    //         e.preventDefault()\r\n    //         const rect = this.canvasRef.current.getBoundingClientRect()\r\n    //         const touches = e.changedTouches\r\n    //         //console.log(\"Camera.touchstart\")\r\n    //         let x1 = NaN\r\n    //         let y1 = NaN\r\n    //         let x2 = NaN\r\n    //         let y2 = NaN\r\n    //         let id1=NaN\r\n    //         let id2=NaN\r\n    //         if(touches.length>0){\r\n    //             x1 = touches[0].clientX\r\n\t// \t        y1 = touches[0].clientY\r\n    //             x1 -= rect.left\r\n    //             y1 -= rect.top\r\n    //             id1 = touches[0].identifier\r\n    //         }\r\n    //         if(touches.length>1){\r\n    //             x2 = touches[1].clientX\r\n\t// \t        y2 = touches[1].clientY\r\n    //             x2 -= rect.left\r\n    //             y2 -= rect.top\r\n    //             id2 = touches[1].identifier\r\n    //         }\r\n    //         this.setState({x1:x1,\r\n    //             y1:y1,x2:x2,\r\n    //             y2:y2})\r\n            \r\n    //         const canvasWidth = this.canvasRef.current.width \r\n    //         const canvasHeight = this.canvasRef.current.height\r\n    //         const styleWidth =  320//this.canvasRef.current.style.width\r\n    //         const styleHeight =  320//this.canvasRef.current.style.height\r\n\r\n    //         console.log(`Camera.touchstart:(${x1},${y1},${id1}),(${x2},${y2},${id2})` )\r\n    //         this.ctx.clearRect(0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n    //         this.ctx.beginPath()\r\n    //         this.ctx.arc(x1*canvasWidth/styleWidth,y1*canvasHeight/styleHeight,50,0,2*Math.PI,false)\r\n    //         this.ctx.fillStyle=\"rgba(255,0,0,255)\"\r\n    //         this.ctx.fill()    \r\n    //     })\r\n    //     this.canvasRef.current.addEventListener(\"touchend\",(e)=>{\r\n    //         e.preventDefault()\r\n    //         const rect = this.canvasRef.current.getBoundingClientRect()    \r\n    //         //console.log(\"Camera.touchend\")\r\n    //         const touches = e.changedTouches\r\n\r\n    //         let x1 = NaN\r\n    //         let y1 = NaN\r\n    //         let x2 = NaN\r\n    //         let y2 = NaN\r\n    //         let id1=NaN\r\n    //         let id2=NaN\r\n    //         if(touches.length>0){\r\n    //             x1 = touches[0].clientX\r\n\t// \t        y1 = touches[0].clientY\r\n    //             x1 -= rect.left\r\n    //             y1 -= rect.top\r\n    //             id1 = touches[0].identifier\r\n    //         }\r\n    //         if(touches.length>1){\r\n    //             x2 = touches[1].clientX\r\n\t// \t        y2 = touches[1].clientY\r\n    //             x2 -= rect.left\r\n    //             y2 -= rect.top\r\n    //             id2 = touches[1].identifier\r\n    //         }\r\n    //         this.setState({x1:x1,\r\n    //             y1:y1,x2:x2,\r\n    //             y2:y2})\r\n\r\n    //         const canvasWidth = this.canvasRef.current.width \r\n    //         const canvasHeight = this.canvasRef.current.height\r\n    //         const styleWidth =  320//this.canvasRef.current.style.width\r\n    //         const styleHeight =  320//this.canvasRef.current.style.height\r\n\r\n    //         console.log(`Camera.touchend:(${x1},${y1},${id1}),(${x2},${y2},${id2})` )\r\n\r\n    //         this.ctx.clearRect(0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n    //         this.ctx.beginPath()\r\n    //         this.ctx.arc(x1*canvasWidth/styleWidth,y1*canvasHeight/styleHeight,50,0,2*Math.PI,false)    \r\n    //         this.ctx.fillStyle=\"rgba(255,0,0,255)\"\r\n    //         this.ctx.fill()    \r\n\r\n    //         //console.dir(touches,{depth:null})\r\n    //     })\r\n    //     this.canvasRef.current.addEventListener(\"touchcancel\",(e)=>{\r\n    //         e.preventDefault()\r\n    //         //console.log(\"Camera.touchcancel\")\r\n    //         const rect = this.canvasRef.current.getBoundingClientRect()    \r\n\r\n    //         const touches = e.changedTouches\r\n    //         let x1 = NaN\r\n    //         let y1 = NaN\r\n    //         let x2 = NaN\r\n    //         let y2 = NaN\r\n    //         let id1=NaN\r\n    //         let id2=NaN\r\n    //         if(touches.length>0){\r\n    //             x1 = touches[0].clientX\r\n\t// \t        y1 = touches[0].clientY\r\n    //             x1 -= rect.left\r\n    //             y1 -= rect.top\r\n    //             id1 = touches[0].identifier\r\n    //         }\r\n    //         if(touches.length>1){\r\n    //             x2 = touches[1].clientX\r\n\t// \t        y2 = touches[1].clientY\r\n    //             x2 -= rect.left\r\n    //             y2 -= rect.top\r\n    //             id2 = touches[1].identifier\r\n    //         }\r\n    //         this.setState({x1:x1,\r\n    //             y1:y1,x2:x2,\r\n    //             y2:y2})\r\n\r\n    //         console.log(`Camera.touchcancel:(${x1},${y1},${id1}),(${x2},${y2},${id2})` )\r\n\r\n    //         // const canvasWidth = this.canvasRef.current.width \r\n    //         // const canvasHeight = this.canvasRef.current.height\r\n    //         // const styleWidth =  this.canvasRef.current.style.width\r\n    //         // const styleHeight =  this.canvasRef.current.style.height\r\n\r\n    //         this.ctx.clearRect(0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n\r\n    //         // //console.dir(touches,{depth:null})\r\n    //     })\r\n    //     this.canvasRef.current.addEventListener(\"touchmove\",(e)=>{\r\n    //         e.preventDefault()\r\n    //         const rect = this.canvasRef.current.getBoundingClientRect()    \r\n    //         //console.log(\"Camera.touchmove\")\r\n    //         const touches = e.changedTouches\r\n        \r\n    //         let x1 = NaN\r\n    //         let y1 = NaN\r\n    //         let x2 = NaN\r\n    //         let y2 = NaN\r\n    //         let id1=NaN\r\n    //         let id2=NaN\r\n    //         if(touches.length>0){\r\n    //             x1 = touches[0].clientX\r\n\t// \t        y1 = touches[0].clientY\r\n    //             x1 -= rect.left\r\n    //             y1 -= rect.top\r\n    //             id1 = touches[0].identifier\r\n    //         }\r\n    //         if(touches.length>1){\r\n    //             x2 = touches[1].clientX\r\n\t// \t        y2 = touches[1].clientY\r\n    //             x2 -= rect.left\r\n    //             y2 -= rect.top\r\n    //             id2 = touches[1].identifier\r\n    //         }\r\n    //         this.setState({x1:x1,\r\n    //             y1:y1,x2:x2,\r\n    //             y2:y2})\r\n            \r\n    //         //console.dir(touches,{depth:null})\r\n    //         const canvasWidth = this.canvasRef.current.width \r\n    //         const canvasHeight = this.canvasRef.current.height\r\n    //         const styleWidth =  320//this.canvasRef.current.style.width\r\n    //         const styleHeight =  320//this.canvasRef.current.style.height\r\n\r\n    //         console.log(`Camera.touchmove:(${x1},${y1},${id1}),(${x2},${y2},${id2})` )\r\n\r\n    //         this.ctx.clearRect(0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n    //         this.ctx.beginPath()\r\n    //         this.ctx.arc(x1*canvasWidth/styleWidth,y1*canvasHeight/styleHeight,50,0,2*Math.PI,false)\r\n    //         this.ctx.fillStyle=\"rgba(255,0,0,255)\"\r\n    //         this.ctx.fill()    \r\n\r\n    //         if( !isNaN(x2) && !isNaN(y2)){\r\n    //             this.ctx.beginPath()\r\n    //             this.ctx.arc(x2*canvasWidth/styleWidth,y2*canvasHeight/styleHeight,50,0,2*Math.PI,false)    \r\n    //             this.ctx.fillStyle=\"rgba(255,0,0,255)\"\r\n    //             this.ctx.fill()    \r\n    //         }\r\n    //     })\r\n\r\n    // }\r\n    initZoomAndMove(){\r\n        this.onTouchStart = (e)=>{\r\n            e.preventDefault()\r\n            const rect = this.canvasRef.current.getBoundingClientRect()    \r\n            //console.log(\"Camera.touchstart\")\r\n            const touches = e.changedTouches\r\n\r\n            for(let touch of touches){\r\n                let x = touch.clientX\r\n\t\t        let y = touch.clientY\r\n                x -= rect.left\r\n                y -= rect.top\r\n                let id = touch.identifier\r\n\r\n                this.toucheInfos[id]={x:x,y:y}\r\n            }\r\n        }\r\n        this.onTouchEnd = (e)=>{\r\n            e.preventDefault()\r\n            //const rect = this.canvasRef.current.getBoundingClientRect()    \r\n            //console.log(\"Camera.touchend\")\r\n            const touches = e.changedTouches\r\n\r\n            for(let touch of touches){\r\n                let id = touch.identifier\r\n                delete this.toucheInfos[id]\r\n            }\r\n        }\r\n        this.onTouchCancel = (e)=>{\r\n            e.preventDefault()\r\n            //console.log(\"Camera.touchcancel\")\r\n            //const rect = this.canvasRef.current.getBoundingClientRect()    \r\n\r\n            const touches = e.changedTouches\r\n            for(let touch of touches){\r\n                let id = touch.identifier\r\n                delete this.toucheInfos[id]\r\n            }\r\n        }\r\n        this.onTouchMove = (e)=>{\r\n            e.preventDefault()\r\n            const rect = this.canvasRef.current.getBoundingClientRect()    \r\n            //console.log(\"Camera.touchmove\")\r\n\r\n            const canvasWidth = this.canvasRef.current.width \r\n            const canvasHeight = this.canvasRef.current.height\r\n            const styleWidth =  rect.width//this.canvasRef.current.style.width\r\n            const styleHeight =  rect.height//this.canvasRef.current.style.height\r\n\r\n            const touches = e.changedTouches\r\n\r\n            if( Object.keys(this.toucheInfos).length === 1){\r\n                let prevX=0\r\n                let prevY=0\r\n                let currX=0\r\n                let currY=0\r\n\r\n                // if(Object.keys(this.toucheInfos).length < touches.length){\r\n                //     let exists=true\r\n                //     let ids=[]\r\n                //     for(let touch of touches){\r\n                //         let id = touch.identifier\r\n                //         if(!this.toucheInfos[id]){\r\n                //             console.log(`not exists ${id}`)\r\n                //             exists=false\r\n                //         }\r\n                //         ids.push(id)\r\n                //     }\r\n                //     if(!exists){\r\n                //         console.dir(Object.keys(this.toucheInfos))\r\n                //         console.dir(ids)\r\n                //     }\r\n    \r\n                //     for(let touch of touches){\r\n                //         currX = touch.clientX\r\n                //         currY = touch.clientY\r\n                //         currX -= rect.left\r\n                //         currY -= rect.top\r\n                //         let id = touch.identifier\r\n                //         this.toucheInfos[id]={x:currX,y:currY}\r\n                //     }\r\n                // }\r\n                // else{\r\n                    for(const key of Object.keys(this.toucheInfos)){\r\n                        prevX = this.toucheInfos[key].x\r\n                        prevY = this.toucheInfos[key].y\r\n                    }\r\n\r\n                    for(let touch of touches){\r\n                        let id = touch.identifier\r\n                        if(this.toucheInfos[id]){\r\n                            currX = touch.clientX\r\n                            currY = touch.clientY\r\n                            currX -= rect.left\r\n                            currY -= rect.top\r\n                            this.toucheInfos[id]={x:currX,y:currY}\r\n                        }\r\n                    }\r\n\r\n                    const dx = (currX-prevX) * canvasWidth/styleWidth\r\n                    const dy = (currY-prevY) * canvasHeight/styleHeight\r\n    \r\n                    console.log(`(dx:${dx},dy:${dy})`)\r\n    \r\n                    this.imgPosX += dx\r\n                    this.imgPosY += dy\r\n    \r\n                    this.ctx.drawImage(this.imgRef.current,\r\n                        0,\r\n                        0,\r\n                        this.imgRef.current.width,\r\n                        this.imgRef.current.height,\r\n                        this.imgPosX,\r\n                        this.imgPosY,\r\n                        this.imgRef.current.width * this.imgZoomRate,\r\n                        this.imgRef.current.height * this.imgZoomRate\r\n                        )\r\n                    this.ctx.drawImage(this.imgMaskRef.current,0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n    \r\n                // }\r\n            }\r\n            else if( Object.keys(this.toucheInfos).length === 2){\r\n                let prevX=[]\r\n                let prevY=[]\r\n                for(const key of Object.keys(this.toucheInfos)){\r\n                    prevX.push(this.toucheInfos[key].x)\r\n                    prevY.push(this.toucheInfos[key].y)\r\n                }\r\n                const prevDist = Math.sqrt( Math.pow(prevX[0]-prevX[1],2) + Math.pow(prevY[0]-prevY[1],2))\r\n                let exists=true\r\n                let ids=[]\r\n                for(let touch of touches){\r\n                    let id = touch.identifier\r\n                    if(!this.toucheInfos[id]){\r\n                        console.log(`not exists ${id}`)\r\n                        exists=false\r\n                    }\r\n                    ids.push(id)\r\n                }\r\n                if(!exists){\r\n                    console.dir(Object.keys(this.toucheInfos))\r\n                    console.dir(ids)\r\n                }\r\n\r\n                for(let touch of touches){\r\n                    let x = touch.clientX\r\n                    let y = touch.clientY\r\n                    x -= rect.left\r\n                    y -= rect.top\r\n                    let id = touch.identifier\r\n                    this.toucheInfos[id]={x:x,y:y}\r\n                }\r\n                let currX=[]\r\n                let currY=[]\r\n                for(const key of Object.keys(this.toucheInfos)){\r\n                    currX.push(this.toucheInfos[key].x)\r\n                    currY.push(this.toucheInfos[key].y)\r\n                }\r\n                const currDist = Math.sqrt( Math.pow(currX[0]-currX[1],2) + Math.pow(currY[0]-currY[1],2))\r\n                const zoomRate = currDist/prevDist\r\n\r\n                const midX = (currX[0] + currX[1])/2\r\n                const midY = (currY[0] + currY[1])/2\r\n\r\n                const midXInCanvas = midX * canvasWidth / styleWidth\r\n                const midYInCanvas = midY * canvasHeight / styleHeight\r\n\r\n                //const prevWidth = this.imgRef.current.width * this.imgZoomRate\r\n                //const prevHeight = this.imgRef.current.height * this.imgZoomRate\r\n\r\n                this.imgZoomRate *= zoomRate\r\n\r\n                this.imgPosX = midXInCanvas + (this.imgPosX - midXInCanvas) * zoomRate\r\n                this.imgPosY = midYInCanvas + (this.imgPosY - midYInCanvas) * zoomRate\r\n\r\n                //const currWidth = this.imgRef.current.width * this.imgZoomRate\r\n                //const currHeight = this.imgRef.current.height * this.imgZoomRate\r\n\r\n                //const dx = (prevWidth-currWidth)/2.0 \r\n                //const dy = (prevHeight-currHeight)/2.0 \r\n                //this.imgPosX += dx\r\n                //this.imgPosY += dy\r\n\r\n                this.ctx.drawImage(this.imgRef.current,\r\n                    0,\r\n                    0,\r\n                    this.imgRef.current.width,\r\n                    this.imgRef.current.height,\r\n                    this.imgPosX,\r\n                    this.imgPosY,\r\n                    this.imgRef.current.width * this.imgZoomRate,\r\n                    this.imgRef.current.height * this.imgZoomRate\r\n                    )\r\n                this.ctx.drawImage(this.imgMaskRef.current,0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n\r\n                console.log(`(rate:${zoomRate} imgPosX:${this.imgPosX} imgPosY:${this.imgPosY} )`)\r\n            }\r\n            else{\r\n                for(let touch of touches){\r\n                    let currX = touch.clientX\r\n                    let currY = touch.clientY\r\n                    currX -= rect.left\r\n                    currY -= rect.top\r\n                    let id = touch.identifier\r\n                    this.toucheInfos[id]={x:currX,y:currY}\r\n                }\r\n            }\r\n        }\r\n        this.toucheInfos = {}\r\n    }\r\n    addZoomAndMoveHandlers(){\r\n        this.toucheInfos = {}\r\n        this.canvasRef.current.addEventListener(\"touchstart\",this.onTouchStart,false)\r\n        this.canvasRef.current.addEventListener(\"touchend\",this.onTouchEnd,false)\r\n        this.canvasRef.current.addEventListener(\"touchcancel\",this.onTouchCancel,false)\r\n        this.canvasRef.current.addEventListener(\"touchmove\",this.onTouchMove,false)\r\n    }\r\n    removeZoomAndMoveHandlers(){\r\n        this.toucheInfos = {}\r\n        this.canvasRef.current.removeEventListener(\"touchstart\",this.onTouchStart)\r\n        this.canvasRef.current.removeEventListener(\"touchend\",this.onTouchEnd)\r\n        this.canvasRef.current.removeEventListener(\"touchcancel\",this.onTouchCancel)\r\n        this.canvasRef.current.removeEventListener(\"touchmove\",this.onTouchMove)\r\n    }\r\n    // zoomAndMove2(){\r\n\r\n    //     this.canvasRef.current.addEventListener(\"touchstart\",this.onTouchStart)\r\n    //     this.canvasRef.current.addEventListener(\"touchend\",this.onTouchEnd)\r\n    //     this.canvasRef.current.addEventListener(\"touchcancel\",this.onTouchCancel)\r\n    //     this.canvasRef.current.addEventListener(\"touchmove\",this.onTouchMove)\r\n    // }\r\n    // zoomAndMove3(){\r\n    //     this.toucheInfos = {}\r\n\r\n    //     this.canvasRef.current.addEventListener(\"touchstart\",(e)=>{\r\n    //         e.preventDefault()\r\n    //     })\r\n    //     this.canvasRef.current.addEventListener(\"touchend\",(e)=>{\r\n    //         e.preventDefault()\r\n    //         const touches = e.changedTouches\r\n    //         for(let touch of touches){\r\n    //             let id = touch.identifier\r\n    //             delete this.toucheInfos[id]\r\n    //         }\r\n    //     })\r\n    //     this.canvasRef.current.addEventListener(\"touchcancel\",(e)=>{\r\n    //         e.preventDefault()\r\n    //         const touches = e.changedTouches\r\n    //         for(let touch of touches){\r\n    //             let id = touch.identifier\r\n    //             delete this.toucheInfos[id]\r\n    //         }\r\n    //     })\r\n    //     this.canvasRef.current.addEventListener(\"touchmove\",(e)=>{\r\n    //         e.preventDefault()\r\n    //         const rect = this.canvasRef.current.getBoundingClientRect()    \r\n    //         //console.log(\"Camera.touchmove\")\r\n    //         const touches = e.changedTouches\r\n\r\n    //         if( touches.length === 1 && Object.keys(this.toucheInfos).length === 1 ){\r\n    //             let prevX=0\r\n    //             let prevY=0\r\n    //             let currX=0\r\n    //             let currY=0\r\n    //             for(const key of Object.keys(this.toucheInfos)){\r\n    //                 prevX = this.toucheInfos[key].x\r\n    //                 prevY = this.toucheInfos[key].y\r\n    //             }\r\n    //             this.toucheInfos={}\r\n    //             for(let touch of touches){\r\n    //                 currX = touch.clientX\r\n    //                 currY = touch.clientY\r\n    //                 currX -= rect.left\r\n    //                 currY -= rect.top\r\n    //                 let id = touch.identifier\r\n    //                 this.toucheInfos[id]={x:currX,y:currY}\r\n    //             }\r\n    //             const dx = currX-prevX\r\n    //             const dy = currY-prevY\r\n\r\n    //             console.log(`(dx:${dx},dy:${dy})`)\r\n\r\n    //             this.imgPosX += dx\r\n    //             this.imgPosY += dy\r\n\r\n    //             this.ctx.drawImage(this.imgRef.current,\r\n    //                 0,\r\n    //                 0,\r\n    //                 this.imgRef.current.width,\r\n    //                 this.imgRef.current.height,\r\n    //                 this.imgPosX,\r\n    //                 this.imgPosY,\r\n    //                 this.imgRef.current.width * this.imgZoomRate,\r\n    //                 this.imgRef.current.height * this.imgZoomRate\r\n    //                 )\r\n    //             this.ctx.drawImage(this.imgMaskRef.current,0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n    //         }\r\n    //         else if( touches.length === 2 && Object.keys(this.toucheInfos).length === 2 ){\r\n    //             let prevX=[]\r\n    //             let prevY=[]\r\n    //             for(const key of Object.keys(this.toucheInfos)){\r\n    //                 prevX.push(this.toucheInfos[key].x)\r\n    //                 prevY.push(this.toucheInfos[key].y)\r\n    //             }\r\n    //             const prevDist = Math.sqrt( Math.pow(prevX[0]-prevX[1],2) + Math.pow(prevY[0]-prevY[1],2))\r\n\r\n    //             this.toucheInfos={}\r\n    //             for(let touch of touches){\r\n    //                 let x = touch.clientX\r\n    //                 let y = touch.clientY\r\n    //                 x -= rect.left\r\n    //                 y -= rect.top\r\n    //                 let id = touch.identifier\r\n    //                 this.toucheInfos[id]={x:x,y:y}\r\n    //             }\r\n    //             let currX=[]\r\n    //             let currY=[]\r\n    //             for(const key of Object.keys(this.toucheInfos)){\r\n    //                 currX.push(this.toucheInfos[key].x)\r\n    //                 currY.push(this.toucheInfos[key].y)\r\n    //             }\r\n    //             const currDist = Math.sqrt( Math.pow(currX[0]-currX[1],2) + Math.pow(currY[0]-currY[1],2))\r\n    //             const zoomRate = currDist/prevDist\r\n    //             const prevWidth = this.imgRef.current.width * this.imgZoomRate\r\n    //             const prevHeight = this.imgRef.current.width * this.imgZoomRate\r\n\r\n    //             this.imgZoomRate *= zoomRate\r\n\r\n    //             const currWidth = this.imgRef.current.width * this.imgZoomRate\r\n    //             const currHeight = this.imgRef.current.width * this.imgZoomRate\r\n\r\n    //             const dx = (prevWidth/currWidth)/2.0\r\n    //             const dy = (prevHeight/currHeight)/2.0\r\n\r\n    //             this.imgPosX += dx\r\n    //             this.imgPosY += dy\r\n\r\n    //             this.ctx.drawImage(this.imgRef.current,\r\n    //                 0,\r\n    //                 0,\r\n    //                 this.imgRef.current.width,\r\n    //                 this.imgRef.current.height,\r\n    //                 this.imgPosX,\r\n    //                 this.imgPosY,\r\n    //                 this.imgRef.current.width * this.imgZoomRate,\r\n    //                 this.imgRef.current.height * this.imgZoomRate\r\n    //                 )\r\n    //             this.ctx.drawImage(this.imgMaskRef.current,0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n\r\n    //             console.log(`(rate:${zoomRate})`)\r\n    //         }\r\n    //         else{\r\n    //             this.toucheInfos={}\r\n    //             for(let touch of touches){\r\n    //                 let currX = touch.clientX\r\n    //                 let currY = touch.clientY\r\n    //                 currX -= rect.left\r\n    //                 currY -= rect.top\r\n    //                 let id = touch.identifier\r\n    //                 this.toucheInfos[id]={x:currX,y:currY}\r\n    //             }\r\n    //         }\r\n    //     })\r\n    // }\r\n    // zoomAndMove4(){\r\n    //     this.toucheInfos = {}\r\n\r\n    //     this.canvasRef.current.addEventListener(\"touchstart\",(e)=>{\r\n    //         e.preventDefault()\r\n    //         console.log(\"touchstart\")\r\n    //         const touches = e.changedTouches\r\n    //         for(let touch of touches){\r\n    //             let currX = touch.clientX\r\n    //             let currY = touch.clientY\r\n    //             let id = touch.identifier\r\n    //             this.toucheInfos[id]={x:currX,y:currY}\r\n    //         }\r\n    //     })\r\n    //     this.canvasRef.current.addEventListener(\"touchend\",(e)=>{\r\n    //         e.preventDefault()\r\n    //         console.log(\"touchend\")\r\n    //         const touches = e.changedTouches\r\n    //         console.dir(touches,{depth:null})\r\n    //         for(let touch of touches){\r\n    //             //let currX = touch.clientX\r\n    //             //let currY = touch.clientY\r\n    //             let id = touch.identifier\r\n    //             if(this.toucheInfos[id]){\r\n    //                 delete this.toucheInfos[id]\r\n    //             }\r\n    //             //this.toucheInfos[id]={x:currX,y:currY}\r\n    //         }\r\n    //     })\r\n    //     this.canvasRef.current.addEventListener(\"touchcancel\",(e)=>{\r\n    //         e.preventDefault()\r\n    //         console.log(\"touchcancel\")\r\n    //         const touches = e.changedTouches\r\n    //         console.dir(touches,{depth:null})\r\n    //         for(let touch of touches){\r\n    //             //let currX = touch.clientX\r\n    //             //let currY = touch.clientY\r\n    //             let id = touch.identifier\r\n    //             if(this.toucheInfos[id]){\r\n    //                 delete this.toucheInfos[id]\r\n    //             }\r\n    //             //this.toucheInfos[id]={x:currX,y:currY}\r\n    //         }\r\n    //     })\r\n    //     this.canvasRef.current.addEventListener(\"touchmove\",(e)=>{\r\n    //         console.log(\"touchmove\")\r\n    //         e.preventDefault()\r\n    //         const touches = e.changedTouches\r\n    //         if(touches.length !== Object.keys(this.toucheInfos).length){\r\n    //             console.dir(Object.keys(this.toucheInfos))\r\n    //             console.dir(touches)\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    componentDidMount(){\r\n        console.log(\"Camera.componentDidMount\")\r\n        this.canvasRef.current.width=1080\r\n        this.canvasRef.current.height=1080\r\n        this.ctx = this.canvasRef.current.getContext(\"2d\")\r\n\r\n        this.initZoomAndMove()\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"Camera.componentWillUnmount\")\r\n    }\r\n    onChange(e){\r\n        console.log(\"onChange\")\r\n        console.dir(e,{depth:null})\r\n        if(e.target.files.length){\r\n            const file = e.target.files[0]\r\n            const fr = new FileReader()\r\n            fr.addEventListener(\"load\",(e)=>{\r\n                const url = fr.result\r\n                //alert(url)\r\n                this.imgRef.current.src = url\r\n                // this.imgRef.current.width=300\r\n                // this.imgRef.current.height=300\r\n                // if(this.imgRef.current.classList.contains(\"camera--hidden\")){\r\n                //     this.imgRef.current.classList.remove(\"camera--hidden\")\r\n                // }\r\n                this.imgRef.current.onload=()=>{\r\n                    console.log(`canvasRef.current.width:${this.canvasRef.current.width}`)\r\n                    console.log(`canvasRef.current.height:${this.canvasRef.current.height}`)\r\n                    console.log(`imgRef.current.width:${this.imgRef.current.width}`)\r\n                    console.log(`imgRef.current.height:${this.imgRef.current.height}`)\r\n                    console.log(`imgMaskRef.current.width:${this.imgMaskRef.current.width}`)\r\n                    console.log(`imgMaskRef.current.height:${this.imgMaskRef.current.height}`)\r\n            \r\n                    const rateW = this.canvasRef.current.width / this.imgRef.current.width\r\n                    const rateH = this.canvasRef.current.height / this.imgRef.current.height\r\n                    const rate = rateW < rateH ? rateW : rateH\r\n    \r\n                    console.log(`rate:${rate}`)\r\n    \r\n                    const dstWidth = this.imgRef.current.width * rate\r\n                    const dstHeight = this.imgRef.current.height * rate\r\n                    console.log(`dstWidth:${dstWidth}`)\r\n                    console.log(`dstHeight:${dstHeight}`)\r\n    \r\n                    const dstPosX = this.canvasRef.current.width/2 - dstWidth/2\r\n                    const dstPosY = this.canvasRef.current.height/2 - dstHeight/2\r\n                    console.log(`dstPosX:${dstPosX}`)\r\n                    console.log(`dstPosY:${dstPosY}`)\r\n    \r\n                    this.ctx.drawImage(this.imgRef.current,\r\n                        0,\r\n                        0,\r\n                        this.imgRef.current.width,\r\n                        this.imgRef.current.height,\r\n                        dstPosX,\r\n                        dstPosY,\r\n                        dstWidth,\r\n                        dstHeight\r\n                        )\r\n                    this.ctx.drawImage(this.imgMaskRef.current,0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n\r\n                    this.imgPosX = dstPosX\r\n                    this.imgPosY = dstPosY\r\n                    this.imgZoomRate = rate\r\n                    // this.ctx.beginPath()\r\n                    // this.ctx.arc(540,540,100,0,2*Math.PI,true)\r\n                    // this.ctx.fillStyle=\"rgba(255,0,0,255)\"\r\n                    // this.ctx.fill()        \r\n\r\n                    this.imgRef.current.onload = ()=>{}\r\n                    this.setState({imageLoaded:true})\r\n\r\n                    this.removeZoomAndMoveHandlers()\r\n                    this.addZoomAndMoveHandlers()\r\n                }\r\n                \r\n            })\r\n            fr.readAsDataURL(file)\r\n        }\r\n    }\r\n    onClickChoosePhoto(e){\r\n        this.inputFile.current.click()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Camera</h1>\r\n                <div>\r\n                    <input type=\"file\" className=\"camera--hidden\" ref={this.inputFile} onChange={this.onChange} accept=\"image/png , image/jpeg\"/>\r\n                    <button onClick={this.onClickChoosePhoto}>choose photo</button>\r\n                </div>\r\n                <div>\r\n                    <img className=\"camera--img camera--hidden\" alt=\"img\" ref={this.imgRef} />\r\n                </div>\r\n                <div>\r\n                    <canvas className=\"camera--canvas\" ref={this.canvasRef}></canvas>\r\n                    <img src={FacePositionMask2} alt=\"mask\" ref={this.imgMaskRef} className=\"camera--hidden\"/> \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","import React,{ Component } from \"react\"\r\nimport './Camera2.css'\r\nimport FacePositionMask2 from \"./FacePositionMask2.svg\"\r\n\r\nexport default class Camera2 extends Component {\r\n    constructor(props){\r\n        console.log(\"Camera2.constructor\")\r\n        super(props);\r\n        this.state = {\r\n             takeButtonEnable:false,\r\n             retakeButtonEnable:false,\r\n             startCameraButtonEnable:false,\r\n        }\r\n        this.videoRef = React.createRef()\r\n        this.canvasRef = React.createRef()\r\n        this.imgMaskRef = React.createRef()\r\n        this.onClickTake = this.onClickTake.bind(this)\r\n        this.onClickRetake = this.onClickRetake.bind(this)\r\n        this.onClickStartCamera = this.onClickStartCamera.bind(this)\r\n        this.ctx=null\r\n    }\r\n    startCamera(){\r\n        const mediaDevices = navigator.mediaDevices || ((navigator.mozGetUserMedia || navigator.webkitGetUserMedia) ? {\r\n            getUserMedia: function(c) {\r\n              return new Promise(function(y, n) {\r\n                (navigator.mozGetUserMedia ||\r\n                 navigator.webkitGetUserMedia).call(navigator, c, y, n);\r\n              });\r\n            }\r\n         } : null);\r\n         \r\n        if(mediaDevices){\r\n            mediaDevices.getUserMedia({\r\n                audio:false,\r\n                //video:true\r\n                video:{\r\n                    width:1080,\r\n                    height:1080,\r\n                    facingMode: \"user\"\r\n                }\r\n            }).then((stream)=>{\r\n                console.log(\"then\")\r\n                console.dir(stream,{depth:null})\r\n                this.videoRef.current.onerror = (e)=>{\r\n                    alert(e)\r\n                    this.videoRef.current.onerror=()=>{}\r\n                }\r\n                this.videoRef.current.srcObject = stream\r\n                //this.videoRef.current.play()\r\n                this.setState({\r\n                    takeButtonEnable:true,\r\n                    retakeButtonEnable:false,\r\n                    startCameraButtonEnable:false\r\n                })\r\n            }).catch((error)=>{\r\n                console.log(error)\r\n                console.dir(error)\r\n                this.setState({\r\n                    takeButtonEnable:false,\r\n                    retakeButtonEnable:false,\r\n                    startCameraButtonEnable:true\r\n                })\r\n                alert(error)\r\n            })\r\n        }\r\n        else{\r\n            console.log(\"getUserMedia() not supported.\");\r\n\r\n            alert(\"getUserMedia() not supported.\")\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"Camera2.componentDidMount\")\r\n\r\n        this.canvasRef.current.width=1080\r\n        this.canvasRef.current.height=1080\r\n        this.ctx = this.canvasRef.current.getContext(\"2d\")\r\n\r\n        this.videoRef.current.addEventListener(\"loadedmetadata\",(e)=>{\r\n            console.log(\"loadedmetadata\")\r\n            //this.videoRef.current.play()\r\n        })\r\n        this.videoRef.current.addEventListener(\"loadeddata\",(e)=>{\r\n            console.log(\"loadeddata\")\r\n            //this.videoRef.current.play()\r\n        })\r\n        this.startCamera()\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"Camera2.componentWillUnmount\")\r\n        try{\r\n            this.videoRef.current.pause()\r\n        }\r\n        catch(error){\r\n\r\n        }\r\n    }\r\n    onClickTake(e){\r\n        this.videoRef.current.pause()\r\n        console.log(`this.imgMaskRef.current.width:${this.imgMaskRef.current.width}`)\r\n        console.log(`this.imgMaskRef.current.height:${this.imgMaskRef.current.height}`)\r\n        this.ctx.drawImage(this.videoRef.current,0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n        this.ctx.drawImage(this.imgMaskRef.current,0,0,this.canvasRef.current.width,this.canvasRef.current.height)\r\n        if(!this.videoRef.current.classList.contains(\"camera2--hidden\")){\r\n            this.videoRef.current.classList.add(\"camera2--hidden\")\r\n        }\r\n        if(this.canvasRef.current.classList.contains(\"camera2--hidden\")){\r\n            this.canvasRef.current.classList.remove(\"camera2--hidden\")\r\n        }\r\n        this.setState({\r\n            takeButtonEnable:false,\r\n            retakeButtonEnable:true,\r\n        })\r\n    }\r\n    onClickRetake(e){\r\n        if(this.videoRef.current.classList.contains(\"camera2--hidden\")){\r\n            this.videoRef.current.classList.remove(\"camera2--hidden\")\r\n        }\r\n        if(!this.canvasRef.current.classList.contains(\"camera2--hidden\")){\r\n            this.canvasRef.current.classList.add(\"camera2--hidden\")\r\n        }\r\n        this.videoRef.current.play()\r\n        this.setState({\r\n            takeButtonEnable:true,\r\n            retakeButtonEnable:false,\r\n        })\r\n    }\r\n    onClickStartCamera(e){\r\n        this.startCamera()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Camera2</h1>\r\n                <div>\r\n                    <video className=\"camera2--video\" ref={this.videoRef} autoPlay={true} playsInline={true} muted={true}></video>\r\n                </div>\r\n                <div>\r\n                    <canvas className=\"camera2--canvas camera2--hidden\" ref={this.canvasRef}></canvas>\r\n                    <img src={FacePositionMask2} alt=\"mask\" ref={this.imgMaskRef} className=\"camera2--hidden\"/> \r\n                </div>\r\n                <div>\r\n                    <button onClick={this.onClickTake} disabled={!this.state.takeButtonEnable}>シャッター</button>\r\n                    <button onClick={this.onClickRetake} disabled={!this.state.retakeButtonEnable}>撮り直し</button>\r\n                    <button onClick={this.onClickStartCamera} disabled={!this.state.startCameraButtonEnable}>カメラリスタート</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","import React,{ Component } from \"react\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class NotFound extends Component {\r\n    constructor(props){\r\n        console.log(\"NotFound.constructor\")\r\n        super(props);\r\n        // this.state = {\r\n        //      state:0\r\n        // }\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"NotFound.componentDidMount\")\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"NotFound.componentWillUnmount\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>NotFound</h1>\r\n                <p>\r\n                    <Link to=\"/\">Go to the home page</Link>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n","import React ,{ Component } from \"react\"\n//import logo from './logo.svg';\nimport './App.css';\n\nimport { Route, Routes, Link, Outlet, useNavigate } from 'react-router-dom'\n\nimport Home from './Home'\nimport Page1 from './Page1'\nimport Me from './Me'\nimport Others from './Others'\nimport About from './About'\nimport Contact from './Contact'\nimport Camera from './Camera'\nimport Camera2 from './Camera2'\nimport NotFound from './NotFound'\n\nfunction Layout() {\n  const navigate = useNavigate()\n  const handleClick = (e)=>{\n    if(e.target.name===\"home\"){\n      navigate(\"/\")\n    }\n    else if(e.target.name===\"page1\"){\n      navigate(\"/page1\")\n    }\n    else if(e.target.name===\"about\"){\n      navigate(\"/about\")\n    }\n    else if(e.target.name===\"contact\"){\n      navigate(\"/contact\")\n    }\n    else if(e.target.name===\"camera\"){\n      navigate(\"/camera\")\n    }\n    else if(e.target.name===\"camera2\"){\n      navigate(\"/camera2\")\n    }\n  }\n  return (\n    <div>\n      {/* A \"layout route\" is a good place to put markup you want to\n          share across all the pages on your site, like navigation. */}\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/page1\">DatePicker</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li>\n            <Link to=\"/contact\">Contact</Link>\n          </li>\n          <li>\n            <Link to=\"/camera\">Camera</Link>\n          </li>\n          <li>\n            <Link to=\"/camera2\">Camera2</Link>\n          </li>\n          <li>\n            <Link to=\"/nothing-here\">Nothing Here</Link>\n          </li>\n        </ul>\n        <div>\n        <button onClick={handleClick} name=\"home\">Home</button>\n        <button onClick={handleClick} name=\"page1\">DatePicker</button>\n        <button onClick={handleClick} name=\"about\">About</button>\n        <button onClick={handleClick} name=\"contact\">Contact</button>\n        <button onClick={handleClick} name=\"camera\">Camera</button>\n        <button onClick={handleClick} name=\"camera2\">Camera2</button>\n        </div>\n      </nav>\n\n      <hr />\n\n      {/* An <Outlet> renders whatever child route is currently active,\n          so you can think about this <Outlet> as a placeholder for\n          the child routes we defined above. */}\n      <Outlet />\n    </div>\n  );\n}\n\nclass App extends Component{\n  constructor(props){\n    console.log(\"App.constructor\")\n    super(props);\n    // this.state = {\n    //      state:0\n    // }\n    //this.handleClick = this.handleClick.bind(this)\n  }\n  componentDidMount(){\n      console.log(\"App.componentDidMount\")  \n  }\n  componentWillUnmount(){\n    console.log(\"App.componentWillUnmount\")\n  }\n  // handleClick(e){\n  //   if(e.target.name===\"home\"){\n  //     this.props.navigate(\"/\")\n  //   }\n  //   else if(e.target.name===\"page1\"){\n  //     this.props.navigate(\"/page1\")\n  //   }\n  //   else if(e.target.name===\"about\"){\n  //     this.props.navigate(\"/about\")\n  //   }\n  //   else if(e.target.name===\"contact\"){\n  //     this.props.navigate(\"/contact\")\n  //   }\n  // }\n  render() {\n    return (\n      <div>\n        <h1>Hello React Pwa v0.0006</h1>\n        {\n          /*\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/page1\">Page1</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li>\n            <Link to=\"/contact\">Contact</Link>\n          </li>\n        </ul>\n          */\n        }\n        <div>\n          {/*\n        <button onClick={this.handleClick} name=\"home\">Home</button>\n        <button onClick={this.handleClick} name=\"page1\">Page1</button>\n        <button onClick={this.handleClick} name=\"about\">About</button>\n        <button onClick={this.handleClick} name=\"contact\">Contact</button>\n           */\n          }\n        </div>\n        <Routes>\n          <Route exact path=\"/\"  element={<Layout/>}>\n            <Route index element={<Home/>}/>\n            <Route path=\"page1\" element={<Page1 />} />\n            <Route path=\"page1/:id\" element={<Others/>}/>\n            <Route path=\"page1/me\" element={<Me/>}/>\n            <Route path=\"about\" element={<About />} />\n            <Route path=\"contact\" element={<Contact />} />\n            <Route path=\"camera\" element={<Camera />} />\n            <Route path=\"camera2\" element={<Camera2 />} />\n             {/* Using path=\"*\"\" means \"match anything\", so this route\n                acts like a catch-all for URLs that we don't have explicit\n                routes for. */}\n            <Route path=\"*\" element={<NotFound />} />\n          </Route>\n        </Routes> \n      </div>    \n    )\n  }\n}\n\n// function App() {\n//   const navigate = useNavigate()\n//   const handleClick = (e) => {\n//     console.log(e)\n//     if(e.target.name===\"home\"){\n//       navigate(\"/\")\n//     }\n//     else if(e.target.name===\"page1\"){\n//       navigate(\"/page1\")\n//     }\n//     else if(e.target.name===\"about\"){\n//       navigate(\"/about\")\n//     }\n//     else if(e.target.name===\"contact\"){\n//       navigate(\"/contact\")\n//     }\n//   }\n//   return(\n//     <div>\n//     <h1>Hello React Pwa</h1>\n//     <ul>\n//       <li>\n//         <Link to=\"/\">Home</Link>\n//       </li>\n//       <li>\n//         <Link to=\"/page1\">Page1</Link>\n//       </li>\n//       <li>\n//         <Link to=\"/about\">About</Link>\n//       </li>\n//       <li>\n//         <Link to=\"/contact\">Contact</Link>\n//       </li>\n//     </ul>\n//     <div>\n//     <button onClick={handleClick} name=\"home\">Home</button>\n//     <button onClick={handleClick} name=\"page1\">Page1</button>\n//     <button onClick={handleClick} name=\"about\">About</button>\n//     <button onClick={handleClick} name=\"contact\">Contact</button>\n//     </div>\n//     <Routes>\n//       <Route exact path=\"/\"  element={<Home/>}/>\n//       <Route path=\"/page1\" element={<Page1/>}/>\n//       <Route path=\"/about\" element={<About/>}/>\n//       <Route path=\"/contact\" element={<Contact/>}/>\n//       <Route element={<NotFound/>}/>\n//     </Routes>\n//     </div>\n//   )\n// }\n\n\n//\n//もとのApp\n//\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, useNavigate } from 'react-router-dom'\n\nfunction AppWithNavigate(){\n  const navigate = useNavigate()\n  return (\n    <App navigate = {navigate}/>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"react-pwa\">\n      <AppWithNavigate/>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n//serviceWorkerRegistration.unregister();\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}